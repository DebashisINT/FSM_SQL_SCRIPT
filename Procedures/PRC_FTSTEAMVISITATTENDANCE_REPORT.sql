--EXEC PRC_FTSTEAMVISITATTENDANCE_REPORT '2022-03-01','2022-03-25','','','',378
--EXEC PRC_FTSTEAMVISITATTENDANCE_REPORT '2022-03-09','2022-03-09','1','EMA0000008,EMA0000016,EMA0000012,EMM0000002,EMA0000020','1,2,3,4,5,6,7,8',378

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSTEAMVISITATTENDANCE_REPORT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSTEAMVISITATTENDANCE_REPORT] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSTEAMVISITATTENDANCE_REPORT]
(
@FROMDATE NVARCHAR(10)=NULL,
@TODATE NVARCHAR(10)=NULL,
@BRANCHID NVARCHAR(MAX)=NULL,
@EMPID NVARCHAR(MAX)=NULL,
@CHANNELID NVARCHAR(MAX)=NULL,
@USERID INT
) --WITH ENCRYPTION
AS
/****************************************************************************************************************************************************************************
Written by : Debashis Talukder ON 04/03/2022
Module	   : Dynamic Team Visit Attendance.Refer: 0024720
1.0		v2.0.28		Debashis	25/03/2022		FSM : Team Visit report and Employee Attendance report Chages required:
												'Total Days absent' should be calculated (Total working days - (minus) Total Days Present).Refer: 0024763
****************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	DECLARE @DAYCOUNT INT,@LOOPCOUNT INT,@FIRSTTIME BIT=1
	DECLARE @SqlStrTable NVARCHAR(MAX)
	DECLARE @COLUMN_DATE NVARCHAR(10)=@FROMDATE
	DECLARE @SLHEADID BIGINT,@PARENTID BIGINT

	DECLARE @days AS INT,@FIRSTDATEOFMONTH DATETIME,@CURRENTDATEOFMONTH DATETIME,@EMP_IDs NVARCHAR(MAX)
	SELECT @FIRSTDATEOFMONTH = @FROMDATE
	SELECT @CURRENTDATEOFMONTH = @TODATE

	;WITH CTE AS (SELECT 1 AS DAYID,@FIRSTDATEOFMONTH AS FROMDATE,DATENAME(DW, @FIRSTDATEOFMONTH) AS DAYNAME
	UNION ALL
	SELECT CTE.DAYID + 1 AS DAYID,DATEADD(D, 1 ,CTE.FROMDATE),DATENAME(DW, DATEADD(D, 1 ,CTE.FROMDATE)) AS DAYNAME
	FROM CTE
	WHERE DATEADD(D,1,CTE.FROMDATE) <= @CURRENTDATEOFMONTH
	)
	SELECT FROMDATE AS SUNDAYDATE,DAYNAME INTO #TMPSHOWSUNDAY
	FROM CTE
	WHERE DAYNAME IN ('Sunday')
	OPTION (MAXRECURSION 1000)

	SELECT @DAYCOUNT=DATEDIFF(D, @FROMDATE, @TODATE) +1

	SET @days=(SELECT @DAYCOUNT-count(DAYNAME) FROM #TMPSHOWSUNDAY)

	SET @EMP_IDs=@EMPID
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#EMPLOYEE_LIST') AND TYPE IN (N'U'))
		DROP TABLE #EMPLOYEE_LIST
	CREATE TABLE #EMPLOYEE_LIST (emp_contactId NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS)
	IF @EMP_IDs <> ''
		BEGIN
			SET @EMP_IDs = REPLACE(''''+@EMP_IDs+'''',',',''',''')
			SET @SqlStrTable=''
			SET @SqlStrTable='INSERT INTO #EMPLOYEE_LIST SELECT emp_contactId from tbl_master_employee where emp_contactId in('+@EMP_IDs+')'
			EXEC SP_EXECUTESQL @SqlStrTable
		END
	ELSE
		BEGIN
			SET @SqlStrTable=''
			SET @SqlStrTable='INSERT INTO #EMPLOYEE_LIST SELECT emp_contactId FROM tbl_master_employee '
			EXEC SP_EXECUTESQL @SqlStrTable
		END

	IF OBJECT_ID('tempdb..#CHANNEL_LIST') IS NOT NULL
		DROP TABLE #CHANNEL_LIST
	CREATE TABLE #CHANNEL_LIST (CH_ID BIGINT)

	IF @CHANNELID <> ''
		BEGIN
			SET @CHANNELID=REPLACE(@CHANNELID,'''','')
			SET @SqlStrTable=''
			SET @SqlStrTable='INSERT INTO #CHANNEL_LIST SELECT CH_ID FROM Employee_Channel WHERE CH_ID IN('+@CHANNELID+')'
			EXEC SP_EXECUTESQL @SqlStrTable
		END

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#TMPMASTEMPLOYEE') AND TYPE IN (N'U'))
		DROP TABLE #TMPMASTEMPLOYEE
	CREATE TABLE #TMPMASTEMPLOYEE(EMP_ID NUMERIC(18, 0) NOT NULL,EMP_UNIQUECODE VARCHAR(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,EMP_CONTACTID NVARCHAR(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL)
	CREATE NONCLUSTERED INDEX IX1 ON #TMPMASTEMPLOYEE (EMP_CONTACTID ASC)

	INSERT INTO #TMPMASTEMPLOYEE SELECT EMP_ID,EMP_UNIQUECODE,EMP_CONTACTID FROM tbl_master_employee

	IF OBJECT_ID('tempdb..#TMPEHEADING') IS NOT NULL
		DROP TABLE #TMPEHEADING
	CREATE TABLE #TMPEHEADING
		(
			HEADID BIGINT,HEADNAME NVARCHAR(800),HEADSHRTNAME NVARCHAR(800),PARRENTID BIGINT
		)
	
	IF OBJECT_ID('tempdb..#EMPLOYEEATTENDANCE') IS NOT NULL
	 DROP TABLE #EMPLOYEEATTENDANCE
	
	CREATE TABLE #EMPLOYEEATTENDANCE (BRANCH_ID BIGINT,BRANCH_DESCRIPTION NVARCHAR(300),USERID BIGINT,EMPCODE NVARCHAR(200),EMPID NVARCHAR(200),EMPNAME NVARCHAR(300),STATEID BIGINT,STATE NVARCHAR(300),
	DEG_ID BIGINT,DESIGNATION NVARCHAR(300),DATEOFJOINING NVARCHAR(10),CONTACTNO NVARCHAR(100),CH_ID BIGINT,CHANNEL NVARCHAR(100),REPORTTOID NVARCHAR(100),REPORTTOUID NVARCHAR(100),REPORTTO NVARCHAR(300),
	RPTTODESG NVARCHAR(100))
	CREATE NONCLUSTERED INDEX IX1 ON #EMPLOYEEATTENDANCE (BRANCH_ID,EMPCODE)

	--FOR REPORT HEADER
	INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT 1,'Employee Details [All Unit(s)]','Employee Details [All Unit(s)]',0
	UNION ALL
	SELECT 2,'Branch','BRANCH_DESCRIPTION',1	
	UNION ALL
	SELECT 3,'WD ID','REPORTTOUID',1
	UNION ALL
	SELECT 4,'DS/TL','EMPID',1
	UNION ALL
	SELECT 5,'Channel','CHANNEL',1

	--FOR REPORT HEADER
	SET @SLHEADID=5
	SET @PARENTID=5

	DECLARE @emp_contactId NVARCHAR(100)
	SET @COLUMN_DATE =@FROMDATE

	IF OBJECT_ID('tempdb..#TMPATTENDACE') IS NOT NULL
		DROP TABLE #TMPATTENDACE
	CREATE TABLE #TMPATTENDACE(BRANCH_ID BIGINT,BRANCH_DESCRIPTION NVARCHAR(300),USERID BIGINT,EMPCODE NVARCHAR(100),EMPID NVARCHAR(100),EMPNAME NVARCHAR(300),STATEID BIGINT,STATE NVARCHAR(100),DEG_ID BIGINT,
	DESIGNATION NVARCHAR(300),DATEOFJOINING NVARCHAR(10),CONTACTNO NVARCHAR(100),CH_ID BIGINT,CHANNEL NVARCHAR(100),PRESENTABSENT INT,REPORTTOID NVARCHAR(100),REPORTTOUID NVARCHAR(100),REPORTTO NVARCHAR(300),
	RPTTODESG NVARCHAR(100))
	CREATE NONCLUSTERED INDEX IX1 ON #TMPATTENDACE (BRANCH_ID,EMPCODE)

	IF OBJECT_ID('tempdb..#TMPEMPATTENDACESUMMARY') IS NOT NULL
		DROP TABLE #TMPEMPATTENDACESUMMARY
	CREATE TABLE #TMPEMPATTENDACESUMMARY(BRANCH_ID BIGINT,BRANCH_DESCRIPTION NVARCHAR(300),USERID BIGINT,EMPCODE NVARCHAR(100),EMPID NVARCHAR(100),EMPNAME NVARCHAR(300),ATTEN_STATUS NVARCHAR(300),
	TOTWORKINGDAYS INT)
	CREATE NONCLUSTERED INDEX IX1 ON #TMPEMPATTENDACESUMMARY (BRANCH_ID,EMPCODE)

	SET @LOOPCOUNT=1
	IF @DAYCOUNT>0
		BEGIN
			WHILE @LOOPCOUNT<=@DAYCOUNT
				BEGIN				
					SET @SqlStrTable=''
					SET @SqlStrTable='ALTER TABLE #EMPLOYEEATTENDANCE ADD '
					SET @SqlStrTable+='['+RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) + ']' + ' NVARCHAR(50) NULL,'
					SET @SqlStrTable+='[PA_' +RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) + ']'+ ' NVARCHAR(30) NULL ' 

					EXEC SP_EXECUTESQL @SqlStrTable

					INSERT INTO #TMPATTENDACE EXEC [PRC_FTSTEAMVISITATTENDANCE_FETCH] @COLUMN_DATE,@TODATE,@BRANCHID,@EMPID,@CHANNELID,@USERID

					IF @FIRSTTIME=1
						BEGIN
							SET @SqlStrTable=''
							SET @SqlStrTable='INSERT INTO #EMPLOYEEATTENDANCE(BRANCH_ID,BRANCH_DESCRIPTION,USERID,EMPCODE,EMPID,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,CONTACTNO,'
							SET @SqlStrTable+='CH_ID,CHANNEL,REPORTTOID,REPORTTOUID,REPORTTO,RPTTODESG,'
							SET @SqlStrTable+='[PA_' +RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) + '] '
							SET @SqlStrTable+=') '
							SET @SqlStrTable+='SELECT BRANCH_ID,BRANCH_DESCRIPTION,USERID,EMPCODE,EMPID,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,CONTACTNO,CH_ID,CHANNEL,REPORTTOID,REPORTTOUID,'
							SET @SqlStrTable+='REPORTTO,RPTTODESG,PRESENTABSENT '
							SET @SqlStrTable+='FROM #TMPATTENDACE '

							EXEC SP_EXECUTESQL @SqlStrTable

							SET @FIRSTTIME=0					
						END
					ELSE IF @FIRSTTIME=0
						BEGIN
							SET @SqlStrTable=''
							SET @SqlStrTable='UPDATE TEMP SET '
							SET @SqlStrTable+='TEMP.[PA_' +RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) + ']=T.PRESENTABSENT '
							SET @sqlStrTable+='FROM #EMPLOYEEATTENDANCE TEMP '
							SET @sqlStrTable+='INNER JOIN #TMPATTENDACE T ON TEMP.BRANCH_ID=T.BRANCH_ID AND TEMP.EMPCODE=T.EMPCODE '
						
							EXEC SP_EXECUTESQL @sqlStrTable
						END
						TRUNCATE TABLE #TMPATTENDACE

						--FOR REPORT HEADER
						SET @PARENTID=@SLHEADID+1
					
						INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) 
						SELECT @SLHEADID+1 AS HEADID,CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105) AS HEADNAME,RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) AS HEADSHRTNAME,0 AS PARRENTID 

						INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) 
						SELECT @SLHEADID+2 AS HEADID,'Present/Absent' AS HEADNAME,'PA_' +RTRIM(LTRIM(REPLACE(CONVERT(NVARCHAR(10),CAST(@COLUMN_DATE AS DATE),105),'-','_'))) AS HEADSHRTNAME,@PARENTID AS PARRENTID 

						SET @SLHEADID=@SLHEADID+2

						--FOR REPORT HEADER

						SET @COLUMN_DATE=CONVERT(NVARCHAR(10),(SELECT DATEADD(D, 1, @COLUMN_DATE)),120)
						SET @LOOPCOUNT=@LOOPCOUNT+1
				END
		END

	INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT @SLHEADID+1,'Summary','Summary',0
	UNION ALL
	SELECT @SLHEADID+2,'Total Working Days','TOTWORKINGDAYS',@SLHEADID+1
	UNION ALL
	SELECT @SLHEADID+3,'Total Days Present','TOTDAYSPRESENT',@SLHEADID+1
	UNION ALL
	SELECT @SLHEADID+4,'Total Days Absent','TOTDAYSABSENT',@SLHEADID+1

	ALTER TABLE #EMPLOYEEATTENDANCE ADD Summary NVARCHAR(100)
	ALTER TABLE #EMPLOYEEATTENDANCE ADD TOTWORKINGDAYS INT DEFAULT(0) WITH VALUES
	ALTER TABLE #EMPLOYEEATTENDANCE ADD TOTDAYSPRESENT INT DEFAULT(0) WITH VALUES
	ALTER TABLE #EMPLOYEEATTENDANCE ADD TOTDAYSABSENT INT DEFAULT(0) WITH VALUES

	INSERT INTO #TMPEMPATTENDACESUMMARY EXEC [PRC_FTSTEAMVISITATTENDANCESUMMARY_FETCH] @FROMDATE,@TODATE,@BRANCHID,@EMPID,@CHANNELID,@USERID

	UPDATE EMPATT SET EMPATT.TOTWORKINGDAYS=T.TOTWORKINGDAYS FROM #EMPLOYEEATTENDANCE AS EMPATT 
	INNER JOIN #TMPEMPATTENDACESUMMARY T ON EMPATT.BRANCH_ID=T.BRANCH_ID AND EMPATT.EMPCODE=T.EMPCODE

	UPDATE EMPATT SET EMPATT.TOTDAYSPRESENT=T.TOTWORKINGDAYS FROM #EMPLOYEEATTENDANCE AS EMPATT 
	INNER JOIN (SELECT BRANCH_ID,EMPCODE,COUNT(ATTEN_STATUS) AS TOTWORKINGDAYS FROM #TMPEMPATTENDACESUMMARY WHERE ATTEN_STATUS='Present' GROUP BY BRANCH_ID,EMPCODE) T ON EMPATT.BRANCH_ID=T.BRANCH_ID 
	AND EMPATT.EMPCODE=T.EMPCODE

	--Rev 1.0
	--UPDATE EMPATT SET EMPATT.TOTDAYSABSENT=T.TOTDAYSABSENT FROM #EMPLOYEEATTENDANCE AS EMPATT 
	--INNER JOIN (SELECT BRANCH_ID,EMPCODE,COUNT(ATTEN_STATUS) AS TOTDAYSABSENT FROM #TMPEMPATTENDACESUMMARY WHERE ATTEN_STATUS='Not Logged In' GROUP BY BRANCH_ID,EMPCODE) T ON EMPATT.BRANCH_ID=T.BRANCH_ID 
	--AND EMPATT.EMPCODE=T.EMPCODE
	UPDATE EMPATT SET EMPATT.TOTDAYSABSENT=T.TOTDAYSABSENT FROM #EMPLOYEEATTENDANCE AS EMPATT 
	INNER JOIN (
	SELECT ABSNT.BRANCH_ID,ABSNT.EMPCODE,(SUM(ABSNT.TOTWORKINGDAYS)-SUM(ABSNT.TOTDAYSPRESENT)) AS TOTDAYSABSENT FROM(
	SELECT BRANCH_ID,EMPCODE,(TOTWORKINGDAYS) AS TOTWORKINGDAYS,0 AS TOTDAYSPRESENT FROM #TMPEMPATTENDACESUMMARY GROUP BY BRANCH_ID,EMPCODE,TOTWORKINGDAYS
	UNION ALL
	SELECT BRANCH_ID,EMPCODE,0 AS TOTWORKINGDAYS,COUNT(ATTEN_STATUS) AS TOTDAYSPRESENT FROM #TMPEMPATTENDACESUMMARY WHERE ATTEN_STATUS='Present' GROUP BY BRANCH_ID,EMPCODE
	) ABSNT GROUP BY ABSNT.BRANCH_ID,ABSNT.EMPCODE
	) T ON EMPATT.BRANCH_ID=T.BRANCH_ID 
	AND EMPATT.EMPCODE=T.EMPCODE
	--End of Rev 1.0

	SELECT * FROM #TMPEHEADING ORDER BY HEADID
	SELECT * FROM #EMPLOYEEATTENDANCE

	DROP TABLE #EMPLOYEEATTENDANCE
	DROP TABLE #TMPEHEADING
	DROP TABLE #TMPSHOWSUNDAY
	DROP TABLE #TMPEMPATTENDACESUMMARY

	SET NOCOUNT OFF
END