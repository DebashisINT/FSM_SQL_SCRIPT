IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FSMAPILEADENQUIRYDETAILS]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FSMAPILEADENQUIRYDETAILS] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FSMAPILEADENQUIRYDETAILS]
(
@ACTION NVARCHAR(100),
@FROMDATE DATETIME=NULL,
@TODATE DATETIME=NULL,
@ENQUIRY_FROM NVARCHAR(2000)=NULL,
@USER_ID BIGINT=NULL,
@ACTIVITY_ID BIGINT=NULL,
@CRM_ID NVARCHAR(200)=NULL,
@ACTIVITY_DATE DATETIME=NULL,
@ACTIVITY_TIME NVARCHAR(20)=NULL,
@ACTIVITY_TYPE_NAME NVARCHAR(100)=NULL,
@ACTIVITY_STATUS NVARCHAR(100)=NULL,
@ACTIVITY_DETAILS NVARCHAR(500)=NULL,
@OTHER_REMARKS NVARCHAR(500)=NULL,
--Rev 1.0
@ACTIVITY_NEXT_DATE DATETIME=NULL
--End of Rev 1.0
) --WITH ENCRYPTION
AS
/**********************************************************************************************************************************************************************
Written By : Debashis Talukder On 02/03/2022
Purpose : For New Lead Enquiry.Row 660 to 663
1.0		07/04/2022		Debashis	A new column has been added.Row 676,677 & 678
2.0		08/05/2023		Debashis	IsTaskManagementAvailable if this global settings true enquiry_from is blank sended.from app end.Refer: 0026055
**********************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	IF @ACTION='USERENQUIRYWISECUSTLIST'
		BEGIN
			--Rev 2.0
			DECLARE @IsTaskManagementAvailable NVARCHAR(100)
			SELECT @IsTaskManagementAvailable  =(select [Value] from FTS_APP_CONFIG_SETTINGS where [Key]='IsTaskManagementAvailable' AND IsActive=1)
			IF @IsTaskManagementAvailable='0'
				BEGIN
			--End of Rev 2.0
					SELECT vend_type AS enquiry_from,SalesmanId AS user_id,Crm_Id AS crm_id,ISNULL(Customer_Name,'') AS customer_name,ISNULL(MobileNo,'') AS mobile_no,ISNULL(Email,'') AS email,
					ISNULL(Location,'') AS customer_addr,ISNULL(Qty,0.00) AS qty,ISNULL(UOM,'') AS UOM,ISNULL(Order_Value,0.00) AS order_value,ISNULL(Enq_Details,'') AS enquiry_details,
					ISNULL(Product_Required,'') AS product_req,ISNULL(Contact_Person,'') AS contact_person,CONVERT(NVARCHAR(10),SalesmanAssign_dt,105) AS date,
					CONVERT(NVARCHAR(10),SalesmanAssign_dt,108) AS time,ISNULL(vend_type,'') AS source_vend_type,ISNULL(Status,'') AS status
					FROM tbl_CRM_Import
					WHERE CONVERT(NVARCHAR(10),SalesmanAssign_dt,120) BETWEEN CONVERT(NVARCHAR(10),@FROMDATE,120) AND CONVERT(NVARCHAR(10),@TODATE,120)
					AND vend_type=@ENQUIRY_FROM AND SalesmanId=@USER_ID
			--Rev 2.0
				END
			ELSE IF @IsTaskManagementAvailable='1'
				BEGIN
					SELECT vend_type AS enquiry_from,SalesmanId AS user_id,Crm_Id AS crm_id,ISNULL(Customer_Name,'') AS customer_name,ISNULL(MobileNo,'') AS mobile_no,ISNULL(Email,'') AS email,
					ISNULL(Location,'') AS customer_addr,ISNULL(Qty,0.00) AS qty,ISNULL(UOM,'') AS UOM,ISNULL(Order_Value,0.00) AS order_value,ISNULL(Enq_Details,'') AS enquiry_details,
					ISNULL(Product_Required,'') AS product_req,ISNULL(Contact_Person,'') AS contact_person,CONVERT(NVARCHAR(10),SalesmanAssign_dt,105) AS date,
					CONVERT(NVARCHAR(10),SalesmanAssign_dt,108) AS time,ISNULL(vend_type,'') AS source_vend_type,ISNULL(Status,'') AS status
					FROM tbl_CRM_Import
					WHERE CONVERT(NVARCHAR(10),SalesmanAssign_dt,120) BETWEEN CONVERT(NVARCHAR(10),@FROMDATE,120) AND CONVERT(NVARCHAR(10),@TODATE,120)
					AND SalesmanId=@USER_ID
				END
			--End of Rev 2.0
		END
	IF @ACTION='SAVEACTIVITY'
		BEGIN
			--Rev 1.0 && A new column has been added as ACTIVITY_NEXT_DATE
			INSERT INTO FSMAPILEADACTIVITY(CRM_ID,ACTIVITY_DATE,ACTIVITY_TIME,ACTIVITY_TYPE_NAME,ACTIVITY_STATUS,ACTIVITY_DETAILS,OTHER_REMARKS,ACTIVITY_NEXT_DATE)
			SELECT @CRM_ID,@ACTIVITY_DATE,@ACTIVITY_TIME,@ACTIVITY_TYPE_NAME,@ACTIVITY_STATUS,@ACTIVITY_DETAILS,@OTHER_REMARKS,@ACTIVITY_NEXT_DATE

			IF EXISTS(SELECT CRM_ID FROM tbl_CRM_Import WHERE CRM_ID=@CRM_ID)
				UPDATE tbl_CRM_Import SET Status=@ACTIVITY_STATUS WHERE CRM_ID=@CRM_ID

			SELECT CRM_ID,ACTIVITY_DATE,ACTIVITY_TIME,ACTIVITY_TYPE_NAME,ACTIVITY_STATUS,ACTIVITY_DETAILS,OTHER_REMARKS,ACTIVITY_NEXT_DATE FROM FSMAPILEADACTIVITY
			WHERE CRM_ID=@CRM_ID AND ACTIVITY_DATE=@ACTIVITY_DATE AND ACTIVITY_TIME=@ACTIVITY_TIME AND ACTIVITY_TYPE_NAME=@ACTIVITY_TYPE_NAME AND ACTIVITY_STATUS=@ACTIVITY_STATUS 
			AND ACTIVITY_DETAILS=@ACTIVITY_DETAILS AND OTHER_REMARKS=@OTHER_REMARKS AND ACTIVITY_NEXT_DATE=@ACTIVITY_NEXT_DATE
		END
	IF @ACTION='SHOWACTIVITYLIST'
		BEGIN
			--Rev 1.0 && A new column has been added as ACTIVITY_NEXT_DATE
			SELECT CRM_ID AS crm_id,ACTIVITY_ID AS activity_id,CONVERT(NVARCHAR(10),ACTIVITY_DATE,105) AS activity_date,ACTIVITY_TIME AS activity_time,ACTIVITY_STATUS AS activity_status,
			ACTIVITY_TYPE_NAME AS activity_type_name,ACTIVITY_DETAILS AS activity_details,OTHER_REMARKS AS other_remarks,CONVERT(NVARCHAR(10),ACTIVITY_NEXT_DATE,105) AS activity_next_date 
			FROM FSMAPILEADACTIVITY WHERE CRM_ID=@CRM_ID
		END
	IF @ACTION='UPDATEACTIVITY'
		BEGIN
			--Rev 1.0 && A new column has been added as ACTIVITY_NEXT_DATE
			IF EXISTS(SELECT ACTIVITY_ID FROM FSMAPILEADACTIVITY WHERE ACTIVITY_ID=@ACTIVITY_ID)
				BEGIN
					UPDATE FSMAPILEADACTIVITY SET CRM_ID=@CRM_ID,ACTIVITY_DATE=@ACTIVITY_DATE,ACTIVITY_TIME=@ACTIVITY_TIME,ACTIVITY_TYPE_NAME=@ACTIVITY_TYPE_NAME,
					ACTIVITY_STATUS=@ACTIVITY_STATUS,ACTIVITY_DETAILS=@ACTIVITY_DETAILS,OTHER_REMARKS=@OTHER_REMARKS,ACTIVITY_NEXT_DATE=@ACTIVITY_NEXT_DATE
					WHERE ACTIVITY_ID=@ACTIVITY_ID

					IF EXISTS(SELECT CRM_ID FROM tbl_CRM_Import WHERE CRM_ID=@CRM_ID)
						UPDATE tbl_CRM_Import SET Status=@ACTIVITY_STATUS WHERE CRM_ID=@CRM_ID

					SELECT ACTIVITY_ID,CRM_ID,ACTIVITY_DATE,ACTIVITY_TIME,ACTIVITY_TYPE_NAME,ACTIVITY_STATUS,ACTIVITY_DETAILS,OTHER_REMARKS,ACTIVITY_NEXT_DATE FROM FSMAPILEADACTIVITY
					WHERE ACTIVITY_ID=@ACTIVITY_ID AND CRM_ID=@CRM_ID AND ACTIVITY_DATE=@ACTIVITY_DATE AND ACTIVITY_TIME=@ACTIVITY_TIME AND ACTIVITY_TYPE_NAME=@ACTIVITY_TYPE_NAME 
					AND ACTIVITY_STATUS=@ACTIVITY_STATUS AND ACTIVITY_DETAILS=@ACTIVITY_DETAILS AND OTHER_REMARKS=@OTHER_REMARKS AND ACTIVITY_NEXT_DATE=@ACTIVITY_NEXT_DATE
				END
		END

	SET NOCOUNT OFF
END