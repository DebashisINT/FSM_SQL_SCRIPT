--PRC_FTSEMPLOYEEREIMBURSEMENTLIST_REPORT 'DEC','','','','2019',378
--PRC_FTSEMPLOYEEREIMBURSEMENTLIST_REPORT 'FEB','','','EMA0000072',378

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSEMPLOYEEREIMBURSEMENTLIST_REPORT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSEMPLOYEEREIMBURSEMENTLIST_REPORT] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSEMPLOYEEREIMBURSEMENTLIST_REPORT]
(
@MONTH NVARCHAR(3)=NULL,
@STATEID NVARCHAR(MAX)=NULL,
@DESIGNID NVARCHAR(MAX)=NULL,
@EMPID NVARCHAR(MAX)=NULL,
--Rev 2.0
@YEAR NVARCHAR(10)=NULL,
--End of Rev 2.0
@USERID INT=NULL
) --WITH ENCRYPTION
AS
/****************************************************************************************************************************************************************************
Written by : Subhra Mukherjee on 25/01/2019
Module	   : Reimbursement List
Module Functionality : 

1.0		Subhra				v1.0.19		05/03/2019		Remove UPDATEDBY,UPDATEON from FTS_Reimbursement_Application
														to FTS_Reimbursement_Application_Verified
														and change state joining from left join to inner join...if state is blank 
														then no	data coming.
2.0		Debashis			v2.0.4		02/01/2020		Year field required in the Monthly report.Refer: 0021574
3.0		Pratik							12/11/2021		removed UpdatedOn from group by clause
4.0		Pratik							18/11/2021		Updated logic for approved amount
5.0		Pratik							29/11/2021		Changed FTS_Reimbursement_Application_Verified join to left join.
6.0		Pratik							11/07/2022		removed UpdatedBy from group by clause.refer:25034
7.0		Sanchita			V2.0.40		20-04-2023		In TRAVELLING ALLOWANCE -- Approve/Reject Page: One Coloumn('Confirm/Reject') required 
														before 'Approve/Reject' coloumn. refer: 25809
****************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	DECLARE @Strsql NVARCHAR(MAX), @sqlStrTable NVARCHAR(MAX)

	DECLARE @MONTHNAME NVARCHAR(3),@MONTHNO INT=0,@FROMDATE NVARCHAR(10),@TODATE NVARCHAR(10)
	SET @MONTHNAME=@MONTH
	SET @MONTHNO=DATEPART(MM,@MONTHNAME+'01 1900')
	--Rev 2.0
	--SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)),120)
	--SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))),120)
	SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, @YEAR),120)
	SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), @YEAR)),120)
	--End of Rev 2.0


	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#STATEID_LIST') AND TYPE IN (N'U'))
		DROP TABLE #STATEID_LIST
	CREATE TABLE #STATEID_LIST (State_Id INT)
	CREATE NONCLUSTERED INDEX IX1 ON #STATEID_LIST (State_Id ASC)
	IF @STATEID <> ''
		BEGIN
			SET @STATEID=REPLACE(@STATEID,'''','')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #STATEID_LIST SELECT id from tbl_master_state where id in('+@STATEID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END
	
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#DESIGNATION_LIST') AND TYPE IN (N'U'))
		DROP TABLE #DESIGNATION_LIST
	CREATE TABLE #DESIGNATION_LIST (deg_id INT)
	CREATE NONCLUSTERED INDEX IX2 ON #DESIGNATION_LIST (deg_id ASC)
	IF @DESIGNID <> ''
		BEGIN
			SET @DESIGNID=REPLACE(@DESIGNID,'''','')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #DESIGNATION_LIST SELECT deg_id from tbl_master_designation where deg_id in('+@DESIGNID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#EMPLOYEE_LIST') AND TYPE IN (N'U'))
		DROP TABLE #EMPLOYEE_LIST
	CREATE TABLE #EMPLOYEE_LIST (emp_contactId NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS)
	IF @EMPID <> ''
		BEGIN
			SET @EMPID = REPLACE(''''+@EMPID+'''',',',''',''')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #EMPLOYEE_LIST SELECT emp_contactId from tbl_master_employee where emp_contactId in('+@EMPID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#TEMPCONTACT') AND TYPE IN (N'U'))
		DROP TABLE #TEMPCONTACT
	CREATE TABLE #TEMPCONTACT
		(
			cnt_internalId NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_firstName NVARCHAR(150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_middleName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_lastName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_UCC NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_contactType NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
		)
	CREATE NONCLUSTERED INDEX IX_PARTYID ON #TEMPCONTACT(cnt_internalId,cnt_contactType ASC)
	INSERT INTO #TEMPCONTACT
	SELECT cnt_internalId,cnt_firstName,cnt_middleName,cnt_lastName,cnt_UCC,cnt_contactType FROM TBL_MASTER_CONTACT WHERE cnt_contactType IN('EM')

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'FTSEMPLOYEEREIMBURSEMENTLIST_REPORT') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE FTSEMPLOYEEREIMBURSEMENTLIST_REPORT
			(
			  USERID INT,
			  SEQ INT,
			  USER_ID INT,
			  USER_NAME NVARCHAR(50) NULL,
			  CNT_INTERNALID NVARCHAR(100) NULL,
			  EMPCODE NVARCHAR(100) NULL,
			  EMPNAME NVARCHAR(300) NULL,
			  EMPLOYEE_GRADE NVARCHAR(300) NULL,
			  CONTACT NVARCHAR(50) NULL,
			  STATEID INT,
			  STATE NVARCHAR(50) NULL,
			  DEG_ID INT,
			  DEG_DESIGNATION NVARCHAR(50) NULL,
			  REPORTTO NVARCHAR(300) NULL,
			  REPORTCONTACT NVARCHAR(50) NULL,
			  RPTTODESGID INT,
			  RPTTODESG NVARCHAR(50) NULL,
			  AMOUNT DECIMAL(18,2) NULL,
			  APPROVED_AMOUNT DECIMAL(18,2) NULL,
			  PENDING_COUNT INT,
			  APPROVED_COUNT INT,
			  REJECTED_COUNT INT,
			  STATUS NVARCHAR(20),
			  UPDATEDBY NVARCHAR(50) NULL,
			  LASTUPDATED_ON NVARCHAR(100) NULL
			  -- Rev 7.0
			  ,CONFIRMED_COUNT INT
			  -- End of Rev 7.0
			)
			CREATE NONCLUSTERED INDEX IX1 ON FTSEMPLOYEEREIMBURSEMENTLIST_REPORT (SEQ)
		END
	DELETE FROM FTSEMPLOYEEREIMBURSEMENTLIST_REPORT WHERE USERID=@USERID

	-- Rev 7.0 [ column CONFIRMED_COUNT added ]
	SET @Strsql=''
	SET @Strsql='INSERT INTO FTSEMPLOYEEREIMBURSEMENTLIST_REPORT(USERID,SEQ,USER_ID,USER_NAME,CNT_INTERNALID,EMPCODE,EMPNAME,EMPLOYEE_GRADE,CONTACT,STATEID,STATE,DEG_ID,DEG_DESIGNATION,REPORTTO'
	SET @Strsql+=',REPORTCONTACT,RPTTODESGID,RPTTODESG,AMOUNT,APPROVED_AMOUNT,PENDING_COUNT,APPROVED_COUNT,REJECTED_COUNT,STATUS,UPDATEDBY,LASTUPDATED_ON,CONFIRMED_COUNT)'

	SET @Strsql+='SELECT '+STR(@USERID)+' AS USERID,ROW_NUMBER() OVER(ORDER BY CN.CNT_UCC) AS SEQ,H.USERID,U.USER_NAME,CN.CNT_INTERNALID,CN.CNT_UCC,'
	SET @Strsql+=' ISNULL(CN.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CN.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CN.CNT_LASTNAME,'''') AS ''NAME'',grade.Employee_Grade,'
	SET @Strsql+=' U.USER_LOGINID AS CONTACT,ADDRES.STATEID,ADDRES.STATE,DE.DEG_ID,DE.DEG_DESIGNATION, '
	SET @Strsql+=' RPTTO.REPORTTO,RPTTO.CONTACT,RPTTO.RPTTODESGID,RPTTO.RPTTODESG,H.AMOUNT,HV.APPROVED_AMOUNT,'
	SET @Strsql+=' (ISNULL(H.COUNT_PEN,0)-ISNULL(HV.APPROVED,0)-ISNULL(HV.REJECTED,0)) AS COUNT_PEN,HV.APPROVED,HV.REJECTED,'
	--Rev 1.0
	--SET @Strsql+=' CASE WHEN H.USERID=U.USER_ID THEN  '
	--SET @Strsql+=' CASE WHEN ISNULL(H.COUNT_PEN,0)-ISNULL(HV.REJECTED,0)=0 THEN ''Reject'' '
	--SET @Strsql+=' WHEN (ISNULL(H.COUNT_PEN,0)-ISNULL(HV.APPROVED,0))=0 THEN ''Approved'' ELSE ''Partial'' END '	
	--SET @Strsql+=' ELSE ''Not Applied'' END AS STATUS  '
	SET @Strsql+=' CASE WHEN H.USERID=U.USER_ID THEN  (CASE WHEN ISNULL(H.COUNT_PEN,0)-ISNULL(HV.REJECTED,0)=0 THEN ''Reject''  '
	SET @Strsql+=' WHEN (ISNULL(H.COUNT_PEN,0)-ISNULL(HV.APPROVED,0))=0 THEN ''Approved'' '
	SET @Strsql+=' WHEN (ISNULL(HV.REJECTED,0)<>0 OR ISNULL(HV.APPROVED,0)<>0) THEN ''Partial'' '
	SET @Strsql+=' ELSE ''Pending'' END)  ELSE ''Not Applied'' END AS STATUS, '
	--End of Rev 1.0
	--Rev 1.0
	--SET @Strsql+=' ,U1.user_name as ''Updated By'',H.UpdatedOn as''Last Updated On	'' '
	SET @Strsql+=' U1.user_name as ''Updated By'',HV.UpdatedOn as''Last Updated On	'' '
	--End of Rev 1.0
	-- Rev 7.0
	SET @Strsql+=', (select count(0) as COUNT_CONF FROM FTS_Reimbursement_Application CONFAPP(NOLOCK) '
	SET @Strsql+=' WHERE CONVERT(NVARCHAR(10),CONFAPP.Date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+=' AND CONFAPP.Confirm_Reimbursement=1 AND CONFAPP.USERID=H.USERID ) as CONFIRMED_COUNT '
	SET @Strsql+=' '
	-- End of Rev 7.0
	SET @Strsql+=' FROM #TEMPCONTACT CN INNER JOIN (SELECT EMP_CNTID FROM TBL_TRANS_EMPLOYEECTC  WHERE emp_effectiveuntil IS NULL) as CTC ON CN.CNT_INTERNALID=CTC.EMP_CNTID  '
	SET @Strsql+=' INNER JOIN TBL_MASTER_USER U ON U.USER_CONTACTID=CN.CNT_INTERNALID '
	--Rev 1.0
	--SET @Strsql+=' LEFT OUTER JOIN '
	--SET @Strsql+='(SELECT AD.ADD_CNTID,ST.ID as STATEID,ST.STATE FROM TBL_MASTER_ADDRESS AD LEFT OUTER JOIN TBL_MASTER_STATE ST ON AD.ADD_STATE=ST.ID AND AD.ADD_ADDRESSTYPE=''OFFICE'')
	--AS ADDRES ON ADDRES.ADD_CNTID=CN.CNT_INTERNALID '
	SET @Strsql+=' INNER JOIN '
	SET @Strsql+='(SELECT AD.ADD_CNTID,ST.ID as STATEID,ST.STATE FROM TBL_MASTER_ADDRESS AD INNER JOIN TBL_MASTER_STATE ST ON AD.ADD_STATE=ST.ID AND AD.ADD_ADDRESSTYPE=''OFFICE'')
	AS ADDRES ON ADDRES.ADD_CNTID=CN.CNT_INTERNALID '
	--End of Rev 1.0
	SET @Strsql+=' INNER JOIN (SELECT CNT.EMP_CNTID,DESG.DEG_DESIGNATION,MAX(EMP_ID) AS EMP_ID,DESG.DEG_ID FROM TBL_TRANS_EMPLOYEECTC AS CNT '
	--Rev 1.0
	--LEFT OUTER JOIN TBL_MASTER_DESIGNATION DESG ON DESG.DEG_ID=CNT.EMP_DESIGNATION GROUP BY EMP_CNTID,DESG.DEG_DESIGNATION,DESG.DEG_ID) DE ON DE.EMP_CNTID=CTC.EMP_CNTID '
	--SET @Strsql+=' LEFT OUTER JOIN (SELECT USERID,SUM(Amount) as AMOUNT,COUNT(*) AS COUNT_PEN,STATUS,UPDATEDBY,UPDATEDON FROM FTS_REIMBURSEMENT_APPLICATION '
	SET @Strsql+='LEFT OUTER JOIN TBL_MASTER_DESIGNATION DESG ON DESG.DEG_ID=CNT.EMP_DESIGNATION WHERE CNT.emp_effectiveuntil IS NULL GROUP BY EMP_CNTID,DESG.DEG_DESIGNATION,DESG.DEG_ID) DE ON DE.EMP_CNTID=CTC.EMP_CNTID '
	--rev 4.0
	--SET @Strsql+='LEFT OUTER JOIN (SELECT USERID,SUM(Amount) as AMOUNT,COUNT(*) AS COUNT_PEN,STATUS FROM FTS_REIMBURSEMENT_APPLICATION '
	SET @Strsql+='LEFT OUTER JOIN (SELECT REMAPP.UserID,SUM(REMAPP.Amount) as AMOUNT,COUNT(*) AS COUNT_PEN FROM FTS_REIMBURSEMENT_APPLICATION AS REMAPP(nolock) '
	--rev 5.0
	--SET @Strsql+='INNER JOIN FTS_Reimbursement_Application_Verified as REMAPPVER(nolock) on REMAPP.ApplicationID=REMAPPVER.ApplicationID '
	SET @Strsql+='LEFT JOIN FTS_Reimbursement_Application_Verified as REMAPPVER(nolock) on REMAPP.ApplicationID=REMAPPVER.ApplicationID '
	--End of rev 5.0
	--End of Rev 1.0
	--SET @Strsql+=' WHERE CONVERT(NVARCHAR(10),Date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+=' WHERE CONVERT(NVARCHAR(10),REMAPP.Date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--Rev 1.0
	--SET @Strsql+=' GROUP BY USERID,STATUS,UPDATEDBY,UPDATEDON ) H ON H.USERID=U.USER_ID'	
	--SET @Strsql+=' LEFT OUTER JOIN (SELECT USERID,SUM(AMOUNT) AS ''APPROVED_AMOUNT'',COUNT(APPROVED) AS APPROVED,COUNT(REJECTED) AS REJECTED FROM( '
	--SET @Strsql+='SELECT USERID,Amount,CASE WHEN status=1 THEN ''Approved'' ELSE NULL END AS APPROVED,CASE WHEN status=2 THEN ''Reject'' ELSE NULL END AS REJECTED '
	--SET @Strsql+=' GROUP BY USERID,STATUS) H ON H.USERID=U.USER_ID'
	SET @Strsql+=' GROUP BY REMAPP.USERID) H ON H.USERID=U.USER_ID'
	--End of rev 4.0
	--rev 3.0 [Changed updatedon to max MAX(UpdatedOn) on]
	SET @Strsql+=' LEFT OUTER JOIN (SELECT USERID,SUM(AMOUNT) AS ''APPROVED_AMOUNT'',COUNT(APPROVED) AS APPROVED,COUNT(REJECTED) AS REJECTED,UpdatedBy,MAX(UpdatedOn) as UpdatedOn FROM( '
	--rev 6.0
	--SET @Strsql+='SELECT USERID,Amount,CASE WHEN status=1 THEN ''Approved'' ELSE NULL END AS APPROVED,CASE WHEN status=2 THEN ''Reject'' ELSE NULL END AS REJECTED,UpdatedBy,UpdatedOn '
	SET @Strsql+='SELECT USERID,Amount,CASE WHEN status=1 THEN ''Approved'' ELSE NULL END AS APPROVED,CASE WHEN status=2 THEN ''Reject'' ELSE NULL END AS REJECTED,(select distinct UpdatedBy from FTS_Reimbursement_Application_Verified where UpdatedOn = (select MAX(UpdatedOn) from FTS_Reimbursement_Application_Verified where UserID =FS.UserId)) as UpdatedBy,UpdatedOn '
	--End of rev 6.0
	--End of Rev 1.0
	--rev 6.0
	--SET @Strsql+='FROM FTS_Reimbursement_Application_Verified '
	SET @Strsql+='FROM FTS_Reimbursement_Application_Verified FS '
	--End of rev 6.0
	SET @Strsql+=' WHERE CONVERT(NVARCHAR(10),Date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--Rev 1.0
	--SET @Strsql+=') AS AA GROUP BY USERID) HV ON HV.USERID=U.USER_ID '
	--SET @Strsql+=' LEFT OUTER JOIN TBL_MASTER_USER U1 ON U1.user_id=H.UpdatedBy '
	--rev 3.0 
	--SET @Strsql+=') AS AA GROUP BY USERID,UpdatedBy,UpdatedOn) HV ON HV.USERID=U.USER_ID '
	SET @Strsql+=') AS AA GROUP BY USERID,UpdatedBy) HV ON HV.USERID=U.USER_ID '
	--End of rev 3.0 
	SET @Strsql+=' LEFT OUTER JOIN TBL_MASTER_USER U1 ON U1.user_id=HV.UpdatedBy '
	--End of Rev 1.0
	SET @Strsql+=' LEFT OUTER JOIN (SELECT EMPCTC.EMP_CNTID,EMPCTC.EMP_REPORTTO,CNT.CNT_INTERNALID AS RPTTOEMPCODE,'
	SET @Strsql+='ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS REPORTTO,'
	SET @Strsql+='U.USER_LOGINID AS CONTACT,DESG.DEG_ID AS RPTTODESGID,DESG.deg_designation AS RPTTODESG FROM tbl_master_employee EMP '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMP.emp_id=EMPCTC.emp_reportTo '

	SET @Strsql+=' INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN ( '
	SET @Strsql+=' SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC as cnt '
	SET @Strsql+=' LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG '
	SET @Strsql+=' ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+=' LEFT OUTER JOIN TBL_MASTER_USER U ON U.user_contactId=EMP.emp_contactId WHERE EMPCTC.emp_effectiveuntil IS NULL) RPTTO ON RPTTO.emp_cntId=CN.cnt_internalId  '
	SET @Strsql+=' Left Outer Join(select g.Employee_Grade,mg.Emp_Code from tbl_FTS_MapEmployeeGrade mg
	inner join FTS_Employee_Grade g on mg.Emp_Grade=g.Id) as grade on grade.Emp_Code=CN.CNT_INTERNALID'
	SET @Strsql+=' WHERE U.user_inactive=''N'' '
	
	IF @STATEID<>''
		SET @Strsql+='AND EXISTS (SELECT State_Id from #STATEID_LIST AS ST WHERE ST.State_Id=ADDRES.STATEID) '
	IF @DESIGNID<>'' 
		SET @Strsql+='AND EXISTS (SELECT deg_id from #DESIGNATION_LIST AS DS WHERE DS.deg_id=DE.DEG_ID) '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CN.CNT_INTERNALID) '
		
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql
	--select * from FTSEMPLOYEEREIMBURSEMENTLIST_REPORT
	DROP TABLE #DESIGNATION_LIST
	DROP TABLE #EMPLOYEE_LIST
	DROP TABLE #STATEID_LIST
	DROP TABLE #TEMPCONTACT
END