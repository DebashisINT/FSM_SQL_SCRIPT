
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_LMS_POINTSMASTER]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_LMS_POINTSMASTER] AS' 
END
GO

ALTER PROC [dbo].[PRC_LMS_POINTSMASTER]
(
@ACTION VARCHAR(500)=NULL,
@ID BIGINT=NULL,
@POINTSECTION NVARCHAR(250)=NULL,
@POINTS  NUMERIC(18,5)=NULL,
@POINTSETUPSTATUS INT=0,
@selected VARCHAR(max)=NULL,
@USER_ID BIGINT=NULL,
@ISPAGELOAD CHAR(1)='0',
@ReturnValue BIGINT=0 OUTPUT
)
AS
/*************************************************************************************************************************
Written by : Priti Roy ON 20/06/2024
Module	   : LMS- Point Setup Master Implementation.Refer: 0027544
******************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON
	Declare @LastCount bigint=0
	IF(@ACTION='ADD')
	BEGIN
	
		IF NOT EXISTS (SELECT 1 FROM LMS_POINTSETUP WHERE POINTSECTION=@POINTSECTION )
		BEGIN			
			 select  @LastCount=iSNULL(MAX(POINTSETUPID),0) from LMS_POINTSETUP  
			INSERT INTO LMS_POINTSETUP(POINTSETUPID,POINTSECTION,POINTS,POINTSETUPSTATUS,CREATEDBY,CREATEDON)
			VALUES (@LastCount+1,@POINTSECTION,@POINTS,@POINTSETUPSTATUS,@USER_ID,GETDATE())		

			SET @ReturnValue=1
		END
		ELSE
		BEGIN
			SET @ReturnValue=-1
		END
	END
	ELSE IF (@ACTION='EDIT')
	BEGIN		
		SELECT POINTSETUPID,POINTSECTION,CAST(POINTS as decimal(18,2)) POINTS,POINTSETUPSTATUS FROM LMS_POINTSETUP WHERE POINTSETUPID=@ID 		
	END
	ELSE IF(@ACTION='UPDATE')
	BEGIN
		IF EXISTS (SELECT 1 FROM LMS_POINTSETUP WHERE POINTSECTION=@POINTSECTION and POINTS=@POINTS AND POINTSETUPID<>@ID)
		BEGIN
			SET @ReturnValue=-1
		END
		ELSE
		BEGIN			

			UPDATE LMS_POINTSETUP SET POINTSECTION=@POINTSECTION,POINTS=@POINTS,POINTSETUPSTATUS=@POINTSETUPSTATUS,UPDATEDBY=@USER_ID,UPDATEDON=GETDATE() 	
			WHERE POINTSETUPID=@ID 	

			SET @ReturnValue=1
		END
	END
	
	ELSE IF @ACTION='GETLISTINGDETAILS'
	BEGIN
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'LMS_POINTSETUPMASTERLIST') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE LMS_POINTSETUPMASTERLIST
			(
				USERID INT,
				SEQ BIGINT,
				POINTSETUPID int,	
				POINTSECTION int,
				POINTSECTION_FOR NVARCHAR(250),
				POINTS int,
				POINTSETUPSTATUS NVARCHAR(50),
				CreateDate datetime,
				CreateUser NVARCHAR(100),
				ModifyDate datetime,
				ModifyUser NVARCHAR(100)
			)
			CREATE NONCLUSTERED INDEX IX1PF_PURREGPROD_RPT ON LMS_POINTSETUPMASTERLIST (SEQ)
		END
		DELETE FROM LMS_POINTSETUPMASTERLIST where USERID=@USER_ID

		IF(@ISPAGELOAD='1')
		BEGIN
			INSERT INTO LMS_POINTSETUPMASTERLIST (USERID, SEQ, POINTSETUPID, POINTSECTION,POINTSECTION_FOR,POINTS,POINTSETUPSTATUS,CreateDate,CreateUser,ModifyDate,ModifyUser )

			SELECT @USER_ID,ROW_NUMBER() OVER(ORDER BY POINTSETUPID desc) AS SEQ,POINTSETUPID,POINTSECTION,POINTSECTION_FOR			
			,POINTS
			,CASE WHEN POINTSETUPSTATUS=0 THEN 'No' ELSE 'Yes' END
			,POINTS.CREATEDON
			,UC.user_name as CreateUser,POINTS.UPDATEDON,UM.user_name as ModifyUser					
			FROM LMS_POINTSETUP  AS POINTS 
			inner join LMS_POINTSECTION sec on sec.POINTSECTION_ID=POINTS.POINTSECTION
			left outer join tbl_master_user UC ON UC.user_id=POINTS.CREATEDBY
			left outer join tbl_master_user  UM ON UM.user_id=POINTS.UPDATEDBY
		END

	END

	ELSE IF (@ACTION='DELETE')
	BEGIN	    
      Delete from LMS_POINTSETUP Where POINTSETUPID =@ID     
      set @ReturnValue='1'    
    END  
	ELSE IF (@ACTION='GetSection')
	BEGIN	    
	  Select 0 as SectionId,'Select' as SectionName
	  union all
      Select POINTSECTION_ID as SectionId,POINTSECTION_FOR as SectionName from LMS_POINTSECTION
    END  
	SET NOCOUNT OFF
END