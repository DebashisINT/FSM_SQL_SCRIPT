IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_APIBREAKAGEINFODETECTION]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_APIBREAKAGEINFODETECTION] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_APIBREAKAGEINFODETECTION]
(
@ACTION NVARCHAR(20),
@USER_ID BIGINT=NULL,
@DATE_TIME DATETIME=NULL,
@BREAKAGE_NUMBER NVARCHAR(50)=NULL,
@PRODUCT_ID BIGINT=NULL,
@DESCRIPTION_OF_BREAKAGE NVARCHAR(500)=NULL,
@CUSTOMER_FEEDBACK NVARCHAR(500)=NULL,
@REMARKS NVARCHAR(500)=NULL,
@SHOP_ID NVARCHAR(100)=NULL,
@PathImage NVARCHAR(500)=NULL,
@FROMDATE NVARCHAR(10)=NULL,
@TODATE NVARCHAR(10)=NULL,
@BaseURL NVARCHAR(500)=NULL
) --WITH ENCRYPTION
AS
/***************************************************************************************************************************************************************************************************
Written By : Debashis Talukder On 06/07/2022
Purpose : For Breakage Information.Row 707,708 & 709
***************************************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	IF @ACTION='SAVEDATA'
		BEGIN
			IF NOT EXISTS(SELECT BREAKAGE_NUMBER FROM FSMBREAKAGEINFODETECTION WHERE BREAKAGE_NUMBER=@BREAKAGE_NUMBER)
				BEGIN
					INSERT INTO FSMBREAKAGEINFODETECTION(USER_ID,BREAKAGE_NUMBER,DATE_TIME,PRODUCT_ID,DESCRIPTION_OF_BREAKAGE,CUSTOMER_FEEDBACK,REMARKS,SHOP_ID,DOCUMENTIMAGEPATH,CREATEDBY,CREATEDON)
					SELECT @USER_ID,@BREAKAGE_NUMBER,@DATE_TIME,@PRODUCT_ID,@DESCRIPTION_OF_BREAKAGE,@CUSTOMER_FEEDBACK,@REMARKS,@SHOP_ID,@PathImage,@USER_ID,GETDATE()

					SELECT USER_ID,BREAKAGE_NUMBER,DATE_TIME,PRODUCT_ID,DESCRIPTION_OF_BREAKAGE,CUSTOMER_FEEDBACK,REMARKS,SHOP_ID,DOCUMENTIMAGEPATH,CREATEDBY,CREATEDON 
					FROM FSMBREAKAGEINFODETECTION WHERE BREAKAGE_NUMBER=@BREAKAGE_NUMBER
				END
		END
	IF @ACTION='BREAKAGELIST'
		BEGIN
			SELECT LTRIM(RTRIM(STR(BRKG.USER_ID))) AS user_id,MU.user_name AS user_name,BRKG.SHOP_ID AS shop_id,MS.Shop_Name AS shop_name,BRKG.DATE_TIME AS date_time,BRKG.PRODUCT_ID AS product_id,MP.sProducts_Name AS product_name,
			BRKG.BREAKAGE_NUMBER AS breakage_number,BRKG.DESCRIPTION_OF_BREAKAGE AS description_of_breakage,BRKG.CUSTOMER_FEEDBACK AS customer_feedback,BRKG.REMARKS AS remarks,
			CASE WHEN BRKG.DOCUMENTIMAGEPATH<>'' THEN @BaseURL+ISNULL(BRKG.DOCUMENTIMAGEPATH,'') ELSE '' END AS image_link 
			FROM FSMBREAKAGEINFODETECTION BRKG
			INNER JOIN tbl_master_user MU ON BRKG.USER_ID=MU.user_id
			INNER JOIN tbl_Master_shop MS ON BRKG.SHOP_ID=MS.Shop_Code
			INNER JOIN Master_sProducts MP ON BRKG.PRODUCT_ID=MP.sProducts_ID
			WHERE BRKG.USER_ID=@USER_ID AND CONVERT(NVARCHAR(10),DATE_TIME,120) BETWEEN CONVERT(NVARCHAR(10),@FROMDATE,120) AND CONVERT(NVARCHAR(10),@TODATE,120)
			AND BRKG.SHOP_ID=@SHOP_ID
		END
	IF @ACTION='DELETEDATA'
		BEGIN
			IF EXISTS(SELECT BREAKAGE_NUMBER FROM FSMBREAKAGEINFODETECTION WHERE USER_ID=@USER_ID AND BREAKAGE_NUMBER=@BREAKAGE_NUMBER)
				BEGIN
					SELECT USER_ID,BREAKAGE_NUMBER,DATE_TIME,PRODUCT_ID,DESCRIPTION_OF_BREAKAGE,CUSTOMER_FEEDBACK,REMARKS,SHOP_ID,DOCUMENTIMAGEPATH,CREATEDBY,CREATEDON 
					FROM FSMBREAKAGEINFODETECTION WHERE USER_ID=@USER_ID AND BREAKAGE_NUMBER=@BREAKAGE_NUMBER

					DELETE FROM FSMBREAKAGEINFODETECTION WHERE USER_ID=@USER_ID AND BREAKAGE_NUMBER=@BREAKAGE_NUMBER
				END
		END

	SET NOCOUNT OFF
END