--exec PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_REPORT_AUTOMAIL @FROMDATE='2023-06-01', @TODATE = '2023-06-10',@REPORTTYPE='Summary', @USERID=378

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_REPORT_AUTOMAIL]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_REPORT_AUTOMAIL] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_REPORT_AUTOMAIL]
(
@FROMDATE NVARCHAR(10)=NULL,
@TODATE NVARCHAR(10)=NULL,
@STATECODE NVARCHAR(MAX)=NULL,
@DESIGNID NVARCHAR(MAX)=NULL,
@EMPCODES NVARCHAR(MAX)=NULL,
@REPORTTYPE NVARCHAR(20)=NULL,
@USERID INT=NULL
) --WITH ENCRYPTION
AS
/***************************************************************************************************************************************************
Written by : Sanchita on 30/06/2023. Horizontal Performance Summary push mail configuration required for Honeywell. Refer: 26478
***************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	DECLARE @StrSql NVARCHAR(MAX),@SqlStrTable NVARCHAR(MAX),@FIRSTTIME BIT=1,@SLHEADID BIGINT,@PARENTID BIGINT
	DECLARE @SHOPTYPESELECTION_CURSOR CURSOR,@EMPSHOPTYPESELECTION_CURSOR CURSOR
	DECLARE @SHOPTYPEID BIGINT,@SHOPTYPENAME NVARCHAR(500),@FIRSTSHOPTYPEID BIGINT,@FIRSTSHOPTYPENAME NVARCHAR(500)
	DECLARE @SEQ BIGINT,@EMPUSERID BIGINT,@LOGIN_DATETIME NVARCHAR(10),@LOGINDATE NVARCHAR(10),@CONTACTNO NVARCHAR(100),@EMPID NVARCHAR(200),@EMPCODE NVARCHAR(200),@EMPNAME NVARCHAR(300),@STATEID BIGINT,
	@STATE NVARCHAR(300),@DEG_ID BIGINT,@DESIGNATION NVARCHAR(300),@DATEOFJOINING NVARCHAR(10),@OFFICE_ADDRESS NVARCHAR(MAX),@REPORTTO NVARCHAR(300),@RPTTODESG NVARCHAR(100),@ATTEN_STATUS NVARCHAR(100),
	@WORK_LEAVE_TYPE NVARCHAR(100),@REMARKS NVARCHAR(500),@ACTINTIME NVARCHAR(20),@ACTGRACEINTIME NVARCHAR(20),@ALTINTIME NVARCHAR(20),@ALTGRACEINTIME NVARCHAR(20),@APPLOGGEDIN NVARCHAR(20),
	@FIRSTCALLTIME NVARCHAR(20),@LASTCALLTIME NVARCHAR(20),@APPLOGEDOUT NVARCHAR(20),@ATTENDANCETYPE NVARCHAR(20),@ATTENDANCESTATUS NVARCHAR(20),@WORKINGDURATION NVARCHAR(20),@UNDERTIME NVARCHAR(20),
	@GPS_INACTIVE_DURATION NVARCHAR(20),@GPSINACTIVECNT INT,@IDEAL_TIME NVARCHAR(20),@IDEALTIME_CNT INT,@NEWSHOP_VISITED INT,@RE_VISITED INT,@TOTMETTING INT,@EMPSHOPTYPEID BIGINT,
	@EMPSHOPTYPENAME NVARCHAR(500),@SHOPVISITED INT

	IF OBJECT_ID('tempdb..#TMPEHEADING') IS NOT NULL
		DROP TABLE #TMPEHEADING
	CREATE TABLE #TMPEHEADING
	(
		HEADID BIGINT,HEADNAME NVARCHAR(800),HEADSHRTNAME NVARCHAR(800),PARRENTID BIGINT
	)
	
	IF OBJECT_ID('tempdb..#EMPLOYEEPERFORMANCE') IS NOT NULL
		DROP TABLE #EMPLOYEEPERFORMANCE	
	--Rev 2.0 && Increase the field length of REMARKS NVARCHAR(500) to REMARKS NVARCHAR(MAX)
	CREATE TABLE #EMPLOYEEPERFORMANCE (SEQ BIGINT,USERID BIGINT,LOGIN_DATETIME NVARCHAR(10),LOGINDATE NVARCHAR(10),CONTACTNO NVARCHAR(100),EMPID NVARCHAR(200),EMPCODE NVARCHAR(200),EMPNAME NVARCHAR(300),STATEID BIGINT,
	STATE NVARCHAR(300),DEG_ID BIGINT,DESIGNATION NVARCHAR(300),DATEOFJOINING NVARCHAR(10),OFFICE_ADDRESS NVARCHAR(MAX),REPORTTO NVARCHAR(300),RPTTODESG NVARCHAR(100),ATTEN_STATUS NVARCHAR(100),
	WORK_LEAVE_TYPE NVARCHAR(100),REMARKS NVARCHAR(MAX),ACTINTIME NVARCHAR(20),ACTGRACEINTIME NVARCHAR(20),ALTINTIME NVARCHAR(20),ALTGRACEINTIME NVARCHAR(20),APPLOGGEDIN NVARCHAR(20),FIRSTCALLTIME NVARCHAR(20),
	LASTCALLTIME NVARCHAR(20),APPLOGEDOUT NVARCHAR(20),ATTENDANCETYPE NVARCHAR(20),ATTENDANCESTATUS NVARCHAR(20),WORKINGDURATION NVARCHAR(20),UNDERTIME NVARCHAR(20),GPS_INACTIVE_DURATION NVARCHAR(20),
	GPSINACTIVECNT INT,IDEAL_TIME NVARCHAR(20),IDEALTIME_CNT INT,NEWSHOP_VISITED INT,RE_VISITED INT,TOTMETTING INT)
	CREATE NONCLUSTERED INDEX IX1 ON #EMPLOYEEPERFORMANCE (SEQ)

	--FOR REPORT HEADER
	INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT 1,'Employee Details','Employee Details',0
	UNION ALL
	SELECT 2,'Login Date','LOGIN_DATETIME',1	
	UNION ALL
	SELECT 3,'Login ID','CONTACTNO',1
	UNION ALL
	SELECT 4,'Employee ID','EMPID',1
	UNION ALL
	SELECT 5,'Employee(s)','EMPNAME',1
	UNION ALL
	SELECT 6,'State','STATE',1
	UNION ALL
	SELECT 7,'Office Address','OFFICE_ADDRESS',1
	UNION ALL
	SELECT 8,'Designation','DESIGNATION',1
	UNION ALL
	SELECT 9,'Supervisor','REPORTTO',1
	UNION ALL
	SELECT 10,'Supervisor Desg.','RPTTODESG',1
	UNION ALL
	SELECT 11,'Attendance Type','ATTEN_STATUS',1
	UNION ALL
	SELECT 12,'Work/Leave Type','WORK_LEAVE_TYPE',1
	UNION ALL
	SELECT 13,'Remarks','REMARKS',1
	UNION ALL
	SELECT 14,'Actual Attendance time','ACTINTIME',1
	UNION ALL
	SELECT 15,'App Login Time','APPLOGGEDIN',1
	UNION ALL
	SELECT 16,'App Logout Time','APPLOGEDOUT',1
	UNION ALL
	SELECT 17,'Working Duration (HH:MM)','WORKINGDURATION',1
	UNION ALL
	SELECT 18,'Undertime (HH:MM)','UNDERTIME',1
	UNION ALL
	SELECT 19,'GPS Inactive Duration (HH:MM)','GPS_INACTIVE_DURATION',1
	UNION ALL
	SELECT 20,'GPS Inactive Count','GPSINACTIVECNT',1
	UNION ALL
	SELECT 21,'Idle Time (HH:MM)','IDEAL_TIME',1
	UNION ALL
	SELECT 22,'Idle Time Count','IDEALTIME_CNT',1
	UNION ALL
	SELECT 23,'New Meeting','NEWSHOP_VISITED',1
	UNION ALL
	SELECT 24,'Followup Meeting','RE_VISITED',1
	UNION ALL
	SELECT 25,'Total Meeting','TOTMETTING',1
	--FOR REPORT HEADER
	SET @SLHEADID=25
	SET @PARENTID=25

	IF OBJECT_ID('tempdb..#TMPEMPLOYEEPERFORMANCE') IS NOT NULL
		DROP TABLE #TMPEMPLOYEEPERFORMANCE
	--Rev 2.0 && Increase the field length of REMARKS NVARCHAR(500) to REMARKS NVARCHAR(MAX)
	CREATE TABLE #TMPEMPLOYEEPERFORMANCE(SEQ BIGINT,USERID BIGINT,LOGIN_DATETIME NVARCHAR(10),LOGINDATE NVARCHAR(10),CONTACTNO NVARCHAR(100),EMPID NVARCHAR(200),EMPCODE NVARCHAR(200),EMPNAME NVARCHAR(300),STATEID BIGINT,
	STATE NVARCHAR(300),DEG_ID BIGINT,DESIGNATION NVARCHAR(300),DATEOFJOINING NVARCHAR(10),OFFICE_ADDRESS NVARCHAR(MAX),REPORTTO NVARCHAR(300),RPTTODESG NVARCHAR(100),ATTEN_STATUS NVARCHAR(100),
	WORK_LEAVE_TYPE NVARCHAR(100),REMARKS NVARCHAR(MAX),ACTINTIME NVARCHAR(20),ACTGRACEINTIME NVARCHAR(20),ALTINTIME NVARCHAR(20),ALTGRACEINTIME NVARCHAR(20),APPLOGGEDIN NVARCHAR(20),FIRSTCALLTIME NVARCHAR(20),
	LASTCALLTIME NVARCHAR(20),APPLOGEDOUT NVARCHAR(20),ATTENDANCETYPE NVARCHAR(20),ATTENDANCESTATUS NVARCHAR(20),WORKINGDURATION NVARCHAR(20),UNDERTIME NVARCHAR(20),GPS_INACTIVE_DURATION NVARCHAR(20),
	GPSINACTIVECNT INT,IDEAL_TIME NVARCHAR(20),IDEALTIME_CNT INT,NEWSHOP_VISITED INT,RE_VISITED INT,TOTMETTING INT,SHOPTYPEID BIGINT,SHOPTYPENAME NVARCHAR(500),SHOPVISITED INT)
	CREATE NONCLUSTERED INDEX IX1 ON #TMPEMPLOYEEPERFORMANCE (SEQ)
	
	SET @StrSql=''
	SET @StrSql='SET @SHOPTYPESELECTION_CURSOR=CURSOR FAST_FORWARD FOR SELECT shop_typeId,Name FROM tbl_shoptype WHERE IsActive=1 ORDER BY shop_typeId  ; OPEN @SHOPTYPESELECTION_CURSOR '
	EXEC sp_executesql @StrSql,N' @SHOPTYPESELECTION_CURSOR CURSOR OUTPUT', @SHOPTYPESELECTION_CURSOR OUTPUT

	FETCH NEXT FROM @SHOPTYPESELECTION_CURSOR INTO @SHOPTYPEID,@SHOPTYPENAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @sqlStrTable=''
			SET @sqlStrTable='ALTER TABLE #EMPLOYEEPERFORMANCE ADD '
			SET @sqlStrTable+='['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+']'+' NVARCHAR(20),'
			SET @sqlStrTable+='['+@SHOPTYPENAME+']' +' NVARCHAR(500),'
			SET @sqlStrTable+='['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'_'+'VISITED]'+' INT DEFAULT(0) '
			EXEC SP_EXECUTESQL @sqlStrTable

			--Rev 1.0 && This is done for optimization.First time we got all records and from second time just need only Shop Type data as per availability.
			--INSERT INTO #TMPEMPLOYEEPERFORMANCE EXEC [PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_FETCH_AUTOMIL] @FROMDATE=@FROMDATE,@TODATE=@TODATE,@STATEID=@STATECODE,@DESIGNID=@DESIGNID,@EMPID=@EMPCODES,@SHOPTYPEID=@SHOPTYPEID,@REPORTTYPE=@REPORTTYPE,@USERID=@USERID
			INSERT INTO #TMPEMPLOYEEPERFORMANCE EXEC [PRC_FTSHORIZONTALEMPLOYEEPERFORMANCESUMDET_FETCH_AUTOMIL] @FROMDATE=@FROMDATE,@TODATE=@TODATE,@STATEID=@STATECODE,@DESIGNID=@DESIGNID,@EMPID=@EMPCODES,@SHOPTYPEID=@SHOPTYPEID,@REPORTTYPE=@REPORTTYPE,@USERID=@USERID,@FIRSTTIME=@FIRSTTIME
			--End of Rev 1.0

			SET @StrSql=''
			IF @FIRSTTIME=1
				BEGIN
					SET @FIRSTSHOPTYPEID=@SHOPTYPEID
					SET @FIRSTSHOPTYPENAME=@SHOPTYPENAME
					SET @StrSql='INSERT INTO #EMPLOYEEPERFORMANCE(SEQ,USERID,LOGIN_DATETIME,LOGINDATE,CONTACTNO,EMPID,EMPCODE,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,OFFICE_ADDRESS,REPORTTO,RPTTODESG,'
					SET @StrSql+='ATTEN_STATUS,WORK_LEAVE_TYPE,REMARKS,ACTINTIME,ACTGRACEINTIME,ALTINTIME,ALTGRACEINTIME,APPLOGGEDIN,FIRSTCALLTIME,LASTCALLTIME,APPLOGEDOUT,ATTENDANCETYPE,ATTENDANCESTATUS,'
					SET @StrSql+='WORKINGDURATION,UNDERTIME,GPS_INACTIVE_DURATION,GPSINACTIVECNT,IDEAL_TIME,IDEALTIME_CNT,NEWSHOP_VISITED,RE_VISITED,TOTMETTING,'
					SET @StrSql+='['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'],['+@SHOPTYPENAME+'],['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'_'+'VISITED])'
					SET @StrSql+='SELECT SEQ,USERID,LOGIN_DATETIME,LOGINDATE,CONTACTNO,EMPID,EMPCODE,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,OFFICE_ADDRESS,REPORTTO,RPTTODESG,'
					SET @StrSql+='ATTEN_STATUS,WORK_LEAVE_TYPE,REMARKS,ACTINTIME,ACTGRACEINTIME,ALTINTIME,ALTGRACEINTIME,APPLOGGEDIN,FIRSTCALLTIME,LASTCALLTIME,APPLOGEDOUT,ATTENDANCETYPE,ATTENDANCESTATUS,'
					SET @StrSql+='WORKINGDURATION,UNDERTIME,GPS_INACTIVE_DURATION,GPSINACTIVECNT,IDEAL_TIME,IDEALTIME_CNT,NEWSHOP_VISITED,RE_VISITED,TOTMETTING,SHOPTYPEID,SHOPTYPENAME,SHOPVISITED '
					SET @StrSql+='FROM #TMPEMPLOYEEPERFORMANCE '
					EXEC SP_EXECUTESQL @StrSql
					SET @FIRSTTIME=0
				END
			ELSE IF @FIRSTTIME=0
				BEGIN
					SET @EMPSHOPTYPESELECTION_CURSOR=CURSOR FAST_FORWARD FOR SELECT SEQ,USERID,LOGIN_DATETIME,LOGINDATE,CONTACTNO,EMPID,EMPCODE,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,OFFICE_ADDRESS,
					REPORTTO,RPTTODESG,ATTEN_STATUS,WORK_LEAVE_TYPE,REMARKS,ACTINTIME,ACTGRACEINTIME,ALTINTIME,ALTGRACEINTIME,APPLOGGEDIN,FIRSTCALLTIME,LASTCALLTIME,APPLOGEDOUT,ATTENDANCETYPE,ATTENDANCESTATUS,
					WORKINGDURATION,UNDERTIME,GPS_INACTIVE_DURATION,GPSINACTIVECNT,IDEAL_TIME,IDEALTIME_CNT,NEWSHOP_VISITED,RE_VISITED,TOTMETTING,SHOPTYPEID,SHOPTYPENAME,SHOPVISITED
					FROM #TMPEMPLOYEEPERFORMANCE 
					--Rev 1.0 && This is done for optimization.First time we got all records and from second time just need only Shop Type data as per availability.
					WHERE SHOPTYPEID IS NOT NULL
					--End of Rev 1.0
					ORDER BY SEQ

					OPEN @EMPSHOPTYPESELECTION_CURSOR

					FETCH NEXT FROM @EMPSHOPTYPESELECTION_CURSOR INTO @SEQ,@EMPUSERID,@LOGIN_DATETIME,@LOGINDATE,@CONTACTNO,@EMPID,@EMPCODE,@EMPNAME,@STATEID,@STATE,@DEG_ID,@DESIGNATION,@DATEOFJOINING,
					@OFFICE_ADDRESS,@REPORTTO,@RPTTODESG,@ATTEN_STATUS,@WORK_LEAVE_TYPE,@REMARKS,@ACTINTIME,@ACTGRACEINTIME,@ALTINTIME,@ALTGRACEINTIME,@APPLOGGEDIN,@FIRSTCALLTIME,@LASTCALLTIME,@APPLOGEDOUT,
					@ATTENDANCETYPE,@ATTENDANCESTATUS,@WORKINGDURATION,@UNDERTIME,@GPS_INACTIVE_DURATION,@GPSINACTIVECNT,@IDEAL_TIME,@IDEALTIME_CNT,@NEWSHOP_VISITED,@RE_VISITED,@TOTMETTING,@EMPSHOPTYPEID,
					@EMPSHOPTYPENAME,@SHOPVISITED
					WHILE @@FETCH_STATUS=0
						BEGIN
							IF (EXISTS (SELECT EMPCODE FROM #EMPLOYEEPERFORMANCE WHERE EMPCODE=@EMPCODE AND @SHOPTYPEID=@SHOPTYPEID))
								BEGIN
									SET @StrSql='UPDATE #EMPLOYEEPERFORMANCE SET ['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+']='+LTRIM(RTRIM(STR(@SHOPTYPEID)))+',['+@SHOPTYPENAME+']='''+@SHOPTYPENAME+''' '
									EXEC SP_EXECUTESQL @StrSql
									SET @StrSql+='UPDATE #EMPLOYEEPERFORMANCE SET ['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'_'+'VISITED]=(SELECT SUM(ISNULL(SHOPVISITED,0)) FROM #TMPEMPLOYEEPERFORMANCE WHERE '
									SET @StrSql+='#EMPLOYEEPERFORMANCE.EMPCODE=#TMPEMPLOYEEPERFORMANCE.EMPCODE AND #EMPLOYEEPERFORMANCE.['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+']=#TMPEMPLOYEEPERFORMANCE.SHOPTYPEID '
									SET @StrSql+='AND #EMPLOYEEPERFORMANCE.LOGINDATE=#TMPEMPLOYEEPERFORMANCE.LOGINDATE '
									SET @StrSql+='GROUP BY #TMPEMPLOYEEPERFORMANCE.EMPCODE,#TMPEMPLOYEEPERFORMANCE.SHOPTYPEID) '
									EXEC SP_EXECUTESQL @StrSql
								END
							ELSE
								BEGIN
									SET @StrSql='INSERT INTO #EMPLOYEEPERFORMANCE(SEQ,USERID,LOGIN_DATETIME,LOGINDATE,CONTACTNO,EMPID,EMPCODE,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,OFFICE_ADDRESS,'
									SET @StrSql+='REPORTTO,RPTTODESG,ATTEN_STATUS,WORK_LEAVE_TYPE,REMARKS,ACTINTIME,ACTGRACEINTIME,ALTINTIME,ALTGRACEINTIME,APPLOGGEDIN,FIRSTCALLTIME,LASTCALLTIME,APPLOGEDOUT,'
									SET @StrSql+='ATTENDANCETYPE,ATTENDANCESTATUS,WORKINGDURATION,UNDERTIME,GPS_INACTIVE_DURATION,GPSINACTIVECNT,IDEAL_TIME,IDEALTIME_CNT,NEWSHOP_VISITED,RE_VISITED,TOTMETTING,'
									SET @StrSql+='['+LTRIM(RTRIM(STR(@FIRSTSHOPTYPEID)))+'],['+@FIRSTSHOPTYPENAME+'],['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'],['+@SHOPTYPENAME+'],['+LTRIM(RTRIM(STR(@SHOPTYPEID)))+'_'+'VISITED])'
									SET @StrSql+='SELECT SEQ,USERID,LOGIN_DATETIME,LOGINDATE,CONTACTNO,EMPID,EMPCODE,EMPNAME,STATEID,STATE,DEG_ID,DESIGNATION,DATEOFJOINING,OFFICE_ADDRESS,REPORTTO,RPTTODESG,ATTEN_STATUS,'
									SET @StrSql+='WORK_LEAVE_TYPE,REMARKS,ACTINTIME,ACTGRACEINTIME,ALTINTIME,ALTGRACEINTIME,APPLOGGEDIN,FIRSTCALLTIME,LASTCALLTIME,APPLOGEDOUT,ATTENDANCETYPE,ATTENDANCESTATUS,'
									SET @StrSql+='WORKINGDURATION,UNDERTIME,GPS_INACTIVE_DURATION,GPSINACTIVECNT,IDEAL_TIME,IDEALTIME_CNT,NEWSHOP_VISITED,RE_VISITED,TOTMETTING,'
									SET @StrSql+=''+LTRIM(RTRIM(STR(@FIRSTSHOPTYPEID)))+','''+@FIRSTSHOPTYPENAME+''',SHOPTYPEID,SHOPTYPENAME,SHOPVISITED '
									SET @StrSql+='FROM #TMPEMPLOYEEPERFORMANCE '
									SET @StrSql+='WHERE EMPCODE='''+@EMPCODE+''' '
									EXEC SP_EXECUTESQL @StrSql
								END
							FETCH NEXT FROM @EMPSHOPTYPESELECTION_CURSOR INTO @SEQ,@EMPUSERID,@LOGIN_DATETIME,@LOGINDATE,@CONTACTNO,@EMPID,@EMPCODE,@EMPNAME,@STATEID,@STATE,@DEG_ID,@DESIGNATION,@DATEOFJOINING,
							@OFFICE_ADDRESS,@REPORTTO,@RPTTODESG,@ATTEN_STATUS,@WORK_LEAVE_TYPE,@REMARKS,@ACTINTIME,@ACTGRACEINTIME,@ALTINTIME,@ALTGRACEINTIME,@APPLOGGEDIN,@FIRSTCALLTIME,@LASTCALLTIME,
							@APPLOGEDOUT,@ATTENDANCETYPE,@ATTENDANCESTATUS,@WORKINGDURATION,@UNDERTIME,@GPS_INACTIVE_DURATION,@GPSINACTIVECNT,@IDEAL_TIME,@IDEALTIME_CNT,@NEWSHOP_VISITED,@RE_VISITED,
							@TOTMETTING,@EMPSHOPTYPEID,@EMPSHOPTYPENAME,@SHOPVISITED
						END
						CLOSE @EMPSHOPTYPESELECTION_CURSOR
						DEALLOCATE @EMPSHOPTYPESELECTION_CURSOR				
				END
			--FOR REPORT HEADER
			SET @PARENTID=@SLHEADID+2
					
			INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) 
			SELECT @SLHEADID+1 AS HEADID,@SHOPTYPEID AS HEADNAME,@SHOPTYPEID AS HEADSHRTNAME,NULL AS PARRENTID 

			INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) 
			SELECT @SLHEADID+2 AS HEADID,@SHOPTYPENAME AS HEADNAME,@SHOPTYPENAME AS HEADSHRTNAME,0 AS PARRENTID 
					
			INSERT INTO #TMPEHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) 
			SELECT @SLHEADID+3 AS HEADID,'Visit' AS HEADNAME,LTRIM(RTRIM(STR(@SHOPTYPEID)))+'_VISITED' AS HEADSHRTNAME,@PARENTID AS PARRENTID 
					
			SET @SLHEADID=@SLHEADID+3

			--FOR REPORT HEADER
			FETCH NEXT FROM @SHOPTYPESELECTION_CURSOR INTO @SHOPTYPEID,@SHOPTYPENAME
			TRUNCATE TABLE #TMPEMPLOYEEPERFORMANCE
		END
	CLOSE @SHOPTYPESELECTION_CURSOR
	DEALLOCATE @SHOPTYPESELECTION_CURSOR

	-- REV SANCHITA (AUTOMAIL)
	--SELECT * FROM #TMPEHEADING ORDER BY HEADID
	--SELECT * FROM #EMPLOYEEPERFORMANCE ORDER BY SEQ

		IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'HORIZONTALSUMMARY_MAIL') AND TYPE IN (N'U'))
				DROP TABLE HORIZONTALSUMMARY_MAIL

		
		DECLARE @sqlQry VARCHAR(MAX), @HEADNAME varchar(500), @HEADSHRTNAME varchar(500), @sqlInsertQry NVARCHAR(MAX), @cnt int
				, @sqlInsertQry1 NVARCHAR(MAX), @sqlInsertQry2 NVARCHAR(MAX), @PARRENTID BIGINT, @HEADID BIGINT, @VISITED VARCHAR(50)
		set @sqlQry = '' -- 'select '
		set @sqlInsertQry = '' -- 'insert into HORIZONTALSUMMARY_MAIL values ( ' 
		set @cnt = 1
		SET @sqlInsertQry2 = '' -- 'INSERT INTO HORIZONTALSUMMARY_MAIL SELECT '

		-- Update header row
		declare db_cursor cursor for
		select HEADID, HEADNAME, HEADSHRTNAME, PARRENTID from #TMPEHEADING where PARRENTID IN (0,1) AND PARRENTID IS NOT NULL AND HEADSHRTNAME<>'Employee Details' order by HEADID
		open db_cursor
		fetch next from db_cursor into @HEADID,@HEADNAME, @HEADSHRTNAME, @PARRENTID
		while @@FETCH_STATUS=0
		begin
			IF(@PARRENTID=1)
			BEGIN
				if(@cnt = 1)
				begin
					set @sqlInsertQry2 += @HEADSHRTNAME+' AS ['+@HEADNAME+']'
				end
				else
				begin
					set @sqlInsertQry2 += ','+ @HEADSHRTNAME+' AS ['+@HEADNAME+']'
				end
			END
			ELSE
			BEGIN
				set @VISITED = (SELECT HEADSHRTNAME FROM #TMPEHEADING WHERE PARRENTID=@HEADID)
				
				if(@cnt = 1)
				begin
					set @sqlInsertQry2 += 'ISNULL(['+@VISITED +'],O) as ['+@HEADNAME+' Visit]'
				end
				else
				begin
					set @sqlInsertQry2 += ','+ 'ISNULL(['+@VISITED +'],0) as ['+@HEADNAME+' Visit]'
				end
			END

			set @cnt += 1

			fetch next from db_cursor into @HEADID,@HEADNAME, @HEADSHRTNAME, @PARRENTID
		end
		close db_cursor
		deallocate db_cursor

		SET @sqlInsertQry2 = 'select ' +@sqlInsertQry2+  ' into HORIZONTALSUMMARY_MAIL from #EMPLOYEEPERFORMANCE '
		EXEC SP_EXECUTESQL @sqlInsertQry2


		--SELECT * FROM HORIZONTALSUMMARY_MAIL
	
	-- REV SANCHITA (AUTOMAIL)


	DROP TABLE #EMPLOYEEPERFORMANCE
	DROP TABLE #TMPEHEADING
	DROP TABLE #TMPEMPLOYEEPERFORMANCE

	SET NOCOUNT OFF
END