
--drop PROC [dbo].[PRC_SALESTARGETASSIGN ]


IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_SALESTARGETASSIGN]') AND type in (N'P', N'PC')) 
 BEGIN 
 EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_SALESTARGETASSIGN] AS'  
 END 
 GO
ALTER PROC [dbo].[PRC_SALESTARGETASSIGN] 
(
@ACTION NVARCHAR(150) = NULL,
@TargetType NVARCHAR(100) = '',
@TARGET_ID BIGINT = 0 ,
@TargetDate DATETIME = NULL,
@TargetNo NVARCHAR(100) = '',
@USER_ID BIGINT=NULL,
@UNIQUETARGETLEVELID bigint=0,
@UNIQUETARGETLEVEL nvarchar(200)='',
@UNIQUEINTERNALID nvarchar(10)='' ,
@UNIQUETIMEFRAME nvarchar(200)='' ,
@UNIQUESTARTEDATE datetime= NULL,
@UNIQUEENDDATE datetime= NULL,
@FSM_UDT_SALESTARGETASSIGN FSM_UDT_SALESTARGETASSIGN ReadOnly,
@ReturnValue BIGINT=0 OUTPUT

) --WITH ENCRYPTION
AS  
/************************************************************************************************
Written by : Priti Roy on 06/11/2024
0027770:A new module is required as  Target Assign

************************************************************************************************/ 
    SET NOCOUNT ON ;
    BEGIN TRY 
	BEGIN TRANSACTION	

	DECLARE @SALESTARGETID BIGINT = 0;
	Declare @LastCount bigint=0,@LastCountDetails bigint=0
	DECLARE @Success BIT = 0;
	DECLARE @TARGETLEVELID bigint=0,@TARGETLEVEL nvarchar(200)='',@INTERNALID nvarchar(100)='' ,@TIMEFRAME nvarchar(200)='' ,@STARTEDATE datetime,@ENDDATE datetime
	,@ORDERAMOUNT Numeric(18,4)=0,@COLLECTION Numeric(18,4)=0, @ORDERQTY Numeric(18,4)=0
	,@NEWVISIT bigint=0,@REVISIT bigint=0
	
		IF @ACTION = 'INSERTSALESTARGET'
		BEGIN
			IF @TargetNo IS NOT NULL AND @TargetNo <> ''
			BEGIN
				select  @LastCount=iSNULL(MAX(SALESTARGET_ID),0) from FSM_SALESTARGETASSIGN  
				INSERT INTO FSM_SALESTARGETASSIGN(SALESTARGET_ID,TARGETLEVELID,TARGETDOCNUMBER,TARGETDATE,CREATEDBY,CREATEDON) 
				VALUES(@LastCount+1,@TargetType,@TargetNo,@TargetDate,@USER_ID,GETDATE());			

					
				DECLARE db_cursor CURSOR FOR  
				Select 	TARGETLEVELASSIGNID,TARGETLEVELASSIGNNAME,INTERNALID,TIMEFRAME ,STARTDATE,ENDDATE,NEWVISIT,REVISIT,ORDERAMOUNT,COLLECTION,ORDERQTY
				From @FSM_UDT_SALESTARGETASSIGN order by SlNo ASC				

				OPEN db_cursor   
				FETCH NEXT FROM db_cursor INTO @TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,@COLLECTION,@ORDERQTY

				WHILE @@FETCH_STATUS = 0   
				BEGIN 
					select  @LastCountDetails=iSNULL(MAX(SALESTARGETDETAILS_ID),0) from FSM_SALESTARGETASSIGN_DETAILS  
					INSERT INTO FSM_SALESTARGETASSIGN_DETAILS(SALESTARGETDETAILS_ID,SALESTARGET_ID,TARGETDOCNUMBER
						,TARGETLEVELASSIGNID,TARGETLEVELASSIGNNAME,	INTERNALID,TIMEFRAME,STARTDATE,ENDDATE,NEWVISIT,REVISIT,ORDERAMOUNT,
						COLLECTION,ORDERQTY, TARGETLEVELID,CREATEDBY,CREATEDON	
					)
					Select @LastCountDetails+1,@LastCount+1,@TargetNo
						,@TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,
						@COLLECTION,@ORDERQTY, @TargetType,@USER_ID,GETDATE()
							
					
					SET @Success = 1;

					FETCH NEXT FROM db_cursor INTO @TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,@COLLECTION,@ORDERQTY
				END   

				CLOSE db_cursor   
				DEALLOCATE db_cursor
			END
			
			SELECT @LastCount+1 AS DetailsID, @Success AS 'Success';

		END

		Else IF @ACTION = 'UPDATESALESTARGET'
		BEGIN

			IF @TargetNo IS NOT NULL AND @TargetNo <> ''
			BEGIN
				--update FSM_SALESTARGETASSIGN set TARGETLEVEL=@TargetType,TARGETDOCNUMBER=@TargetNo,TARGETDATE=@TargetDate,UPDATEDBY=@USER_ID,UPDATEDON=GETDATE()
				--where SALESTARGET_ID=@TARGET_ID

			update FSM_SALESTARGETASSIGN set UPDATEDBY=@USER_ID,UPDATEDON=GETDATE() where SALESTARGET_ID=@TARGET_ID


			delete from FSM_SALESTARGETASSIGN_DETAILS where SALESTARGET_ID=@TARGET_ID

					
			DECLARE db_cursor CURSOR FOR  
			Select 	TARGETLEVELASSIGNID,TARGETLEVELASSIGNNAME,INTERNALID,TIMEFRAME ,STARTDATE,ENDDATE,NEWVISIT,REVISIT,ORDERAMOUNT,COLLECTION,ORDERQTY
			From @FSM_UDT_SALESTARGETASSIGN order by SlNo ASC				

			OPEN db_cursor   
			FETCH NEXT FROM db_cursor INTO @TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,@COLLECTION,@ORDERQTY

			WHILE @@FETCH_STATUS = 0   
			BEGIN 

				select  @LastCountDetails=iSNULL(MAX(SALESTARGETDETAILS_ID),0) from FSM_SALESTARGETASSIGN_DETAILS  
				INSERT INTO FSM_SALESTARGETASSIGN_DETAILS(SALESTARGETDETAILS_ID,SALESTARGET_ID,TARGETDOCNUMBER
					,TARGETLEVELASSIGNID,TARGETLEVELASSIGNNAME,INTERNALID,TIMEFRAME,STARTDATE,ENDDATE,NEWVISIT,REVISIT,ORDERAMOUNT,
					COLLECTION,ORDERQTY, TARGETLEVELID,CREATEDBY,CREATEDON	
				)
				Select @LastCountDetails+1,@TARGET_ID,@TargetNo
					,@TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,
					@COLLECTION,@ORDERQTY,@TargetType, @USER_ID,GETDATE()
							
					
				SET @Success = 1;

				FETCH NEXT FROM db_cursor INTO @TARGETLEVELID,@TARGETLEVEL,@INTERNALID,@TIMEFRAME ,@STARTEDATE,@ENDDATE,@NEWVISIT,@REVISIT,@ORDERAMOUNT,@COLLECTION,@ORDERQTY
			END   

			CLOSE db_cursor   
			DEALLOCATE db_cursor
			END
			
			SELECT @TARGET_ID AS DetailsID, @Success AS 'Success';

		END

		else IF @ACTION = 'GETDETAILSSALESTARGET'
		Begin
		
			select SALESTARGETDETAILS_ID,ROW_NUMBER() OVER(ORDER BY SALESTARGETDETAILS_ID ASC) AS SlNO,TARGETDOCNUMBER,TARGETLEVELASSIGNID TARGETLEVELID,TARGETLEVELASSIGNNAME TARGETLEVEL,INTERNALID,TIMEFRAME,
				CONVERT(nvarchar(10),STARTDATE,105) STARTEDATE, CONVERT(nvarchar(10),ENDDATE,105) ENDDATE
				,NEWVISIT,REVISIT,ORDERAMOUNT,COLLECTION,ORDERQTY
			from FSM_SALESTARGETASSIGN_DETAILS DETAILS where DETAILS.SALESTARGET_ID=@TARGET_ID
		end
		else IF @ACTION = 'GETHEADERSALESTARGET'
		Begin
			select * from FSM_SALESTARGETASSIGN STARGET  where STARGET.SALESTARGET_ID=@TARGET_ID
		End
		else IF @ACTION = 'CHECKUNIQUETARGETDOCNUMBER'
		Begin
			if EXISTS (select 'Y' from FSM_SALESTARGETASSIGN   where TARGETDOCNUMBER=@TargetNo  and SALESTARGET_ID<>@TARGET_ID)
			Begin
				set @ReturnValue=1;
			end
			Else
			Begin
				set @ReturnValue=0;
			End
		End
		ELSE IF (@ACTION='DELETE')
		BEGIN	    
			delete from FSM_SALESTARGETASSIGN_DETAILS  Where SALESTARGET_ID =@TARGET_ID   
			Delete from FSM_SALESTARGETASSIGN Where SALESTARGET_ID =@TARGET_ID     
			set @ReturnValue='1'    
		END  
		else IF @ACTION = 'CHECKUNIQUETARGETDETAILS'
		Begin
			if EXISTS (select 'Y' from FSM_SALESTARGETASSIGN_DETAILS where TARGETLEVELASSIGNNAME=@UNIQUETARGETLEVEL and TARGETLEVELASSIGNID=@UNIQUETARGETLEVELID and INTERNALID=@UNIQUEINTERNALID 
					and TIMEFRAME=@UNIQUETIMEFRAME and STARTDATE=@UNIQUESTARTEDATE and ENDDATE=@UNIQUEENDDATE and TARGETLEVELID=@TargetType
					and TARGETDOCNUMBER<>@TargetNo)
			Begin
				set @ReturnValue=1;
			end
			Else
			Begin
				set @ReturnValue=0;
			End
		End
		else IF @ACTION = 'GETDROPDOWNBINDDATA'
		Begin
			SELECT ID,LEVEL_NAME FROM FSM_TARGETLEVELSETUP_MASTER WHERE LEVEL_ISACTIVE=1
			order by ID
		END


		COMMIT TRANSACTION
		
    END TRY

	
    BEGIN CATCH
		
		ROLLBACK TRANSACTION
	
        DECLARE @ErrorMessage NVARCHAR(4000) ;
        DECLARE @ErrorSeverity INT ;
        DECLARE @ErrorState INT ;
        SELECT  @ErrorMessage = ERROR_MESSAGE() ,
                @ErrorSeverity = ERROR_SEVERITY() ,
                @ErrorState = ERROR_STATE() ;
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState) ;
    END CATCH ;
    RETURN ;
GO

