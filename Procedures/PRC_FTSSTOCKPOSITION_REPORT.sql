--EXEC PRC_FTSSTOCKPOSITION_REPORT '2022-04-01','2022-05-31','','Summary',378
--EXEC PRC_FTSSTOCKPOSITION_REPORT '2022-04-01','2022-05-31','35','Details',378

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSSTOCKPOSITION_REPORT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSSTOCKPOSITION_REPORT] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSSTOCKPOSITION_REPORT]
(
@FROMDATE NVARCHAR(10)=NULL,
@TODATE NVARCHAR(10)=NULL,
@PRODID NVARCHAR(MAX)=NULL,
@REPORTTYPE NVARCHAR(20)=NULL,
@USERID INT
) --WITH ENCRYPTION
AS
/****************************************************************************************************************************************************************************
Written by : Debashis Talukder ON 23/05/2022
Module	   : Stock Position.Refer: 0024899
****************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON
	
	DECLARE @SqlStr NVARCHAR(MAX),@SqlStrTable NVARCHAR(MAX)

	IF OBJECT_ID('tempdb..#Product_List') IS NOT NULL
		DROP TABLE #Product_List
	CREATE TABLE #Product_List (Product_Id BIGINT NULL)
	CREATE NONCLUSTERED INDEX Product_Id ON #Product_List (Product_Id ASC)
	IF @PRODID<>''
		BEGIN
			SET @PRODID=REPLACE(@PRODID,'''','')
			SET @SqlStrTable=''
			SET @SqlStrTable='INSERT INTO #Product_List SELECT sProducts_ID FROM Master_sProducts WHERE sProducts_ID IN('+@PRODID+') '
			EXEC SP_EXECUTESQL @SqlStrTable
		END		

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'FTSSTOCKPOSITION_REPORT') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE FTSSTOCKPOSITION_REPORT
			(
			  USERID INT,
			  SEQ BIGINT,
			  REPORTTYPE NVARCHAR(20),
			  PRODID BIGINT,
			  PRODCODE NVARCHAR(300),
			  PRODNAME NVARCHAR(300),
			  PRODCLASS NVARCHAR(300),
			  ORDNO NVARCHAR(50),
			  ORDDATE NVARCHAR(10),
			  INVNO NVARCHAR(50),
			  INVDATE NVARCHAR(10),
			  OPSTK DECIMAL(18,2),
			  INVQTY DECIMAL(18,2),
			  BALQTY DECIMAL(18,2),
			)
			CREATE NONCLUSTERED INDEX IX1 ON FTSSTOCKPOSITION_REPORT (SEQ)
		END
	DELETE FROM FTSSTOCKPOSITION_REPORT WHERE USERID=@USERID AND REPORTTYPE=@REPORTTYPE

	SET @SqlStr=''
	IF @REPORTTYPE='Summary'
		BEGIN
			SET @SqlStr='INSERT INTO FTSSTOCKPOSITION_REPORT(USERID,SEQ,REPORTTYPE,PRODID,PRODCODE,PRODNAME,PRODCLASS,OPSTK,INVQTY,BALQTY) '
			SET @SqlStr+='SELECT '+LTRIM(RTRIM(STR(@USERID)))+' AS USERID,ROW_NUMBER() OVER(ORDER BY PM.sProducts_Name) AS SEQ,''Summary'' AS REPORTTYPE,PM.sProducts_ID AS PRODID,PM.sProducts_Code AS PRODCODE,'
			SET @SqlStr+='PM.sProducts_Name AS PRODNAME,CLS.ProductClass_Name AS PRODCLASS,ISNULL(OP.OPSTK,0) AS OPSTK,ISNULL(INVDET.INVQTY,0) AS INVQTY,ISNULL(OP.OPSTK,0)-ISNULL(INVDET.INVQTY,0) AS BALQTY '
			SET @SqlStr+='FROM MASTER_SPRODUCTS PM '
			SET @SqlStr+='LEFT OUTER JOIN Master_ProductClass CLS ON PM.ProductClass_Code=CLS.ProductClass_ID '
			SET @SqlStr+='LEFT OUTER JOIN ('
			SET @SqlStr+='SELECT PRODUCT_ID,SUM(ISNULL(IN_QTY,0)) AS OPSTK FROM FTS_WarehouseWiseProductStock '
			SET @SqlStr+='GROUP BY Product_Id '
			SET @SqlStr+=') OP ON PM.sProducts_ID=OP.PRODUCT_ID '
			SET @SqlStr+='INNER JOIN ('
			SET @SqlStr+='SELECT ORDD.Product_Id,SUM(ISNULL(ORDD.Product_Qty,0)) AS INVQTY FROM tbl_trans_fts_Orderupdate ORDH '
			SET @SqlStr+='INNER JOIN tbl_FTs_OrderdetailsProduct ORDD ON ORDH.OrderId=ORDD.Order_ID '
			SET @SqlStr+='INNER JOIN tbl_FTS_BillingDetails BD ON ORDH.OrderCode=BD.OrderCode '
			SET @SqlStr+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
			SET @SqlStr+='GROUP BY ORDD.Product_Id '
			SET @SqlStr+=') INVDET ON PM.sProducts_ID=INVDET.Product_Id '
			IF @PRODID<>''
				SET @SqlStr+='WHERE EXISTS (SELECT Product_Id FROM #Product_List AS P WHERE P.Product_Id=PM.sProducts_ID) '
		END
	ELSE IF @REPORTTYPE='Details'
		BEGIN
			SET @SqlStr='INSERT INTO FTSSTOCKPOSITION_REPORT(USERID,SEQ,REPORTTYPE,PRODID,PRODCODE,PRODNAME,PRODCLASS,ORDNO,ORDDATE,INVNO,INVDATE,INVQTY) '
			SET @SqlStr+='SELECT '+LTRIM(RTRIM(STR(@USERID)))+' AS USERID,ROW_NUMBER() OVER(ORDER BY INVDET.INVDATEORDBY) AS SEQ,''Details'' AS REPORTTYPE,PM.sProducts_ID AS PRODID,PM.sProducts_Code AS PRODCODE,'
			SET @SqlStr+='PM.sProducts_Name AS PRODNAME,CLS.ProductClass_Name AS PRODCLASS,INVDET.ORDNO,INVDET.ORDDATE,INVDET.INVNO,INVDET.INVDATE,ISNULL(INVDET.INVQTY,0) AS INVQTY '
			SET @SqlStr+='FROM MASTER_SPRODUCTS PM '
			SET @SqlStr+='LEFT OUTER JOIN Master_ProductClass CLS ON PM.ProductClass_Code=CLS.ProductClass_ID '
			SET @SqlStr+='INNER JOIN ('
			SET @SqlStr+='SELECT ORDH.OrderCode AS ORDNO,CONVERT(NVARCHAR(10),ORDH.Orderdate,105) AS ORDDATE,BD.invoice_no AS INVNO,CONVERT(NVARCHAR(10),BD.invoice_date,105) AS INVDATE,'
			SET @SqlStr+='CONVERT(NVARCHAR(10),BD.invoice_date,120) AS INVDATEORDBY,ORDD.Product_Id,ISNULL(ORDD.Product_Qty,0) AS INVQTY FROM tbl_trans_fts_Orderupdate ORDH '
			SET @SqlStr+='INNER JOIN tbl_FTs_OrderdetailsProduct ORDD ON ORDH.OrderId=ORDD.Order_ID '
			SET @SqlStr+='INNER JOIN tbl_FTS_BillingDetails BD ON ORDH.OrderCode=BD.OrderCode '
			SET @SqlStr+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
			SET @SqlStr+=') INVDET ON PM.sProducts_ID=INVDET.Product_Id '
			SET @SqlStr+='WHERE EXISTS (SELECT Product_Id FROM #Product_List AS P WHERE P.Product_Id=PM.sProducts_ID) '
		END

	--SELECT @SqlStr
	EXEC SP_EXECUTESQL @SqlStr

	DROP TABLE #Product_List
	
	SET NOCOUNT OFF
END