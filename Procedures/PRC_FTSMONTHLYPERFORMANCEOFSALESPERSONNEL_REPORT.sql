--EXEC PRC_FTSMONTHLYPERFORMANCEOFSALESPERSONNEL_REPORT 'APR','EMG0000002','','2021'
--EXEC PRC_FTSMONTHLYPERFORMANCEOFSALESPERSONNEL_REPORT 'JUL','EMP0000003','','2022'

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSMONTHLYPERFORMANCEOFSALESPERSONNEL_REPORT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSMONTHLYPERFORMANCEOFSALESPERSONNEL_REPORT] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSMONTHLYPERFORMANCEOFSALESPERSONNEL_REPORT]
(
@MONTH NVARCHAR(3)=NULL,
@EMPID NVARCHAR(MAX)=NULL,
@PRODUCT_ID NVARCHAR(MAX)=NULL,
--Rev 2.0
@YEAR NVARCHAR(10)=NULL
--End of Rev 2.0
) --WITH ENCRYPTION
AS
/**********************************************************************************************************************************************************************************************************
Written by : Debashis Talukder On 26/08/2019 
Module	   : MONTHLY PERFORMANCE REPORT OF SALES PERSONNEL
1.0		v2.0.3		Debashis	09/12/2019		Two value required in Monthly Performance of Sales Personnel Report.
												While the user make the attendance from mobile app, under the 'On Leave' tab, options are there as 'Weekly Off' & 'Holiday'.
												If the user selected either 'weekly off' or 'holiday' in the attendance, same value will be updated in the Monthly Performance of 
												Sales Personnel Report for the day on column 'Remarks'.If the user provide remarks along with 'weekly off' then it will appear like "(Weekly Off) Remarks 
												Text".Refer: 0021446
2.0		v2.0.4		Debashis	03/01/2020		Year field required in the Monthly report.Refer: 0021574
3.0		v2.0.18		Debashis	06/10/2020		Date check has been implemented.Refer: 0023233
4.0		v2.0.31		Debashis	15/07/2022		Opening Stock is not matching while generating Daily Performance report for sales personnel.Now it has been solved.
												Refer: 0025042
5.0		v2.0.36		Debashis	17/11/2022		Product ID will be consider as unique whether it is tagged with multiple order or single order to generate the Monthly Sales Report.
												Refer: 0025457
**********************************************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	DECLARE @Strsql NVARCHAR(MAX),@sqlStrTable NVARCHAR(MAX)
	DECLARE @MONTHNAME NVARCHAR(3),@MONTHNO INT=0,@FROMDATE NVARCHAR(10),@TODATE NVARCHAR(10),@M_FROMDATE NVARCHAR(10)
	DECLARE @PRODUCT_CURSOR CURSOR,@OPENINGSTK_CURSOR CURSOR,@PRIMARYSTK_CURSOR CURSOR,@SECONDARYSTK_CURSOR CURSOR,@CLOSINGSTK_CURSOR CURSOR,@EMPSHOP_CURSOR CURSOR
	DECLARE @CURSOR_OPENINGSTOCKCALC CURSOR,@CURSOR_PRIMARYSTOCKCALC CURSOR,@CURSOR_SECONDARYSTOCKCALC CURSOR,@CURSOR_CLOSINGSTOCKCALC CURSOR
	DECLARE @BRANDID INT,@BRAND NVARCHAR(50),@PRODID BIGINT,@PRODNAME NVARCHAR(100),@M_BRANDID INT,@BRANDONCE BIT,@M_EMPID NVARCHAR(10),@M_PRODID BIGINT,@BRANDPRODNAME NVARCHAR(MAX)
	DECLARE @EMPCODE NVARCHAR(10),@SHOP_CODE NVARCHAR(100),@BRAND_VALUE NVARCHAR(MAX),@PROD_VALUE NVARCHAR(MAX),@M_EMPCODE NVARCHAR(10),@M_SHOP_CODE NVARCHAR(100),@LOGGEDINDATE NVARCHAR(10)
	DECLARE @BRANDPRODNAME_OS NVARCHAR(MAX)='',@BRANDPRODNAME_PS NVARCHAR(MAX)='',@BRANDPRODNAME_SS NVARCHAR(MAX)='',@BRANDPRODNAME_CS NVARCHAR(MAX)=''
	DECLARE @BRANDPRODNAMESUMM_OS NVARCHAR(MAX)='',@BRANDPRODNAMESUMM_PS NVARCHAR(MAX)='',@BRANDPRODNAMESUMM_SS NVARCHAR(MAX)='',@BRANDPRODNAMESUMM_CS NVARCHAR(MAX)=''
	DECLARE @SLHEADID BIGINT,@M_SLHEADID BIGINT,@M_SLHEADID_NEXT BIGINT,@SLPARRENTID BIGINT,@SLPARRENTID_NEXT BIGINT,@SLPARRENTID_NEXT_CS BIGINT,@HBRANDONCE INT

	SET @MONTHNAME=@MONTH
	SET @MONTHNO=DATEPART(MM,@MONTHNAME+'01 1900')
	--Rev 2.0
	--SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)),120)
	--SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))),120)
	SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, @YEAR),120)
	SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), @YEAR)),120)
	--End of Rev 2.0

	IF OBJECT_ID('tempdb..#EMPLOYEE_LIST') IS NOT NULL
		DROP TABLE #EMPLOYEE_LIST
	CREATE TABLE #EMPLOYEE_LIST (emp_contactId NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS)
	IF @EMPID <> ''
		BEGIN
			SET @M_EMPID=@EMPID
			SET @EMPID = REPLACE(''''+@EMPID+'''',',',''',''')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #EMPLOYEE_LIST SELECT emp_contactId FROM tbl_master_employee WHERE emp_contactId IN('+@EMPID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF OBJECT_ID('tempdb..#Product_List') IS NOT NULL
		DROP TABLE #Product_List
	CREATE TABLE #Product_List (Product_Id BIGINT NULL)
	CREATE NONCLUSTERED INDEX Product_Id ON #Product_List (Product_Id ASC)
	IF @PRODUCT_ID<>''
		BEGIN
			SET @PRODUCT_ID=REPLACE(@PRODUCT_ID,'''','')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #Product_List SELECT sProducts_ID FROM Master_sProducts WHERE sProducts_ID IN('+@PRODUCT_ID+') '
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF OBJECT_ID('tempdb..#TMPERFORMSLSPERSONNELHEADING') IS NOT NULL
		DROP TABLE #TMPERFORMSLSPERSONNELHEADING
	CREATE TABLE #TMPERFORMSLSPERSONNELHEADING
		(
			HEADID BIGINT,HEADNAME NVARCHAR(800),HEADSHRTNAME NVARCHAR(800),PARRENTID BIGINT,FIXEDSTYLE BIGINT DEFAULT(0)
		)
	
	IF OBJECT_ID('tempdb..#TEMPPRODBRAND') IS NOT NULL
		DROP TABLE #TEMPPRODBRAND
	CREATE TABLE #TEMPPRODBRAND
		(
			BRANDID INT,BRAND NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS,PRODID BIGINT,PRODNAME NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS
		)
	CREATE NONCLUSTERED INDEX IX1 ON #TEMPPRODBRAND(BRANDID ASC,PRODID ASC)

	IF OBJECT_ID('tempdb..#TMPOPENINGSTOCK') IS NOT NULL
		DROP TABLE #TMPOPENINGSTOCK
	CREATE TABLE #TMPOPENINGSTOCK
		(
			LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100),BRANDID INT,BRAND NVARCHAR(50),BRAND_OPENING NVARCHAR(60),PRODID BIGINT,PRODNAME NVARCHAR(100),PRODNAME_OPENING NVARCHAR(150),
			QTY_OS INT,ORDVALUE_OS DECIMAL(18,2)
		)
	CREATE NONCLUSTERED INDEX IXO ON #TMPOPENINGSTOCK(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPOPENINGSTOCK_FINAL') IS NOT NULL
		DROP TABLE #TMPOPENINGSTOCK_FINAL
	CREATE TABLE #TMPOPENINGSTOCK_FINAL
		(
			LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100)
		)
	CREATE NONCLUSTERED INDEX IXOF ON #TMPOPENINGSTOCK_FINAL(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPPRIMARYSTOCK') IS NOT NULL
		DROP TABLE #TMPPRIMARYSTOCK
	CREATE TABLE #TMPPRIMARYSTOCK
		(
			LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100),BRANDID INT,BRAND NVARCHAR(50),BRAND_PRIMARY NVARCHAR(60),PRODID BIGINT,PRODNAME NVARCHAR(100),PRODNAME_PRIMARY NVARCHAR(150),
			QTY_PS INT,ORDVALUE_PS DECIMAL(18,2)
		)
	CREATE NONCLUSTERED INDEX IXP ON #TMPPRIMARYSTOCK(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPPRIMARYSTOCK_FINAL') IS NOT NULL
		DROP TABLE #TMPPRIMARYSTOCK_FINAL
	CREATE TABLE #TMPPRIMARYSTOCK_FINAL
		(
		LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100)
		)
	CREATE NONCLUSTERED INDEX IXPF ON #TMPPRIMARYSTOCK_FINAL(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPSECONDARYSTOCK') IS NOT NULL
		DROP TABLE #TMPSECONDARYSTOCK
	CREATE TABLE #TMPSECONDARYSTOCK
		(
			LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100),BRANDID INT,BRAND NVARCHAR(50),BRAND_SECONDARY NVARCHAR(60),PRODID BIGINT,PRODNAME NVARCHAR(100),
			PRODNAME_SECONDARY NVARCHAR(150),QTY_SS INT,ORDVALUE_SS DECIMAL(18,2)
		)
	CREATE NONCLUSTERED INDEX IXF ON #TMPPRIMARYSTOCK(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPSECONDARYSTOCK_FINAL') IS NOT NULL
		DROP TABLE #TMPSECONDARYSTOCK_FINAL
	CREATE TABLE #TMPSECONDARYSTOCK_FINAL
		(
		LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100)
		)
	CREATE NONCLUSTERED INDEX IXSF ON #TMPSECONDARYSTOCK_FINAL(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPCLOSINGSTOCK') IS NOT NULL
		DROP TABLE #TMPCLOSINGSTOCK
	CREATE TABLE #TMPCLOSINGSTOCK
		(
			LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100),BRANDID INT,BRAND NVARCHAR(50),BRAND_CLOSING NVARCHAR(60),PRODID BIGINT,PRODNAME NVARCHAR(100),
			PRODNAME_CLOSING NVARCHAR(150),QTY_CS INT
		)
	CREATE NONCLUSTERED INDEX IXC ON #TMPCLOSINGSTOCK(EMPCODE ASC,SHOP_CODE ASC)

	IF OBJECT_ID('tempdb..#TMPCLOSINGSTOCK_FINAL') IS NOT NULL
		DROP TABLE #TMPCLOSINGSTOCK_FINAL
	CREATE TABLE #TMPCLOSINGSTOCK_FINAL
		(
		LOGGEDINDATE NVARCHAR(10),EMPCODE NVARCHAR(10),SHOP_CODE NVARCHAR(100)
		)
	CREATE NONCLUSTERED INDEX IXCF ON #TMPCLOSINGSTOCK_FINAL(EMPCODE ASC,SHOP_CODE ASC)

	--Rev 1.0
	IF OBJECT_ID('tempdb..#TMPANYLEAVETYPE') IS NOT NULL
		DROP TABLE #TMPANYLEAVETYPE
	CREATE TABLE #TMPANYLEAVETYPE
		(
		EMPCODE NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS,USERID BIGINT,LOGGEDINDATE NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS,LEAVETYPE NVARCHAR(500) COLLATE SQL_Latin1_General_CP1_CI_AS
		)
	CREATE NONCLUSTERED INDEX IX ON #TMPANYLEAVETYPE(EMPCODE ASC,LOGGEDINDATE ASC)
	--End of Rev 1.0

	IF OBJECT_ID('tempdb..#TEMPCONTACT') IS NOT NULL
		DROP TABLE #TEMPCONTACT
	CREATE TABLE #TEMPCONTACT
		(
			cnt_internalId NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_firstName NVARCHAR(150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_middleName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_lastName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_contactType NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
		)
	CREATE NONCLUSTERED INDEX IX_PARTYID ON #TEMPCONTACT(cnt_internalId,cnt_contactType ASC)
	INSERT INTO #TEMPCONTACT
	SELECT cnt_internalId,cnt_firstName,cnt_middleName,cnt_lastName,cnt_contactType FROM TBL_MASTER_CONTACT WHERE cnt_contactType IN('EM')

	IF OBJECT_ID('tempdb..#TEMPPERFORM') IS NOT NULL
		DROP TABLE #TEMPPERFORM
	CREATE TABLE #TEMPPERFORM
		(
			LOGGEDINDATE NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS,
			EMPCODE NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			[SALES PERSONNEL NAME] NVARCHAR(300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			REMARKS NVARCHAR(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			[NAME OF THE SUPER] NVARCHAR(300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			STATEID INT,
			STATE NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			DEG_ID NUMERIC(18,0),
			[DESIGNATION] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			CONTACTNO NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			EMPID NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			REPORTTO NVARCHAR(300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			RPTTODESG NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			Shop_Code NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			[STOCKIST VISITED] NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			[DISTRIBUTOR NAME] NVARCHAR(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			[MARKET WORKED] NVARCHAR(2000),
			[LOGIN-LOGOUT KM (H.Q to STOCK POINT)] DECIMAL(18,2),
			TC INT,
			PC INT,
			AVL INT,
			[OPENING STOCK] NVARCHAR(10) NULL
		)

	;WITH mycte AS
	(
	  SELECT CAST(@FROMDATE AS DATETIME) DateValue
	  UNION ALL
	  SELECT DateValue + 1
	  FROM mycte   
	  WHERE DateValue + 1 <= @TODATE
	)
	--Rev 2.0
	--SELECT CONVERT(NVARCHAR(10),DateValue,105) AS LOGGEDINDATE INTO #TMPALLDAYINMONTH FROM mycte OPTION (MAXRECURSION 370)
	SELECT CONVERT(NVARCHAR(10),DateValue,105) AS LOGGEDINDATE INTO #TMPALLDAYINMONTH FROM mycte OPTION (MAXRECURSION 1000)
	--End of Rev 2.0

	SET @M_FROMDATE=(SELECT TOP 1 LOGGEDINDATE FROM #TMPALLDAYINMONTH)

	--FOR REPORT HEADER
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID,FIXEDSTYLE)
	SELECT 1,'DATE','DATE',0,1
	UNION ALL
	SELECT 2,'SALES PERSONNEL NAME','SALES PERSONNEL NAME',0,1
	UNION ALL
	SELECT 3,'REMARKS','REMARKS',0,0
	UNION ALL
	SELECT 4,'NAME OF THE SUPER','NAME OF THE SUPER',0,0
	UNION ALL
	SELECT 5,'STOCKIST VISITED','STOCKIST VISITED',0,0
	UNION ALL
	SELECT 6,'DISTRIBUTOR NAME','DISTRIBUTOR NAME',0,0
	UNION ALL
	SELECT 7,'MARKET WORKED','MARKET WORKED',0,0
	UNION ALL
	SELECT 8,'LOGIN-LOGOUT KM (H.Q to STOCK POINT)','LOGIN-LOGOUT KM (H.Q to STOCK POINT)',0,0
	UNION ALL
	SELECT 9,'TC','TC',0,0
	UNION ALL
	SELECT 10,'PC','PC',0,0
	UNION ALL
	SELECT 11,'AVL','AVL',0,0
	UNION ALL
	SELECT 12,'OPENING STOCK','OPENING STOCK',0,0
	--FOR REPORT HEADER
	
	SET @Strsql=''
	SET @StrSql='INSERT INTO #TEMPPRODBRAND(BRANDID,BRAND,PRODID,PRODNAME) '
	SET @StrSql+='SELECT BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,PROD.sProducts_ID AS PRODID,PROD.sProducts_Name AS PRODNAME FROM tbl_master_brand BR '
	SET @StrSql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @StrSql+='WHERE BR.Brand_IsActive=1 '
	IF @PRODUCT_ID <> ''
		SET @StrSql+='AND EXISTS (SELECT Product_Id FROM #Product_List AS PR WHERE PR.Product_Id=PROD.sProducts_ID) '
	SET @StrSql+='ORDER BY BR.Brand_Id '
	--SELECT @StrSql
	EXEC(@StrSql)

	--FOR REPORT HEADER
	SET @M_SLHEADID=1
	SET @M_SLHEADID_NEXT=1
	SET @HBRANDONCE=1
	--FOR REPORT HEADER

	SET @Strsql=''
	SET @StrSql='SET @PRODUCT_CURSOR=CURSOR FAST_FORWARD FOR SELECT BRANDID,BRAND,PRODID,PRODNAME FROM #TEMPPRODBRAND '
	SET @StrSql+='ORDER BY BRANDID ; OPEN @PRODUCT_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @PRODUCT_CURSOR CURSOR OUTPUT', @PRODUCT_CURSOR OUTPUT

	FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_OS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_OS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							IF @BRANDPRODNAME_OS=''
								BEGIN
									SET @BRANDPRODNAME_OS='['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'
									SET @BRANDPRODNAMESUMM_OS='SUM('+'['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'
								END
							ELSE IF @BRANDPRODNAME_OS<>''
								BEGIN
									SET @BRANDPRODNAME_OS+=',['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'
									SET @BRANDPRODNAMESUMM_OS+=',SUM('+'['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_OS' + ']'
								END
							--FOR REPORT HEADER
							SELECT @SLHEADID=12
							IF @HBRANDONCE=1
								SET @M_SLHEADID=@M_SLHEADID+@SLHEADID
							ELSE IF @HBRANDONCE>1
								SET @M_SLHEADID=@M_SLHEADID+1
							SET @M_SLHEADID_NEXT=@M_SLHEADID
							SET @sqlStrTable=''
							SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
							SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID)))+' AS HEADID,'''+@BRAND+''' AS HEADNAME,'''+LTRIM(RTRIM(@BRAND))+'_OS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLHEADID)))+' AS PARRENTID '
							EXEC SP_EXECUTESQL @sqlStrTable
							SELECT @SLPARRENTID_NEXT=HEADID FROM #TMPERFORMSLSPERSONNELHEADING WHERE HEADID=@M_SLHEADID
							--FOR REPORT HEADER
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable

					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					SET @BRANDPRODNAME_OS+=',['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']'
					SET @BRANDPRODNAMESUMM_OS+=',SUM('+'['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']'+') AS ['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']'
					--FOR REPORT HEADER
					SET @M_SLHEADID=@M_SLHEADID+1
					SET @M_SLHEADID_NEXT=@M_SLHEADID_NEXT+1
					SET @sqlStrTable=''
					SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
					SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID_NEXT)))+' AS HEADID,'''+@PRODNAME+''' AS HEADNAME,'''+LTRIM(RTRIM(@PRODNAME))+'_OS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLPARRENTID_NEXT)))+' AS PARRENTID '
					EXEC SP_EXECUTESQL @sqlStrTable
					--FOR REPORT HEADER
					FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
					--FOR REPORT HEADER
					SET @HBRANDONCE=@HBRANDONCE+1
					--FOR REPORT HEADER
				END
		END
	CLOSE @PRODUCT_CURSOR
	DEALLOCATE @PRODUCT_CURSOR

	ALTER TABLE #TEMPPERFORM ADD [VALUE_OS] DECIMAL(38,2) DEFAULT(0.00)
	ALTER TABLE #TEMPPERFORM ADD [SECONDARY SALES] NVARCHAR(10) NULL

	ALTER TABLE #TMPALLDAYINMONTH ADD [VALUE_OS] DECIMAL(38,2) DEFAULT(0.00)
	ALTER TABLE #TMPALLDAYINMONTH ADD [SECONDARY SALES] NVARCHAR(10) NULL

	--FOR REPORT HEADER
	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'VALUE','VALUE_OS',12

	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'SECONDARY SALES','SECONDARY SALES',0
	
	SELECT @SLPARRENTID_NEXT_CS=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	SET @M_SLHEADID=1
	SET @M_SLHEADID_NEXT=1
	SET @HBRANDONCE=1
	--FOR REPORT HEADER

	SET @Strsql=''
	SET @StrSql='SET @PRODUCT_CURSOR=CURSOR FAST_FORWARD FOR SELECT BRANDID,BRAND,PRODID,PRODNAME FROM #TEMPPRODBRAND '
	SET @StrSql+='ORDER BY BRANDID ; OPEN @PRODUCT_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @PRODUCT_CURSOR CURSOR OUTPUT', @PRODUCT_CURSOR OUTPUT

	FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_SS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable

							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_SS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							IF @BRANDPRODNAME_SS=''
								BEGIN
									SET @BRANDPRODNAME_SS='['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'
									SET @BRANDPRODNAMESUMM_SS='SUM('+'['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'
								END
							ELSE IF @BRANDPRODNAME_SS<>''
								BEGIN
									SET @BRANDPRODNAME_SS+=',['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'
									SET @BRANDPRODNAMESUMM_SS+=',SUM('+'['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_SS' + ']'
								END
							--FOR REPORT HEADER
							SET @SLHEADID=@SLPARRENTID_NEXT_CS
							IF @HBRANDONCE=1
								SET @M_SLHEADID=@M_SLHEADID+@SLHEADID
							ELSE IF @HBRANDONCE>1
								SET @M_SLHEADID=@M_SLHEADID+1
							SET @M_SLHEADID_NEXT=@M_SLHEADID
							SET @sqlStrTable=''
							SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
							SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID)))+' AS HEADID,'''+@BRAND+''' AS HEADNAME,'''+LTRIM(RTRIM(@BRAND))+'_SS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLHEADID)))+' AS PARRENTID '
							EXEC SP_EXECUTESQL @sqlStrTable
							SELECT @SLPARRENTID_NEXT=HEADID FROM #TMPERFORMSLSPERSONNELHEADING WHERE HEADID=@M_SLHEADID
							--FOR REPORT HEADER
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable

					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					SET @BRANDPRODNAME_SS+=',['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']'
					SET @BRANDPRODNAMESUMM_SS+=',SUM('+'['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']'+') AS ['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']'
					--FOR REPORT HEADER
					SET @M_SLHEADID=@M_SLHEADID+1
					SET @M_SLHEADID_NEXT=@M_SLHEADID_NEXT+1
					SET @sqlStrTable=''
					SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
					SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID_NEXT)))+' AS HEADID,'''+@PRODNAME+''' AS HEADNAME,'''+LTRIM(RTRIM(@PRODNAME))+'_SS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLPARRENTID_NEXT)))+' AS PARRENTID '
					EXEC SP_EXECUTESQL @sqlStrTable
					--FOR REPORT HEADER
					FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
					--FOR REPORT HEADER
					SET @HBRANDONCE=@HBRANDONCE+1
					--FOR REPORT HEADER
				END
		END
	CLOSE @PRODUCT_CURSOR
	DEALLOCATE @PRODUCT_CURSOR

	ALTER TABLE #TEMPPERFORM ADD [VALUE_SS] DECIMAL(38,2) DEFAULT(0.00)
	ALTER TABLE #TEMPPERFORM ADD [CLOSING STOCKS] NVARCHAR(10) NULL

	ALTER TABLE #TMPALLDAYINMONTH ADD [VALUE_SS] DECIMAL(38,2) DEFAULT(0.00)
	ALTER TABLE #TMPALLDAYINMONTH ADD [CLOSING STOCKS] NVARCHAR(10) NULL

	--FOR REPORT HEADER
	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'VALUE','VALUE_SS',@SLPARRENTID_NEXT_CS

	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'CLOSING STOCKS','CLOSING STOCKS',0
	
	SELECT @SLPARRENTID_NEXT_CS=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	SET @M_SLHEADID=1
	SET @M_SLHEADID_NEXT=1
	SET @HBRANDONCE=1
	--FOR REPORT HEADER

	SET @Strsql=''
	SET @StrSql='SET @PRODUCT_CURSOR=CURSOR FAST_FORWARD FOR SELECT BRANDID,BRAND,PRODID,PRODNAME FROM #TEMPPRODBRAND '
	SET @StrSql+='ORDER BY BRANDID ; OPEN @PRODUCT_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @PRODUCT_CURSOR CURSOR OUTPUT', @PRODUCT_CURSOR OUTPUT

	FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_CS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable

							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_CS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							IF @BRANDPRODNAME_CS=''
								BEGIN
									SET @BRANDPRODNAME_CS='['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'
									SET @BRANDPRODNAMESUMM_CS='SUM('+'['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'
								END
							ELSE IF @BRANDPRODNAME_CS<>''
								BEGIN
									SET @BRANDPRODNAME_CS+=',['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'
									SET @BRANDPRODNAMESUMM_CS+=',SUM('+'['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_CS' + ']'
								END
							--FOR REPORT HEADER
							SET @SLHEADID=@SLPARRENTID_NEXT_CS
							IF @HBRANDONCE=1
								SET @M_SLHEADID=@M_SLHEADID+@SLHEADID
							ELSE IF @HBRANDONCE>1
								SET @M_SLHEADID=@M_SLHEADID+1
							SET @M_SLHEADID_NEXT=@M_SLHEADID
							SET @sqlStrTable=''
							SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
							SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID)))+' AS HEADID,'''+@BRAND+''' AS HEADNAME,'''+LTRIM(RTRIM(@BRAND))+'_CS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLHEADID)))+' AS PARRENTID '
							EXEC SP_EXECUTESQL @sqlStrTable
							SELECT @SLPARRENTID_NEXT=HEADID FROM #TMPERFORMSLSPERSONNELHEADING WHERE HEADID=@M_SLHEADID
							--FOR REPORT HEADER
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable

					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					SET @BRANDPRODNAME_CS+=',['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']'
					SET @BRANDPRODNAMESUMM_CS+=',SUM('+'['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']'+') AS ['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']'
					--FOR REPORT HEADER
					SET @M_SLHEADID=@M_SLHEADID+1
					SET @M_SLHEADID_NEXT=@M_SLHEADID_NEXT+1
					SET @sqlStrTable=''
					SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
					SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID_NEXT)))+' AS HEADID,'''+@PRODNAME+''' AS HEADNAME,'''+LTRIM(RTRIM(@PRODNAME))+'_CS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLPARRENTID_NEXT)))+' AS PARRENTID '
					EXEC SP_EXECUTESQL @sqlStrTable
					--FOR REPORT HEADER
					FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
					--FOR REPORT HEADER
					SET @HBRANDONCE=@HBRANDONCE+1
					--FOR REPORT HEADER
				END
		END
	CLOSE @PRODUCT_CURSOR
	DEALLOCATE @PRODUCT_CURSOR

	ALTER TABLE #TEMPPERFORM ADD [PRIMARY] NVARCHAR(10) NULL

	ALTER TABLE #TMPALLDAYINMONTH ADD [PRIMARY] NVARCHAR(10) NULL

	--FOR REPORT HEADER
	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'PRIMARY','PRIMARY',0
	
	SELECT @SLPARRENTID_NEXT_CS=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	SET @M_SLHEADID=1
	SET @M_SLHEADID_NEXT=1
	SET @HBRANDONCE=1
	--FOR REPORT HEADER

	SET @Strsql=''
	SET @StrSql='SET @PRODUCT_CURSOR=CURSOR FAST_FORWARD FOR SELECT BRANDID,BRAND,PRODID,PRODNAME FROM #TEMPPRODBRAND '
	SET @StrSql+='ORDER BY BRANDID ; OPEN @PRODUCT_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @PRODUCT_CURSOR CURSOR OUTPUT', @PRODUCT_CURSOR OUTPUT

	FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_PS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable

							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND))+'_PS' + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							IF @BRANDPRODNAME_PS=''
								BEGIN
									SET @BRANDPRODNAME_PS='['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'
									SET @BRANDPRODNAMESUMM_PS='SUM('+'['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'
								END
							ELSE IF @BRANDPRODNAME_PS<>''
								BEGIN
									SET @BRANDPRODNAME_PS+=',['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'
									SET @BRANDPRODNAMESUMM_PS+=',SUM('+'['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'+') AS ['+LTRIM(RTRIM(@BRAND))+'_PS' + ']'
								END
							--FOR REPORT HEADER
							SET @SLHEADID=@SLPARRENTID_NEXT_CS
							IF @HBRANDONCE=1
								SET @M_SLHEADID=@M_SLHEADID+@SLHEADID
							ELSE IF @HBRANDONCE>1
								SET @M_SLHEADID=@M_SLHEADID+1
							SET @M_SLHEADID_NEXT=@M_SLHEADID
							SET @sqlStrTable=''
							SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
							SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID)))+' AS HEADID,'''+@BRAND+''' AS HEADNAME,'''+LTRIM(RTRIM(@BRAND))+'_PS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLHEADID)))+' AS PARRENTID '
							EXEC SP_EXECUTESQL @sqlStrTable
							SELECT @SLPARRENTID_NEXT=HEADID FROM #TMPERFORMSLSPERSONNELHEADING WHERE HEADID=@M_SLHEADID
							--FOR REPORT HEADER
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TEMPPERFORM ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable

					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPALLDAYINMONTH ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					SET @BRANDPRODNAME_PS+=',['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']'
					SET @BRANDPRODNAMESUMM_PS+=',SUM('+'['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']'+') AS ['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']'
					--FOR REPORT HEADER
					SET @M_SLHEADID=@M_SLHEADID+1
					SET @M_SLHEADID_NEXT=@M_SLHEADID_NEXT+1
					SET @sqlStrTable=''
					SET @sqlStrTable='INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID) '
					SET @sqlStrTable+='SELECT '+LTRIM(RTRIM(STR(@M_SLHEADID_NEXT)))+' AS HEADID,'''+@PRODNAME+''' AS HEADNAME,'''+LTRIM(RTRIM(@PRODNAME))+'_PS'+''' AS HEADSHRTNAME,'+LTRIM(RTRIM(STR(@SLPARRENTID_NEXT)))+' AS PARRENTID '
					EXEC SP_EXECUTESQL @sqlStrTable
					--FOR REPORT HEADER
					FETCH NEXT FROM @PRODUCT_CURSOR INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
					--FOR REPORT HEADER
					SET @HBRANDONCE=@HBRANDONCE+1
					--FOR REPORT HEADER
				END
		END
	CLOSE @PRODUCT_CURSOR
	DEALLOCATE @PRODUCT_CURSOR

	ALTER TABLE #TEMPPERFORM ADD [VALUE_PS] DECIMAL(38,2) DEFAULT(0.00)

	ALTER TABLE #TMPALLDAYINMONTH ADD [VALUE_PS] DECIMAL(38,2) DEFAULT(0.00)

	--FOR REPORT HEADER
	SELECT @SLPARRENTID_NEXT=MAX(HEADID) FROM #TMPERFORMSLSPERSONNELHEADING
	INSERT INTO #TMPERFORMSLSPERSONNELHEADING(HEADID,HEADNAME,HEADSHRTNAME,PARRENTID)
	SELECT (@SLPARRENTID_NEXT+1),'VALUE','VALUE_PS',@SLPARRENTID_NEXT_CS
	--FOR REPORT HEADER

	--Rev 1.0
	--FOR FETCHING LEAVETYPE AS "Weekly Off" & "Holiday"
	SET @Strsql=''
	SET @Strsql='INSERT INTO #TMPANYLEAVETYPE(EMPCODE,USERID,LOGGEDINDATE,LEAVETYPE) '
	SET @Strsql+='SELECT CNT.cnt_internalId,ATTEN.User_Id,CONVERT(NVARCHAR(10),ATTEN.Work_datetime,105) AS LOGGEDINDATE,'
	SET @Strsql+='CASE WHEN (ATTEN.Work_Desc IS NULL OR ATTEN.Work_Desc='''') THEN ''(''+LT.LeaveType+'')'' ELSE ''(''+LT.LeaveType+'')''+'' ''+ATTEN.Work_Desc END AS LeaveType FROM tbl_FTS_Leavetype LT '
	SET @Strsql+='INNER JOIN tbl_fts_UserAttendanceLoginlogout ATTEN ON LT.Leave_Id=ATTEN.Leave_Type '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ATTEN.User_Id AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE LT.Leave_Id IN(9,10) '
	SET @Strsql+='AND CONVERT(NVARCHAR(10),ATTEN.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) AND Login_datetime IS NOT NULL '
	SET @Strsql+='AND Logout_datetime IS NULL AND Isonleave=''true'' '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql
	--End of Rev 1.0

	SET @Strsql=''
	SET @Strsql='INSERT INTO #TEMPPERFORM(LOGGEDINDATE,EMPCODE,[SALES PERSONNEL NAME],REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,[DESIGNATION],CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,'
	SET @Strsql+='[STOCKIST VISITED],[DISTRIBUTOR NAME],[MARKET WORKED],[LOGIN-LOGOUT KM (H.Q to STOCK POINT)],TC,PC,AVL,[OPENING STOCK]) '
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,EMPNAME,REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,DD_NAME,DISTRIBUTOR_NAME,[MARKET WORKED],'
	SET @Strsql+='SUM([LOGIN-LOGOUT KM (H.Q to STOCK POINT)]) AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],SUM(TC) AS TC,SUM(PC) AS PC,SUM(AVL) AS AVL,[OPENING STOCK] FROM('
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,EMPNAME,REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,DD_NAME,DISTRIBUTOR_NAME,[MARKET WORKED],'
	SET @Strsql+='CASE WHEN SEQ=1 THEN ISNULL([LOGIN-LOGOUT KM (H.Q to STOCK POINT)],0.00) ELSE 0.00 END AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],'
	SET @Strsql+='CASE WHEN SEQ=1 THEN TC ELSE 0 END AS TC,CASE WHEN SEQ=1 THEN PC ELSE 0 END AS PC,CASE WHEN SEQ=1 THEN AVL ELSE 0 END AS AVL,[OPENING STOCK] FROM('
	SET @Strsql+='SELECT ROW_NUMBER() OVER(PARTITION BY LOGGEDINDATE ORDER BY LOGGEDINDATE) AS SEQ,LOGGEDINDATE,EMPCODE,EMPNAME,REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,'
	SET @Strsql+='RPTTODESG,Shop_Code,DD_NAME,DISTRIBUTOR_NAME,[MARKET WORKED],[LOGIN-LOGOUT KM (H.Q to STOCK POINT)],TC,PC,AVL,[OPENING STOCK] FROM('
	SET @Strsql+='SELECT DISTINCT ATTEN.LOGGEDINDATE,CNT.cnt_internalId AS EMPCODE,ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS EMPNAME,ATTEN.REMARKS,SHOPSUP.PPNAME AS [NAME OF THE SUPER],'
	SET @Strsql+='ST.ID AS STATEID,ST.state AS STATE,DESG.DEG_ID,DESG.deg_designation AS DESIGNATION,USR.user_loginId AS CONTACTNO,EMP.emp_uniqueCode AS EMPID,RPTTO.REPORTTO,RPTTO.RPTTODESG,SHOPDD.Shop_Code,SHOPDD.Shop_Name AS DD_NAME,ATTEN.DISTRIBUTOR_NAME,'
	SET @Strsql+='ATTEN.MARKET_WORKED AS [MARKET WORKED],SHOPUSR.TOTKM AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],ISNULL(SHOPACT.TOTAL_VISIT,0) AS TC,ISNULL(ORDHEAD.ORDCNT,0) AS PC,ISNULL(SHOPACT.TOTAL_VISIT,0)-ISNULL(ORDHEAD.ORDCNT,0) AS AVL,NULL AS [OPENING STOCK] '
	SET @Strsql+='FROM tbl_master_employee EMP '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_contactId=EMP.emp_contactId AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_address ADDR ON ADDR.add_cntId=CNT.cnt_internalid AND ADDR.add_addressType=''Office'' '
	SET @Strsql+='INNER JOIN tbl_master_state ST ON ST.id=ADDR.add_state '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC AS cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE cnt.emp_effectiveuntil IS NULL '
	SET @Strsql+='GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='LEFT OUTER JOIN (SELECT EMPCTC.emp_cntId,EMPCTC.emp_reportTo,CNT.cnt_internalId,ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS REPORTTO,'
	SET @Strsql+='DESG.deg_designation AS RPTTODESG FROM tbl_master_employee EMP '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMP.emp_id=EMPCTC.emp_reportTo '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC as cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE cnt.emp_effectiveuntil IS NULL '
	SET @Strsql+='GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='WHERE EMPCTC.emp_effectiveuntil IS NULL) RPTTO ON RPTTO.emp_cntId=CNT.cnt_internalId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT USERID,cnt_internalId,REMARKS,DISTRIBUTOR_NAME,MARKET_WORKED,LOGGEDINDATE FROM('
	SET @Strsql+='SELECT ATTEN.User_Id AS USERID,CNT.cnt_internalId,ATTEN.Work_Desc AS REMARKS,ATTEN.DISTRIBUTOR_NAME,ATTEN.MARKET_WORKED,'
	SET @Strsql+='CONVERT(NVARCHAR(10),ATTEN.Work_datetime,105) AS LOGGEDINDATE FROM tbl_fts_UserAttendanceLoginlogout ATTEN '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ATTEN.User_Id AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ATTEN.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	SET @Strsql+=') LOGINLOGOUT) ATTEN ON ATTEN.cnt_internalId=CNT.cnt_internalId AND ATTEN.USERID=USR.user_id '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT User_Id,cnt_internalId,SUM(TOTAL_VISIT) AS TOTAL_VISIT,VISITDATE FROM('
	SET @Strsql+='SELECT SHOPACT.User_Id,CNT.cnt_internalId,COUNT(SHOPACT.Shop_Id) AS TOTAL_VISIT,CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) AS VISITDATE '
	SET @Strsql+='FROM tbl_trans_shopActivitysubmit SHOPACT '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=SHOPACT.User_Id '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY SHOPACT.User_Id,CNT.cnt_internalId,CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) '
	SET @Strsql+=') AA GROUP BY User_Id,cnt_internalId,VISITDATE) SHOPACT ON SHOPACT.cnt_internalId=CNT.cnt_internalId AND SHOPACT.User_Id=ATTEN.USERID AND ATTEN.LOGGEDINDATE=SHOPACT.VISITDATE '
	SET @Strsql+='LEFT OUTER JOIN ('
	SET @Strsql+='SELECT USER_ID,CONVERT(NVARCHAR(10),SDATE,105) AS SDATE,SUM(ISNULL(distance_covered,0)) AS TOTKM FROM TBL_TRANS_SHOPUSER_ARCH '
	SET @Strsql+='GROUP BY USER_ID,CONVERT(NVARCHAR(10),SDATE,105) '
	SET @Strsql+=') SHOPUSR ON USR.user_id=SHOPUSR.User_Id AND ATTEN.LOGGEDINDATE=SHOPUSR.SDATE '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT User_Id,cnt_internalId,Shop_Id,VISITDATE FROM('
	SET @Strsql+='SELECT SHOPACT.User_Id,SHOPACT.Shop_Id,CNT.cnt_internalId,CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) AS VISITDATE FROM tbl_trans_shopActivitysubmit SHOPACT '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=SHOPACT.User_Id '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY SHOPACT.User_Id,SHOPACT.Shop_Id,CNT.cnt_internalId,CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) '
	SET @Strsql+=') AA GROUP BY User_Id,Shop_Id,cnt_internalId,VISITDATE) SHOPACTDD ON SHOPACTDD.cnt_internalId=CNT.cnt_internalId AND SHOPACTDD.User_Id=ATTEN.USERID AND ATTEN.LOGGEDINDATE=SHOPACTDD.VISITDATE '
	SET @Strsql+='INNER JOIN('
	SET @Strsql+='SELECT MS.Shop_CreateUser,MS.Shop_Code,MS.Shop_Name,MS.assigned_to_pp_id AS SHPPP FROM tbl_Master_shop MS '
	SET @Strsql+='WHERE EXISTS(SELECT Shop_Id FROM tbl_trans_shopActivitysubmit SHOPACT WHERE MS.Shop_Code=SHOPACT.Shop_Id AND MS.Shop_CreateUser=SHOPACT.User_Id '
	SET @Strsql+='AND CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120)) '
	SET @Strsql+='AND MS.type=4 '
	SET @Strsql+=') SHOPDD ON SHOPDD.Shop_CreateUser=SHOPACT.User_Id AND SHOPDD.Shop_Code=SHOPACTDD.Shop_Id '
	SET @Strsql+='LEFT OUTER JOIN('
	SET @Strsql+='SELECT MS.Shop_CreateUser,MS.Shop_Code,MS.Shop_Name AS PPNAME FROM tbl_Master_shop MS WHERE MS.type=2 '
	SET @Strsql+=') SHOPSUP ON SHOPSUP.Shop_CreateUser=SHOPACT.User_Id AND SHOPDD.SHPPP=SHOPSUP.Shop_Code '
	SET @Strsql+='LEFT OUTER JOIN (SELECT ORDH.userID,CNT.cnt_internalId,COUNT(ORDH.SHOP_CODE) AS ORDCNT,CONVERT(NVARCHAR(10),ORDH.Orderdate,105) AS ORDDATE FROM tbl_trans_fts_Orderupdate ORDH '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND EXISTS(SELECT Shop_Id FROM tbl_trans_shopActivitysubmit '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+=') GROUP BY ORDH.userID,CNT.cnt_internalId,CONVERT(NVARCHAR(10),ORDH.Orderdate,105) '
	SET @Strsql+=') ORDHEAD ON ORDHEAD.cnt_internalId=CNT.cnt_internalId AND ATTEN.LOGGEDINDATE=ORDHEAD.ORDDATE '
	IF @EMPID<>''
		SET @Strsql+='WHERE EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @Strsql+=') CHILDTBL '
	SET @Strsql+=') MAINTBL '
	--Fetch those records who not visit atleast one DD
	SET @Strsql+='UNION ALL '
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,EMPNAME,REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,DD_NAME,DISTRIBUTOR_NAME,[MARKET WORKED],'
	SET @Strsql+='[LOGIN-LOGOUT KM (H.Q to STOCK POINT)],TC,PC,AVL,[OPENING STOCK] FROM('
	SET @Strsql+='SELECT DISTINCT ATTEN.LOGGEDINDATE,CNT.cnt_internalId AS EMPCODE,ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS EMPNAME,ATTEN.REMARKS,'''' AS [NAME OF THE SUPER],'
	SET @Strsql+='ST.ID AS STATEID,ST.state AS STATE,DESG.DEG_ID,DESG.deg_designation AS DESIGNATION,USR.user_loginId AS CONTACTNO,EMP.emp_uniqueCode AS EMPID,RPTTO.REPORTTO,RPTTO.RPTTODESG,'''' AS Shop_Code,'''' AS DD_NAME,ATTEN.DISTRIBUTOR_NAME,'
	SET @Strsql+='ATTEN.MARKET_WORKED AS [MARKET WORKED],SHOPUSR.TOTKM AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],0 AS TC,0 AS PC,0 AS AVL,NULL AS [OPENING STOCK] '
	SET @Strsql+='FROM tbl_master_employee EMP '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_contactId=EMP.emp_contactId AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_address ADDR ON ADDR.add_cntId=CNT.cnt_internalid AND ADDR.add_addressType=''Office'' '
	SET @Strsql+='INNER JOIN tbl_master_state ST ON ST.id=ADDR.add_state '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC AS cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE cnt.emp_effectiveuntil IS NULL '
	SET @Strsql+='GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='LEFT OUTER JOIN (SELECT EMPCTC.emp_cntId,EMPCTC.emp_reportTo,CNT.cnt_internalId,ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS REPORTTO,'
	SET @Strsql+='DESG.deg_designation AS RPTTODESG FROM tbl_master_employee EMP '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMP.emp_id=EMPCTC.emp_reportTo '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC as cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE cnt.emp_effectiveuntil IS NULL '
	SET @Strsql+='GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='WHERE EMPCTC.emp_effectiveuntil IS NULL) RPTTO ON RPTTO.emp_cntId=CNT.cnt_internalId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT USERID,cnt_internalId,REMARKS,DISTRIBUTOR_NAME,MARKET_WORKED,LOGGEDINDATE FROM('
	SET @Strsql+='SELECT ATTEN.User_Id AS USERID,CNT.cnt_internalId,ATTEN.Work_Desc AS REMARKS,ATTEN.DISTRIBUTOR_NAME,ATTEN.MARKET_WORKED,'
	SET @Strsql+='CONVERT(NVARCHAR(10),ATTEN.Work_datetime,105) AS LOGGEDINDATE FROM tbl_fts_UserAttendanceLoginlogout ATTEN '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ATTEN.User_Id AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ATTEN.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	SET @Strsql+='AND NOT EXISTS(SELECT CONVERT(NVARCHAR(10),visited_time,105) FROM tbl_trans_shopActivitysubmit WHERE User_Id=ATTEN.User_Id AND CONVERT(NVARCHAR(10),visited_time,105)=CONVERT(NVARCHAR(10),ATTEN.Work_datetime,105)) '
	SET @Strsql+=') LOGINLOGOUT) ATTEN ON ATTEN.cnt_internalId=CNT.cnt_internalId AND ATTEN.USERID=USR.user_id '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT USER_ID,CONVERT(NVARCHAR(10),SDATE,105) AS SDATE,SUM(ISNULL(distance_covered,0)) AS TOTKM FROM TBL_TRANS_SHOPUSER_ARCH '
	SET @Strsql+='GROUP BY USER_ID,CONVERT(NVARCHAR(10),SDATE,105) '
	SET @Strsql+=') SHOPUSR ON USR.user_id=SHOPUSR.User_Id AND ATTEN.LOGGEDINDATE=SHOPUSR.SDATE '
	IF @EMPID<>''
		SET @Strsql+='WHERE EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @Strsql+=') OTHERS '
	SET @Strsql+=') TOTREC '
	SET @Strsql+='GROUP BY LOGGEDINDATE,EMPCODE,EMPNAME,REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,DD_NAME,DISTRIBUTOR_NAME,[MARKET WORKED],'
	SET @Strsql+='[OPENING STOCK] '
	SET @Strsql+='ORDER BY TOTREC.LOGGEDINDATE '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	DELETE FROM #TMPALLDAYINMONTH WHERE EXISTS(SELECT LOGGEDINDATE FROM #TEMPPERFORM WHERE #TMPALLDAYINMONTH.LOGGEDINDATE=#TEMPPERFORM.LOGGEDINDATE)

	SELECT * INTO #TEMPPERFORM_FINAL FROM #TEMPPERFORM WHERE 1=2

	SET @StrSql=''
	SET @StrSql='INSERT INTO #TEMPPERFORM_FINAL SELECT * FROM('
	SET @StrSql+='SELECT LOGGEDINDATE,EMPCODE,[SALES PERSONNEL NAME],REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,[STOCKIST VISITED],'
	SET @StrSql+='[DISTRIBUTOR NAME],[MARKET WORKED],[LOGIN-LOGOUT KM (H.Q to STOCK POINT)],TC,PC,AVL,[OPENING STOCK],'
	SET @StrSql+=''+@BRANDPRODNAME_OS+',[VALUE_OS],[SECONDARY SALES],'+@BRANDPRODNAME_SS+',[VALUE_SS],[CLOSING STOCKS],'+@BRANDPRODNAME_CS+',[PRIMARY],'+@BRANDPRODNAME_PS+',[VALUE_PS] FROM #TEMPPERFORM '
	SET @StrSql+='UNION ALL '
	--Rev 1.0
	--SET @StrSql+='SELECT LOGGEDINDATE,'''+@M_EMPID+''' AS EMPCODE,(SELECT DISTINCT [SALES PERSONNEL NAME] FROM #TEMPPERFORM) AS [SALES PERSONNEL NAME],NULL AS REMARKS,NULL AS [NAME OF THE SUPER],'
	SET @StrSql+='SELECT #TMPALLDAYINMONTH.LOGGEDINDATE,'''+@M_EMPID+''' AS EMPCODE,(SELECT DISTINCT [SALES PERSONNEL NAME] FROM #TEMPPERFORM) AS [SALES PERSONNEL NAME],'
	SET @StrSql+='CASE WHEN TLT.LEAVETYPE<>'''' THEN TLT.LEAVETYPE ELSE NULL END AS REMARKS,NULL AS [NAME OF THE SUPER],'
	--End of Rev 1.0
	SET @StrSql+='(SELECT DISTINCT STATEID FROM #TEMPPERFORM) AS STATEID,(SELECT DISTINCT STATE FROM #TEMPPERFORM) AS STATE,(SELECT DISTINCT DEG_ID FROM #TEMPPERFORM) AS DEG_ID,'
	SET @StrSql+='(SELECT DISTINCT [DESIGNATION] FROM #TEMPPERFORM) AS [DESIGNATION],(SELECT DISTINCT CONTACTNO FROM #TEMPPERFORM) AS CONTACTNO,'
	SET @StrSql+='(SELECT DISTINCT EMPID FROM #TEMPPERFORM) AS EMPID,NULL AS REPORTTO,NULL AS RPTTODESG,NULL AS Shop_Code,NULL AS [STOCKIST VISITED],NULL AS [DISTRIBUTOR NAME],NULL AS [MARKET WORKED],'
	SET @StrSql+='0.00 AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],0 AS TC,0 AS PC,0 AS AVL,NULL AS [OPENING STOCK],'
	SET @StrSql+=''+@BRANDPRODNAME_OS+',[VALUE_OS],[SECONDARY SALES],'+@BRANDPRODNAME_SS+',[VALUE_SS],[CLOSING STOCKS],'+@BRANDPRODNAME_CS+',[PRIMARY],'+@BRANDPRODNAME_PS+',[VALUE_PS] FROM #TMPALLDAYINMONTH '
	--Rev 1.0
	SET @StrSql+='LEFT OUTER JOIN #TMPANYLEAVETYPE TLT ON #TMPALLDAYINMONTH.LOGGEDINDATE=TLT.LOGGEDINDATE AND TLT.EMPCODE='''+@M_EMPID+''' '
	--End of Rev 1.0
	SET @StrSql+=') TMP ORDER BY LOGGEDINDATE '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	--OPENING STOCK CALCULATION
	SET @Strsql=''
	SET @Strsql='INSERT INTO #TMPOPENINGSTOCK(LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_OPENING,PRODID,PRODNAME,PRODNAME_OPENING,QTY_OS,ORDVALUE_OS) '
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_OPENING,PRODID,PRODNAME,PRODNAME_OPENING,SUM(ISNULL(QTY_OS,0)) AS QTY_OS,SUM(ISNULL(ORDVALUE_OS,0)) AS ORDVALUE_OS FROM('
	SET @Strsql+='SELECT ORD.LOGGEDINDATE,ORD.EMPCODE,ORD.SHOP_CODE,BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,BR.Brand_Name+''_OS'' AS BRAND_OPENING,PROD.sProducts_ID AS PRODID,'
	SET @Strsql+='PROD.sProducts_Name AS PRODNAME,PROD.sProducts_Name+''_OS'' AS PRODNAME_OPENING,SUM(ISNULL(ORD.Product_Qty,0)) AS QTY_OS,SUM(ISNULL(ORD.ORDVALUE_OS,0)) AS ORDVALUE_OS '
	SET @Strsql+='FROM tbl_master_brand BR '
	SET @Strsql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @Strsql+='INNER JOIN(SELECT SHOPACT.VISITDATE AS LOGGEDINDATE,CNT.cnt_internalId AS EMPCODE,SM.Shop_Code AS SHOP_CODE,ORDD.Product_Id,Product_Qty,ORDVALUE_OS FROM FTS_TransStockOpen ORDH '
	--Rev 4.0
	--SET @Strsql+='INNER JOIN (SELECT User_Id,Stock_ID,Product_Id,Shop_code,SUM(ISNULL(Product_Qty,0)) AS Product_Qty,SUM(ISNULL(Product_Price,0)) AS ORDVALUE_OS FROM FTS_StockdetailsProduct '
	--SET @Strsql+='GROUP BY User_Id,Stock_ID,Product_Id,Shop_code '
	--Rev 5.0
	--SET @Strsql+='INNER JOIN (SELECT STKDOP.User_Id,STKDOP.Stock_ID,STKDOP.Product_Id,STKDOP.Shop_code,SUM(ISNULL(STKDOP.Product_Qty,0)) AS Product_Qty,SUM(ISNULL(STKDOP.Product_Price,0)) AS ORDVALUE_OS,'
	SET @Strsql+='INNER JOIN (SELECT STKDOP.User_Id,STKDOP.Stock_ID,STKDOP.Product_Id,STKDOP.Shop_code,SUM(DISTINCT ISNULL(STKDOP.Product_Qty,0)) AS Product_Qty,'
	SET @Strsql+='SUM(DISTINCT ISNULL(STKDOP.Product_Price,0)) AS ORDVALUE_OS,'
	--End of Rev 5.0
	SET @Strsql+='CONVERT(NVARCHAR(10),STKORDH.Orderdate,105) AS ORDERDATE '
	SET @Strsql+='FROM FTS_StockdetailsProduct STKDOP '
	SET @Strsql+='INNER JOIN tbl_FTs_OrderdetailsProduct STKD ON STKDOP.User_Id=STKD.User_Id AND STKDOP.Product_Id=STKD.Product_Id '
	SET @Strsql+='INNER JOIN tbl_trans_fts_Orderupdate STKORDH ON STKORDH.userID=STKD.User_Id AND STKORDH.OrderId=STKD.Order_ID '
	SET @Strsql+='AND CONVERT(NVARCHAR(10),Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY STKDOP.User_Id,STKDOP.Stock_ID,STKDOP.Product_Id,STKDOP.Shop_code,CONVERT(NVARCHAR(10),STKORDH.Orderdate,105)  '
	--End of Rev 4.0
	SET @Strsql+=') ORDD ON ORDH.Shop_Code=ORDD.Shop_code AND ORDH.StockId=ORDD.Stock_ID AND ORDH.userID=ORDD.User_Id '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_employee EMP ON USR.user_contactId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_master_contact CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_Master_shop SM ON SM.Shop_Code=ORDH.Shop_Code AND SM.Shop_CreateUser=ORDH.userID AND SM.type=4 '
	SET @Strsql+='INNER JOIN (SELECT User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105) AS VISITDATE FROM tbl_trans_shopActivitysubmit '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105)'
	SET @Strsql+=') SHOPACT ON SHOPACT.Shop_Id=ORDH.Shop_Code AND SHOPACT.Shop_Id=SM.Shop_Code AND SHOPACT.VISITDATE=CONVERT(NVARCHAR(10),ORDH.Stock_date,105) '
	--Rev 4.0
	SET @Strsql+='AND SHOPACT.VISITDATE=ORDD.ORDERDATE '
	--End of Rev 4.0
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Stock_date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId FROM #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @Strsql+=') ORD ON PROD.sProducts_ID=ORD.Product_Id '
	SET @Strsql+='WHERE BR.Brand_IsActive=1 '
	IF @PRODUCT_ID <> ''
		SET @StrSql+='AND EXISTS (SELECT Product_Id FROM #Product_List AS PR WHERE PR.Product_Id=PROD.sProducts_ID) '
	SET @Strsql+='GROUP BY ORD.LOGGEDINDATE,ORD.EMPCODE,ORD.SHOP_CODE,BR.Brand_Id,BR.Brand_Name,PROD.sProducts_ID,PROD.sProducts_Name '
	SET @Strsql+=') OPS GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_OPENING,PRODID,PRODNAME,PRODNAME_OPENING ORDER BY OPS.BRANDID,OPS.LOGGEDINDATE '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	--PRIMARY STOCK CALCULATION
	SET @Strsql=''
	SET @Strsql='INSERT INTO #TMPPRIMARYSTOCK(LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_PRIMARY,PRODID,PRODNAME,PRODNAME_PRIMARY,QTY_PS,ORDVALUE_PS) '
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_PRIMARY,PRODID,PRODNAME,PRODNAME_PRIMARY,SUM(ISNULL(QTY_PS,0)) AS QTY_PS,SUM(ISNULL(ORDVALUE_PS,0)) AS ORDVALUE_PS FROM('
	SET @Strsql+='SELECT PRI.LOGGEDINDATE,PRI.EMPCODE,PRI.SHOP_CODE,BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,BR.Brand_Name+''_PS'' AS BRAND_PRIMARY,PROD.sProducts_ID AS PRODID,PROD.sProducts_Name AS PRODNAME,'
	SET @Strsql+='PROD.sProducts_Name+''_PS'' AS PRODNAME_PRIMARY,SUM(ISNULL(PRI.Product_Qty,0)) AS QTY_PS,SUM(ISNULL(PRI.ORDVALUE_PS,0)) AS ORDVALUE_PS FROM tbl_master_brand BR '
	SET @Strsql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @Strsql+='INNER JOIN(SELECT SHOPACT.VISITDATE AS LOGGEDINDATE,CNT.cnt_internalId AS EMPCODE,SM.Shop_Code AS SHOP_CODE,ORDD.Product_Id,Product_Qty,ORDVALUE_PS FROM tbl_trans_fts_Orderupdate ORDH '
	SET @Strsql+='INNER JOIN (SELECT User_Id,Order_ID,Product_Id,Shop_code,SUM(ISNULL(Product_Qty,0)) AS Product_Qty,SUM(ISNULL(Product_Price,0)) AS ORDVALUE_PS FROM tbl_FTs_OrderdetailsProduct '
	SET @Strsql+='GROUP BY User_Id,Order_ID,Product_Id,Shop_code '
	SET @Strsql+=') ORDD ON ORDH.Shop_Code=ORDD.Shop_code AND ORDH.OrderId=ORDD.Order_ID AND ORDH.userID=ORDD.User_Id '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_employee EMP ON USR.user_contactId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_Master_shop SM ON SM.Shop_Code=ORDH.Shop_Code AND SM.Shop_CreateUser=ORDH.userID AND SM.type=4 '
	SET @Strsql+='INNER JOIN (SELECT User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105) AS VISITDATE FROM tbl_trans_shopActivitysubmit '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105)) SHOPACT ON SHOPACT.Shop_Id=ORDH.Shop_Code AND SHOPACT.Shop_Id=SM.Shop_Code AND SHOPACT.VISITDATE=CONVERT(NVARCHAR(10),ORDH.Orderdate,105) '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId FROM #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @Strsql+=') PRI ON PROD.sProducts_ID=PRI.Product_Id '
	SET @Strsql+='WHERE BR.Brand_IsActive=1 '
	IF @PRODUCT_ID <> ''
		SET @StrSql+='AND EXISTS (SELECT Product_Id FROM #Product_List AS PR WHERE PR.Product_Id=PROD.sProducts_ID) '
	SET @Strsql+='GROUP BY PRI.LOGGEDINDATE,PRI.EMPCODE,PRI.SHOP_CODE,BR.Brand_Id,BR.Brand_Name,PROD.sProducts_ID,PROD.sProducts_Name '
	SET @Strsql+=') PRI GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_PRIMARY,PRODID,PRODNAME,PRODNAME_PRIMARY ORDER BY PRI.BRANDID,PRI.LOGGEDINDATE '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	--SECONDARY STOCK CALCULATION
	SET @Strsql=''
	SET @Strsql='INSERT INTO #TMPSECONDARYSTOCK(LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_SECONDARY,PRODID,PRODNAME,PRODNAME_SECONDARY,QTY_SS,ORDVALUE_SS) '
	SET @Strsql+='SELECT PRI.LOGGEDINDATE,PRI.EMPCODE,PRI.SHOP_CODE,BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,BR.Brand_Name+''_SS'' AS BRAND_SECONDARY,PROD.sProducts_ID AS PRODID,PROD.sProducts_Name AS PRODNAME,'
	SET @Strsql+='PROD.sProducts_Name+''_SS'' AS PRODNAME_SECONDARY,SUM(ISNULL(PRI.Product_Qty,0)) AS QTY_SS,SUM(ISNULL(PRI.ORDVALUE_SS,0)) AS ORDVALUE_SS FROM tbl_master_brand BR '
	SET @Strsql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @Strsql+='INNER JOIN(SELECT ATTEN.LOGGEDINDATE AS LOGGEDINDATE,CNT.cnt_internalId AS EMPCODE,SM.assigned_to_dd_id AS SHOP_CODE,ORDD.Product_Id,Product_Qty,ORDVALUE_SS FROM tbl_trans_fts_Orderupdate ORDH '
	SET @Strsql+='INNER JOIN (SELECT User_Id,Order_ID,Product_Id,Shop_code,SUM(ISNULL(Product_Qty,0)) AS Product_Qty,SUM(ISNULL(Product_Price,0)) AS ORDVALUE_SS FROM tbl_FTs_OrderdetailsProduct '
	SET @Strsql+='GROUP BY User_Id,Order_ID,Product_Id,Shop_code '
	SET @Strsql+=') ORDD ON ORDH.Shop_Code=ORDD.Shop_code AND ORDH.OrderId=ORDD.Order_ID AND ORDH.userID=ORDD.User_Id '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_employee EMP ON USR.user_contactId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_Master_shop SM ON SM.Shop_Code=ORDH.Shop_Code AND SM.Shop_CreateUser=ORDH.userID AND SM.type=1 AND SM.assigned_to_dd_id<>'''' '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT USERID,cnt_internalId,LOGGEDINDATE FROM('
	SET @Strsql+='SELECT ATTEN.User_Id AS USERID,CNT.cnt_internalId,CONVERT(NVARCHAR(10),ATTEN.Work_datetime,105) AS LOGGEDINDATE FROM tbl_fts_UserAttendanceLoginlogout ATTEN '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ATTEN.User_Id AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ATTEN.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	SET @Strsql+=') LOGINLOGOUT) ATTEN ON ATTEN.cnt_internalId=CNT.cnt_internalId AND ATTEN.USERID=USR.user_id AND CONVERT(NVARCHAR(10),ORDH.Orderdate,105)=ATTEN.LOGGEDINDATE '
	SET @Strsql+='INNER JOIN (SELECT User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105) AS VISITDATE FROM tbl_trans_shopActivitysubmit '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY User_Id,Shop_Id,CONVERT(NVARCHAR(10),visited_time,105)) SHOPACT ON SHOPACT.Shop_Id=ORDH.Shop_Code AND SHOPACT.Shop_Id=SM.Shop_Code AND SHOPACT.VISITDATE=ATTEN.LOGGEDINDATE '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId FROM #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @Strsql+=') PRI ON PROD.sProducts_ID=PRI.Product_Id '
	SET @Strsql+='WHERE BR.Brand_IsActive=1 '
	IF @PRODUCT_ID <> ''
		SET @StrSql+='AND EXISTS (SELECT Product_Id FROM #Product_List AS PR WHERE PR.Product_Id=PROD.sProducts_ID) '
	SET @Strsql+='GROUP BY PRI.LOGGEDINDATE,PRI.EMPCODE,PRI.SHOP_CODE,BR.Brand_Id,BR.Brand_Name,PROD.sProducts_ID,PROD.sProducts_Name '
	SET @Strsql+='ORDER BY BR.Brand_Id,PRI.LOGGEDINDATE '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	SET @Strsql=''
	SET @Strsql='INSERT INTO #TMPCLOSINGSTOCK(LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_CLOSING,PRODID,PRODNAME,PRODNAME_CLOSING,QTY_CS) '
	SET @Strsql+='SELECT LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_CLOSING,PRODID,PRODNAME,PRODNAME_CLOSING,SUM(ISNULL(QTY_OS,0))-SUM(ISNULL(QTY_SS,0)) AS QTY_CS FROM('
	SET @Strsql+='SELECT OS.LOGGEDINDATE,OS.EMPCODE,OS.SHOP_CODE,BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,BR.Brand_Name+''_CS'' AS BRAND_CLOSING,PROD.sProducts_ID AS PRODID,PROD.sProducts_Name AS PRODNAME,'
	SET @Strsql+='PROD.sProducts_Name+''_CS'' AS PRODNAME_CLOSING,OS.QTY_OS,0 AS QTY_SS FROM tbl_master_brand BR '
	SET @Strsql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @Strsql+='INNER JOIN #TMPOPENINGSTOCK OS ON OS.BRANDID=BR.Brand_Id AND OS.PRODID=PROD.sProducts_ID '
	SET @Strsql+='WHERE BR.Brand_IsActive=1 '
	SET @Strsql+='UNION ALL '
	SET @Strsql+='SELECT SS.LOGGEDINDATE,SS.EMPCODE,SS.SHOP_CODE,BR.Brand_Id AS BRANDID,BR.Brand_Name AS BRAND,BR.Brand_Name+''_CS'' AS BRAND_SECONDARY,PROD.sProducts_ID AS PRODID,PROD.sProducts_Name AS PRODNAME,'
	SET @Strsql+='PROD.sProducts_Name+''_CS'' AS PRODNAME_SECONDARY,0 AS QTY_PS,SS.QTY_SS FROM tbl_master_brand BR '
	SET @Strsql+='INNER JOIN Master_sProducts PROD ON BR.Brand_Id=PROD.sProducts_Brand '
	SET @Strsql+='INNER JOIN #TMPSECONDARYSTOCK SS ON SS.BRANDID=BR.Brand_Id AND SS.PRODID=PROD.sProducts_ID '
	SET @Strsql+='WHERE BR.Brand_IsActive=1 '
	SET @Strsql+=') CS GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,BRANDID,BRAND,BRAND_CLOSING,PRODID,PRODNAME,PRODNAME_CLOSING '
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	SET @Strsql=''
	SET @StrSql='SET @OPENINGSTK_CURSOR=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,PRODID,BRAND_OPENING,PRODNAME_OPENING FROM #TMPOPENINGSTOCK '
	SET @StrSql+='GROUP BY BRANDID,PRODID,BRAND_OPENING,PRODNAME_OPENING ORDER BY BRANDID,PRODID ; OPEN @OPENINGSTK_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @OPENINGSTK_CURSOR CURSOR OUTPUT', @OPENINGSTK_CURSOR OUTPUT

	FETCH NEXT FROM @OPENINGSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPOPENINGSTOCK_FINAL ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND)) + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPOPENINGSTOCK_FINAL ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME)) + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					FETCH NEXT FROM @OPENINGSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
				END
		END
	CLOSE @OPENINGSTK_CURSOR
	DEALLOCATE @OPENINGSTK_CURSOR

	SET @BRANDPRODNAME=''
	SET @Strsql=''
	SET @StrSql='SET @CURSOR_OPENINGSTOCKCALC=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,BRAND_OPENING,PRODID,PRODNAME_OPENING FROM #TMPOPENINGSTOCK '
	SET @StrSql+='ORDER BY BRANDID,PRODID ; OPEN @CURSOR_OPENINGSTOCKCALC '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @CURSOR_OPENINGSTOCKCALC CURSOR OUTPUT', @CURSOR_OPENINGSTOCKCALC OUTPUT

	FETCH NEXT FROM @CURSOR_OPENINGSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @M_PRODID=@PRODID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							IF @BRANDPRODNAME=''
								BEGIN
									SET @BRANDPRODNAME='['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							ELSE IF @BRANDPRODNAME<>''
								BEGIN
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							SET @BRANDONCE=0
						END
					IF @M_PRODID<>@PRODID
						SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
					FETCH NEXT FROM @CURSOR_OPENINGSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
				END
		END
	CLOSE @CURSOR_OPENINGSTOCKCALC
	DEALLOCATE @CURSOR_OPENINGSTOCKCALC

	IF @BRANDPRODNAME<>''
		BEGIN
			SET @StrSql='INSERT INTO #TMPOPENINGSTOCK_FINAL SELECT * FROM('
			SET @StrSql+='SELECT DISTINCT LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_OPENING,SUM(QTY_OS) AS QTY_OS FROM #TMPOPENINGSTOCK '
			SET @StrSql+='GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_OPENING '
			SET @StrSql+=') AA PIVOT (SUM(QTY_OS) FOR AA.PRODNAME_OPENING IN ('+@BRANDPRODNAME+')) BB '
			EXEC(@StrSql)
		END

	ALTER TABLE #TMPOPENINGSTOCK_FINAL ADD ORDVALUE_OS DECIMAL(18,2) DEFAULT(0.00)
	UPDATE #TMPOPENINGSTOCK_FINAL SET ORDVALUE_OS=(SELECT SUM(ISNULL(ORDVALUE_OS,0)) FROM #TMPOPENINGSTOCK WHERE #TMPOPENINGSTOCK.EMPCODE=#TMPOPENINGSTOCK_FINAL.EMPCODE AND #TMPOPENINGSTOCK.SHOP_CODE=#TMPOPENINGSTOCK_FINAL.SHOP_CODE
	AND #TMPOPENINGSTOCK.LOGGEDINDATE=#TMPOPENINGSTOCK_FINAL.LOGGEDINDATE)

	SET @Strsql=''
	SET @StrSql='SET @PRIMARYSTK_CURSOR=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,PRODID,BRAND_PRIMARY,PRODNAME_PRIMARY FROM #TMPPRIMARYSTOCK '
	SET @StrSql+='GROUP BY BRANDID,PRODID,BRAND_PRIMARY,PRODNAME_PRIMARY ORDER BY BRANDID,PRODID ; OPEN @PRIMARYSTK_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @PRIMARYSTK_CURSOR CURSOR OUTPUT', @PRIMARYSTK_CURSOR OUTPUT

	FETCH NEXT FROM @PRIMARYSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPPRIMARYSTOCK_FINAL ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND)) + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPPRIMARYSTOCK_FINAL ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME)) + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					FETCH NEXT FROM @PRIMARYSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
				END
		END
	CLOSE @PRIMARYSTK_CURSOR
	DEALLOCATE @PRIMARYSTK_CURSOR	

	SET @BRANDPRODNAME=''
	SET @Strsql=''
	SET @StrSql='SET @CURSOR_PRIMARYSTOCKCALC=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,BRAND_PRIMARY,PRODID,PRODNAME_PRIMARY FROM #TMPPRIMARYSTOCK '
	SET @StrSql+='ORDER BY BRANDID,PRODID ; OPEN @CURSOR_PRIMARYSTOCKCALC '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @CURSOR_PRIMARYSTOCKCALC CURSOR OUTPUT', @CURSOR_PRIMARYSTOCKCALC OUTPUT

	FETCH NEXT FROM @CURSOR_PRIMARYSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @M_PRODID=@PRODID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							IF @BRANDPRODNAME=''
								BEGIN
									SET @BRANDPRODNAME='['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							ELSE IF @BRANDPRODNAME<>''
								BEGIN
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							SET @BRANDONCE=0
						END
					IF @M_PRODID<>@PRODID
						SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
					FETCH NEXT FROM @CURSOR_PRIMARYSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
				END
		END
	CLOSE @CURSOR_PRIMARYSTOCKCALC
	DEALLOCATE @CURSOR_PRIMARYSTOCKCALC

	IF @BRANDPRODNAME<>''
		BEGIN
			SET @StrSql='INSERT INTO #TMPPRIMARYSTOCK_FINAL SELECT * FROM('
			SET @StrSql+='SELECT DISTINCT LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_PRIMARY,SUM(QTY_PS) AS QTY_PS FROM #TMPPRIMARYSTOCK '
			SET @StrSql+='GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_PRIMARY '
			SET @StrSql+=') AA PIVOT (SUM(QTY_PS) FOR AA.PRODNAME_PRIMARY IN ('+@BRANDPRODNAME+')) BB '
			EXEC(@StrSql)
		END

	ALTER TABLE #TMPPRIMARYSTOCK_FINAL ADD ORDVALUE_PS DECIMAL(18,2) DEFAULT(0.00)
	UPDATE #TMPPRIMARYSTOCK_FINAL SET ORDVALUE_PS=(SELECT SUM(ISNULL(ORDVALUE_PS,0)) FROM #TMPPRIMARYSTOCK WHERE #TMPPRIMARYSTOCK.EMPCODE=#TMPPRIMARYSTOCK_FINAL.EMPCODE AND #TMPPRIMARYSTOCK.SHOP_CODE=#TMPPRIMARYSTOCK_FINAL.SHOP_CODE
	AND #TMPPRIMARYSTOCK.LOGGEDINDATE=#TMPPRIMARYSTOCK_FINAL.LOGGEDINDATE)

	SET @Strsql=''
	SET @StrSql='SET @SECONDARYSTK_CURSOR=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,PRODID,BRAND_SECONDARY,PRODNAME_SECONDARY FROM #TMPSECONDARYSTOCK '
	SET @StrSql+='GROUP BY BRANDID,PRODID,BRAND_SECONDARY,PRODNAME_SECONDARY ORDER BY BRANDID,PRODID ; OPEN @SECONDARYSTK_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @SECONDARYSTK_CURSOR CURSOR OUTPUT', @SECONDARYSTK_CURSOR OUTPUT

	FETCH NEXT FROM @SECONDARYSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPSECONDARYSTOCK_FINAL ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND)) + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPSECONDARYSTOCK_FINAL ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME)) + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					FETCH NEXT FROM @SECONDARYSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
				END
		END
	CLOSE @SECONDARYSTK_CURSOR
	DEALLOCATE @SECONDARYSTK_CURSOR

	SET @BRANDPRODNAME=''
	SET @Strsql=''
	SET @StrSql='SET @CURSOR_SECONDARYSTOCKCALC=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,BRAND_SECONDARY,PRODID,PRODNAME_SECONDARY FROM #TMPSECONDARYSTOCK '
	SET @StrSql+='ORDER BY BRANDID,PRODID ; OPEN @CURSOR_SECONDARYSTOCKCALC '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @CURSOR_SECONDARYSTOCKCALC CURSOR OUTPUT', @CURSOR_SECONDARYSTOCKCALC OUTPUT

	FETCH NEXT FROM @CURSOR_SECONDARYSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @M_PRODID=@PRODID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							IF @BRANDPRODNAME=''
								BEGIN
									SET @BRANDPRODNAME='['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							ELSE IF @BRANDPRODNAME<>''
								BEGIN
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							SET @BRANDONCE=0
						END
					IF @M_PRODID<>@PRODID
						SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
					FETCH NEXT FROM @CURSOR_SECONDARYSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
				END
		END
	CLOSE @CURSOR_SECONDARYSTOCKCALC
	DEALLOCATE @CURSOR_SECONDARYSTOCKCALC

	IF @BRANDPRODNAME<>''
		BEGIN
			SET @StrSql='INSERT INTO #TMPSECONDARYSTOCK_FINAL SELECT * FROM('
			SET @StrSql+='SELECT DISTINCT LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_SECONDARY,SUM(QTY_SS) AS QTY_SS FROM #TMPSECONDARYSTOCK '
			SET @StrSql+='GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_SECONDARY '
			SET @StrSql+=') AA PIVOT (SUM(QTY_SS) FOR AA.PRODNAME_SECONDARY IN ('+@BRANDPRODNAME+')) BB '
			--SELECT @StrSql
			EXEC(@StrSql)
		END

	ALTER TABLE #TMPSECONDARYSTOCK_FINAL ADD ORDVALUE_SS DECIMAL(18,2) DEFAULT(0.00)
	UPDATE #TMPSECONDARYSTOCK_FINAL SET ORDVALUE_SS=(SELECT SUM(ISNULL(ORDVALUE_SS,0)) FROM #TMPSECONDARYSTOCK WHERE #TMPSECONDARYSTOCK.EMPCODE=#TMPSECONDARYSTOCK_FINAL.EMPCODE AND #TMPSECONDARYSTOCK.SHOP_CODE=#TMPSECONDARYSTOCK_FINAL.SHOP_CODE
	AND #TMPSECONDARYSTOCK.LOGGEDINDATE=#TMPSECONDARYSTOCK_FINAL.LOGGEDINDATE)

	SET @Strsql=''
	SET @StrSql='SET @CLOSINGSTK_CURSOR=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,PRODID,BRAND_CLOSING,PRODNAME_CLOSING FROM #TMPCLOSINGSTOCK '
	SET @StrSql+='GROUP BY BRANDID,PRODID,BRAND_CLOSING,PRODNAME_CLOSING ORDER BY BRANDID,PRODID ; OPEN @CLOSINGSTK_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @CLOSINGSTK_CURSOR CURSOR OUTPUT', @CLOSINGSTK_CURSOR OUTPUT

	FETCH NEXT FROM @CLOSINGSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							SET @sqlStrTable=''
							SET @sqlStrTable = 'ALTER TABLE #TMPCLOSINGSTOCK_FINAL ADD '
							SET @sqlStrTable += '['+LTRIM(RTRIM(@BRAND)) + ']' + ' INT NULL '
							EXEC SP_EXECUTESQL @sqlStrTable
							SET @BRANDONCE=0
						END
					SET @sqlStrTable=''
					SET @sqlStrTable = 'ALTER TABLE #TMPCLOSINGSTOCK_FINAL ADD '
					SET @sqlStrTable += '['+LTRIM(RTRIM(@PRODNAME)) + ']' + ' INT DEFAULT(0) '
					EXEC SP_EXECUTESQL @sqlStrTable
					FETCH NEXT FROM @CLOSINGSTK_CURSOR INTO @BRANDID,@PRODID,@BRAND,@PRODNAME
				END
		END
	CLOSE @CLOSINGSTK_CURSOR
	DEALLOCATE @CLOSINGSTK_CURSOR

	SET @BRANDPRODNAME=''
	SET @Strsql=''
	SET @StrSql='SET @CURSOR_CLOSINGSTOCKCALC=CURSOR FAST_FORWARD FOR SELECT DISTINCT BRANDID,BRAND_CLOSING,PRODID,PRODNAME_CLOSING FROM #TMPCLOSINGSTOCK '
	SET @StrSql+='ORDER BY BRANDID,PRODID ; OPEN @CURSOR_CLOSINGSTOCKCALC '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @CURSOR_CLOSINGSTOCKCALC CURSOR OUTPUT', @CURSOR_CLOSINGSTOCKCALC OUTPUT

	FETCH NEXT FROM @CURSOR_CLOSINGSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_BRANDID=@BRANDID
			SET @M_PRODID=@PRODID
			SET @BRANDONCE=1
			WHILE @M_BRANDID=@BRANDID AND @@FETCH_STATUS = 0
				BEGIN
					IF @BRANDONCE=1
						BEGIN
							IF @BRANDPRODNAME=''
								BEGIN
									SET @BRANDPRODNAME='['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							ELSE IF @BRANDPRODNAME<>''
								BEGIN
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@BRAND)) + ']'
									SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
								END
							SET @BRANDONCE=0
						END
					IF @M_PRODID<>@PRODID
						SET @BRANDPRODNAME+=',['+LTRIM(RTRIM(@PRODNAME)) + ']'
					FETCH NEXT FROM @CURSOR_CLOSINGSTOCKCALC INTO @BRANDID,@BRAND,@PRODID,@PRODNAME
				END
		END
	CLOSE @CURSOR_CLOSINGSTOCKCALC
	DEALLOCATE @CURSOR_CLOSINGSTOCKCALC

	IF @BRANDPRODNAME<>''
		BEGIN
			SET @StrSql='INSERT INTO #TMPCLOSINGSTOCK_FINAL SELECT * FROM('
			SET @StrSql+='SELECT DISTINCT LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_CLOSING,SUM(QTY_CS) AS QTY_CS FROM #TMPCLOSINGSTOCK '
			SET @StrSql+='GROUP BY LOGGEDINDATE,EMPCODE,SHOP_CODE,PRODNAME_CLOSING '
			SET @StrSql+=') AA PIVOT (SUM(QTY_CS) FOR AA.PRODNAME_CLOSING IN ('+@BRANDPRODNAME+')) BB '
			EXEC(@StrSql)
		END

	SET @Strsql=''
	SET @StrSql='SET @EMPSHOP_CURSOR=CURSOR FAST_FORWARD FOR SELECT DISTINCT PRI.LOGGEDINDATE,PRI.EMPCODE,PRI.Shop_Code,A.PRODID,A.PRODNAME FROM #TEMPPRODBRAND A '
	SET @StrSql+='INNER JOIN ('
	SET @StrSql+='SELECT CNT.cnt_internalId AS EMPCODE,A.User_Id,A.Shop_Id AS Shop_Code,ORDH.Product_Id,CONVERT(NVARCHAR(10),visited_time,105) AS LOGGEDINDATE FROM tbl_trans_shopActivitysubmit A '
	SET @StrSql+='INNER JOIN tbl_Master_shop SM ON SM.Shop_Code=A.Shop_Id AND SM.Shop_CreateUser=User_Id AND SM.type=4 '
	SET @StrSql+='INNER JOIN tbl_master_user USR ON USR.user_id=A.User_Id AND USR.user_inactive=''N'' '
	SET @StrSql+='INNER JOIN tbl_master_employee EMP ON USR.user_contactId=EMP.emp_contactId '
	SET @StrSql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @StrSql+='INNER JOIN('
	SET @StrSql+='SELECT ORDH.userID,ORDH.Shop_Code AS SHOP_CODE,ORDD.Product_Id FROM tbl_trans_fts_Orderupdate ORDH '
	SET @StrSql+='INNER JOIN ('
	SET @StrSql+='SELECT User_Id,Order_ID,Product_Id,Shop_code FROM tbl_FTs_OrderdetailsProduct '
	SET @StrSql+='GROUP BY User_Id,Order_ID,Product_Id,Shop_code) ORDD ON ORDH.Shop_Code=ORDD.Shop_code AND ORDH.OrderId=ORDD.Order_ID AND ORDH.userID=ORDD.User_Id '
	--Rev 3.0
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--End Rev 3.0
	SET @StrSql+=') ORDH ON ORDH.userID=A.User_Id '
	SET @StrSql+='WHERE CONVERT(NVARCHAR(10),A.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	IF @EMPID<>''
		SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=CNT.cnt_internalId) '
	SET @StrSql+=') PRI ON A.PRODID=PRI.Product_Id ORDER BY PRI.EMPCODE,A.PRODID ; OPEN @EMPSHOP_CURSOR '
	--SELECT @StrSql
	EXEC sp_executesql @StrSql,N' @EMPSHOP_CURSOR CURSOR OUTPUT', @EMPSHOP_CURSOR OUTPUT

	FETCH NEXT FROM @EMPSHOP_CURSOR INTO @LOGGEDINDATE,@EMPCODE,@Shop_Code,@PRODID,@PRODNAME
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @M_EMPCODE=@EMPCODE
			SET @M_SHOP_CODE=@Shop_Code
			WHILE @M_EMPCODE=@EMPCODE AND @M_SHOP_CODE=@SHOP_CODE AND @@FETCH_STATUS=0
				BEGIN
					--OPENING STOCK UPDATE
					IF (EXISTS (SELECT PRODNAME_OPENING FROM #TMPOPENINGSTOCK WHERE PRODNAME_OPENING=LTRIM(RTRIM(@PRODNAME))+'_OS' AND EMPCODE=@M_EMPCODE AND SHOP_CODE=@M_SHOP_CODE))
						BEGIN
							SET @StrSql=''
							SET @StrSql='UPDATE #TEMPPERFORM_FINAL SET ['+LTRIM(RTRIM(@PRODNAME))+'_OS' + ']=A.['+LTRIM(RTRIM(@PRODNAME))+'_OS' + '],VALUE_OS=A.ORDVALUE_OS FROM(SELECT DISTINCT LOGGEDINDATE,'
							SET @StrSql+='EMPCODE,SHOP_CODE,ORDVALUE_OS,ISNULL(['+LTRIM(RTRIM(@PRODNAME))+'_OS' + '],0) AS ['+LTRIM(RTRIM(@PRODNAME))+'_OS' + '] '
							SET @StrSql+='FROM #TMPOPENINGSTOCK_FINAL) A WHERE #TEMPPERFORM_FINAL.LOGGEDINDATE=A.LOGGEDINDATE COLLATE SQL_Latin1_General_CP1_CI_AS '
							SET @StrSql+='AND #TEMPPERFORM_FINAL.EMPCODE=A.EMPCODE COLLATE SQL_Latin1_General_CP1_CI_AS AND #TEMPPERFORM_FINAL.SHOP_CODE=A.SHOP_CODE COLLATE SQL_Latin1_General_CP1_CI_AS '
							EXEC SP_EXECUTESQL @StrSql
						END

					--PRIMARY STOCK UPDATE
					IF (EXISTS (SELECT PRODNAME_PRIMARY FROM #TMPPRIMARYSTOCK WHERE PRODNAME_PRIMARY=LTRIM(RTRIM(@PRODNAME))+'_PS' AND EMPCODE=@M_EMPCODE AND SHOP_CODE=@M_SHOP_CODE))
						BEGIN
							SET @StrSql=''
							SET @StrSql='UPDATE #TEMPPERFORM_FINAL SET ['+LTRIM(RTRIM(@PRODNAME))+'_PS' + ']=A.['+LTRIM(RTRIM(@PRODNAME))+'_PS' + '],VALUE_PS=A.ORDVALUE_PS FROM(SELECT DISTINCT LOGGEDINDATE,'
							SET @StrSql+='EMPCODE,SHOP_CODE,ORDVALUE_PS,ISNULL(['+LTRIM(RTRIM(@PRODNAME))+'_PS' + '],0) AS ['+LTRIM(RTRIM(@PRODNAME))+'_PS' + '] '
							SET @StrSql+='FROM #TMPPRIMARYSTOCK_FINAL) A WHERE #TEMPPERFORM_FINAL.LOGGEDINDATE=A.LOGGEDINDATE COLLATE SQL_Latin1_General_CP1_CI_AS '
							SET @StrSql+='AND #TEMPPERFORM_FINAL.EMPCODE=A.EMPCODE COLLATE SQL_Latin1_General_CP1_CI_AS AND #TEMPPERFORM_FINAL.SHOP_CODE=A.SHOP_CODE COLLATE SQL_Latin1_General_CP1_CI_AS '
							EXEC SP_EXECUTESQL @StrSql
						END

					--SECONDARY STOCK UPDATE
					IF (EXISTS (SELECT PRODNAME_SECONDARY FROM #TMPSECONDARYSTOCK WHERE PRODNAME_SECONDARY=LTRIM(RTRIM(@PRODNAME))+'_SS' AND EMPCODE=@M_EMPCODE AND SHOP_CODE=@M_SHOP_CODE))
						BEGIN
							SET @StrSql=''
							SET @StrSql='UPDATE #TEMPPERFORM_FINAL SET ['+LTRIM(RTRIM(@PRODNAME))+'_SS' + ']=A.['+LTRIM(RTRIM(@PRODNAME))+'_SS' + '],VALUE_SS=A.ORDVALUE_SS FROM(SELECT DISTINCT LOGGEDINDATE,'
							SET @StrSql+='EMPCODE,SHOP_CODE,ORDVALUE_SS,ISNULL(['+LTRIM(RTRIM(@PRODNAME))+'_SS' + '],0) AS ['+LTRIM(RTRIM(@PRODNAME))+'_SS' + '] '
							SET @StrSql+='FROM #TMPSECONDARYSTOCK_FINAL) A WHERE #TEMPPERFORM_FINAL.LOGGEDINDATE=A.LOGGEDINDATE COLLATE SQL_Latin1_General_CP1_CI_AS '
							SET @StrSql+='AND #TEMPPERFORM_FINAL.EMPCODE=A.EMPCODE COLLATE SQL_Latin1_General_CP1_CI_AS AND #TEMPPERFORM_FINAL.SHOP_CODE=A.SHOP_CODE COLLATE SQL_Latin1_General_CP1_CI_AS '
							EXEC SP_EXECUTESQL @StrSql
						END

					--CLOSING STOCK UPDATE
					IF (EXISTS (SELECT PRODNAME_CLOSING FROM #TMPCLOSINGSTOCK WHERE PRODNAME_CLOSING=LTRIM(RTRIM(@PRODNAME))+'_CS' AND EMPCODE=@M_EMPCODE AND SHOP_CODE=@M_SHOP_CODE))
						BEGIN
							SET @StrSql=''
							SET @StrSql='UPDATE #TEMPPERFORM_FINAL SET ['+LTRIM(RTRIM(@PRODNAME))+'_CS' + ']=A.['+LTRIM(RTRIM(@PRODNAME))+'_CS' + '] FROM(SELECT DISTINCT LOGGEDINDATE,'
							SET @StrSql+='EMPCODE,SHOP_CODE,ISNULL(['+LTRIM(RTRIM(@PRODNAME))+'_CS' + '],0) AS ['+LTRIM(RTRIM(@PRODNAME))+'_CS' + '] '
							SET @StrSql+='FROM #TMPCLOSINGSTOCK_FINAL) A WHERE #TEMPPERFORM_FINAL.LOGGEDINDATE=A.LOGGEDINDATE COLLATE SQL_Latin1_General_CP1_CI_AS '
							SET @StrSql+='AND #TEMPPERFORM_FINAL.EMPCODE=A.EMPCODE COLLATE SQL_Latin1_General_CP1_CI_AS AND #TEMPPERFORM_FINAL.SHOP_CODE=A.SHOP_CODE COLLATE SQL_Latin1_General_CP1_CI_AS '
							EXEC SP_EXECUTESQL @StrSql
						END

					FETCH NEXT FROM @EMPSHOP_CURSOR INTO @LOGGEDINDATE,@EMPCODE,@Shop_Code,@PRODID,@PRODNAME
				END
		END
	CLOSE @EMPSHOP_CURSOR
	DEALLOCATE @EMPSHOP_CURSOR

	SELECT * FROM #TMPERFORMSLSPERSONNELHEADING

	SET @StrSql=''
	SET @StrSql='SELECT * FROM('
	--ALL RECORDS
	SET @StrSql+='SELECT LOGGEDINDATE AS [DATE],EMPCODE,[SALES PERSONNEL NAME],REMARKS,[NAME OF THE SUPER],STATEID,STATE,DEG_ID,DESIGNATION,CONTACTNO,EMPID,REPORTTO,RPTTODESG,Shop_Code,[STOCKIST VISITED],'
	SET @StrSql+='[DISTRIBUTOR NAME],[MARKET WORKED],[LOGIN-LOGOUT KM (H.Q to STOCK POINT)],TC,PC,AVL,[OPENING STOCK],'
	SET @StrSql+=''+@BRANDPRODNAME_OS+',[VALUE_OS],[SECONDARY SALES],'+@BRANDPRODNAME_SS+',[VALUE_SS],[CLOSING STOCKS],'+@BRANDPRODNAME_CS+',[PRIMARY],'+@BRANDPRODNAME_PS+',[VALUE_PS] FROM #TEMPPERFORM_FINAL '
	SET @StrSql+='UNION ALL '
	--ALL TOTAL
	SET @StrSql+='SELECT ''01-12-2099'' AS [DATE],''ZZZZZZZZZZ'' AS EMPCODE,NULL AS [SALES PERSONNEL NAME],NULL AS REMARKS,NULL AS [NAME OF THE SUPER],999999999999 AS STATEID,NULL AS STATE,NULL AS DEG_ID,'
	SET @StrSql+='NULL AS DESIGNATION,NULL AS CONTACTNO,NULL AS EMPID,NULL AS REPORTTO,NULL AS RPTTODESG,NULL AS Shop_Code,''TOTAL SALES'' AS [STOCKIST VISITED],NULL AS [DISTRIBUTOR NAME],NULL AS [MARKET WORKED],'
	SET @StrSql+='SUM([LOGIN-LOGOUT KM (H.Q to STOCK POINT)]) AS [LOGIN-LOGOUT KM (H.Q to STOCK POINT)],SUM(TC) AS TC,SUM(PC) AS PC,SUM(AVL) AS AVL,NULL AS [OPENING STOCK],'
	SET @StrSql+=''+@BRANDPRODNAMESUMM_OS+',SUM([VALUE_OS]) AS [VALUE_OS],NULL AS [SECONDARY SALES],'+@BRANDPRODNAMESUMM_SS+',SUM([VALUE_SS]) AS [VALUE_SS],NULL AS [CLOSING STOCKS],'+@BRANDPRODNAMESUMM_CS+',NULL AS [PRIMARY],'+@BRANDPRODNAMESUMM_PS+','
	SET @StrSql+='SUM([VALUE_PS]) AS [VALUE_PS] FROM #TEMPPERFORM_FINAL '
	SET @StrSql+=') PERFORM ORDER BY EMPCODE,[DATE] '
	--SELECT @StrSql
	EXEC SP_EXECUTESQL @StrSql

	DROP TABLE #EMPLOYEE_LIST
	DROP TABLE #TEMPCONTACT
	DROP TABLE #TEMPPERFORM
	DROP TABLE #TEMPPERFORM_FINAL
	DROP TABLE #TMPALLDAYINMONTH
	DROP TABLE #Product_List
	DROP TABLE #TEMPPRODBRAND
	DROP TABLE #TMPOPENINGSTOCK
	DROP TABLE #TMPOPENINGSTOCK_FINAL
	DROP TABLE #TMPPRIMARYSTOCK
	DROP TABLE #TMPPRIMARYSTOCK_FINAL
	DROP TABLE #TMPSECONDARYSTOCK
	DROP TABLE #TMPSECONDARYSTOCK_FINAL
	DROP TABLE #TMPCLOSINGSTOCK
	DROP TABLE #TMPCLOSINGSTOCK_FINAL
	DROP TABLE #TMPERFORMSLSPERSONNELHEADING

	SET NOCOUNT OFF
END