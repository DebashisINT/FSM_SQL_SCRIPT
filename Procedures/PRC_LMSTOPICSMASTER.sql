IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_LMSTOPICSMASTER]') AND type in (N'P', N'PC')) 
BEGIN 
	EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_LMSTOPICSMASTER] AS'  
END 
GO


ALTER PROCEDURE [dbo].[PRC_LMSTOPICSMASTER]
(
	@ACTION NVARCHAR(500)=NULL,
	@IS_PAGELOAD NVARCHAR(100)=NULL,
	@USERID INT=NULL,
	@TOPICBASEDON_ID INT=NULL,
	@BRANCHID NVARCHAR(MAX)=NULL,
	@TOPICNAME NVARCHAR(300)=NULL,
	@SELECTEDTOPICBASEDONMAPLIST NVARCHAR(MAX)=NULL,
	@TOPICID BIGINT = NULL,
	@TOPICSTATUS BIT = NULL,
	@CONTENTID BIGINT = NULL,
	@TOPIC_COMP_DAY BIGINT = NULL,
	@TOPIC_ISDEFAULT BIT = NULL,
	@TOPIC_SEQ BIGINT = NULL,
	@RETURN_VALUE nvarchar(500)=NULL OUTPUT,
	@RETURN_DUPLICATEMAPNAME nvarchar(MAX)=NULL OUTPUT,
	@RETURN_NEWASSIGN nvarchar(MAX)=NULL OUTPUT
)
 
AS
/****************************************************************************************************************************************************************************
Written by Sanchita on 21-06-2024 for V2.0.47	LMS Topic Master Module Implementation. 
												Refer: 27539
****************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON
	DECLARE @Strsql NVARCHAR(MAX)
	DECLARE @TOPICBASEDON NVARCHAR(300)
	DECLARE @empcode VARCHAR(50)
	DECLARE @TOPICID_AUTO BIGINT, @TOPICMAPID_AUTO BIGINT,  @ID BIGINT, @MAPNAME NVARCHAR(300), @MAPNAME_DUPLICATE NVARCHAR(max), 
		@FIRSTTIME INT, @ALLDUPLICATE INT
	DECLARE @CNT_CONTACTID NVARCHAR(100), @CNT_USERID NUMERIC(10,0)


	IF(@ACTION='GETLISTINGDATA')
	begin
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'LMS_TOPICSMASTER_LISTING') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE LMS_TOPICSMASTER_LISTING
			(
				USERID INT,
				SEQ INT,
				TOPICID BIGINT,
				TOPICNAME VARCHAR(300) NULL,
				TOPICBASEDON VARCHAR(300) NULL,
				TOPICSTATUS VARCHAR(10) NULL,
				QUESTIONS_ID BIGINT NULL,
				CREATEDBY VARCHAR(50) NULL,
				CREATEDON DATETIME NULL,
				UPDATEDBY VARCHAR(50) NULL,
				UPDATEDON DATETIME NULL,
				TOPIC_COMP_DAY VARCHAR(10) NULL,
				TOPIC_ISDEFAULT VARCHAR(10) NULL,
				TOPIC_SEQ VARCHAR(10) NULL
			)
			CREATE NONCLUSTERED INDEX IX1 ON LMS_TOPICSMASTER_LISTING (SEQ)
		END
		DELETE FROM LMS_TOPICSMASTER_LISTING WHERE USERID=@USERID

		if(@IS_PAGELOAD <> 'is_pageload')
		begin
			INSERT INTO LMS_TOPICSMASTER_LISTING (USERID, SEQ, TOPICID, TOPICNAME, TOPICBASEDON, TOPICSTATUS, QUESTIONS_ID,
						CREATEDBY , CREATEDON, UPDATEDBY, UPDATEDON, TOPIC_COMP_DAY, TOPIC_ISDEFAULT, TOPIC_SEQ)
			SELECT distinct @USERID,ROW_NUMBER() OVER(ORDER BY T.TOPIC_SEQ desc) AS SEQ, T.[TOPICID], T.[TOPICNAME], B.TOPICBASEDON_NAME [TOPICBASEDON], 
				(CASE WHEN T.[TOPICSTATUS]=1 THEN 'Yes' ELSE 'No' END) [TOPICSTATUS] , 
				(select count(0) from LMS_QUESTIONS_TOPICMAP where QUESTIONS_TOPICID=TOPICID ) QUESTIONS_ID , 
				isnull(CON.cnt_firstName,'')+' '+isnull(CON.cnt_middleName,'')+' '+isnull(CON.cnt_lastName,'') [CREATEDBY], T.[CREATEDON],
				isnull(CONM.cnt_firstName,'')+' '+isnull(CONM.cnt_middleName,'')+' '+isnull(CONM.cnt_lastName,'') [UPDATEDBY], T.[UPDATEDON],
				TOPIC_COMP_DAY, (CASE WHEN T.TOPIC_ISDEFAULT=1 THEN 'Yes' ELSE 'No' END) TOPIC_ISDEFAULT, CAST(T.TOPIC_SEQ AS VARCHAR(10)) TOPIC_SEQ  
			FROM LMS_TOPICS T
			LEFT OUTER JOIN TBL_MASTER_USER U ON T.CREATEDBY=U.user_id
			LEFT OUTER JOIN tbl_master_contact CON ON U.user_contactId=CON.cnt_internalId
			LEFT OUTER JOIN TBL_MASTER_USER UM ON T.UPDATEDBY=UM.user_id
			LEFT OUTER JOIN tbl_master_contact CONM ON UM.user_contactId=CONM.cnt_internalId
			LEFT OUTER JOIN LMS_TOPICBASEDON B ON T.TOPICBASEDON_ID=B.TOPICBASEDON_ID
			--LEFT OUTER JOIN LMS_QUESTIONS_TOPICMAP TQMAP ON T.TOPICID=TQMAP.QUESTIONS_TOPICID
			

		end
	end
	IF(@ACTION='GETTOPICSCOUNTDATA')
	BEGIN
		DECLARE @TotalTopics INT = 0, @TotalUsedTopics INT = 0, @TotalUnusedTopics INT = 0

		IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'LMS_TOPICSMASTER_LISTING') AND TYPE IN (N'U'))
		BEGIN
			--SET @TotalTopics = ISNULL((SELECT COUNT(0) FROM LMS_TOPICSMASTER_LISTING),0)
			--SET @TotalUsedTopics = ISNULL((SELECT COUNT(DISTINCT T.TOPICID) FROM LMS_TOPICSMASTER_LISTING T 
			--						INNER JOIN LMS_QUESTIONS_TOPICMAP TQM ON T.TOPICID=TQM.QUESTIONS_TOPICID
			--						),0)

			SET @TotalTopics = ISNULL((SELECT COUNT(0) FROM LMS_TOPICSMASTER_LISTING WHERE USERID=@USERID ),0)
			SET @TotalUsedTopics = ISNULL((SELECT COUNT(0) FROM LMS_TOPICSMASTER_LISTING WHERE QUESTIONS_ID<>0 AND USERID=@USERID),0)

			SET @TotalUnusedTopics = ISNULL((SELECT COUNT(0) FROM LMS_TOPICSMASTER_LISTING WHERE QUESTIONS_ID=0 AND USERID=@USERID),0)
		END

		SELECT @TotalTopics AS cnt_TotalTopics, @TotalUsedTopics AS cnt_TotalUsedTopics, @TotalUnusedTopics AS cnt_TotalUnusedTopics

	END
	IF(@ACTION='GetDropdownBindData')
	BEGIN
		SELECT '0' AS TOPICBASEDON_ID,'-- Select --' AS TOPICBASEDON_NAME
		UNION ALL
		SELECT convert(nvarchar(10),TOPICBASEDON_ID) as TOPICBASEDON_ID, TOPICBASEDON_NAME from LMS_TOPICBASEDON where TOPICBASEDON_STATUS=1 order by TOPICBASEDON_ID

	END
	if(@ACTION='GETBASEDONDATALIST')
	BEGIN
		
		SET @TOPICBASEDON = (SELECT TOPICBASEDON_NAME FROM [LMS_TOPICBASEDON] WHERE TOPICBASEDON_ID=@TOPICBASEDON_ID)

		IF(@TOPICBASEDON='Branch')
		BEGIN
			select  s into #branchList  from dbo.GetSplit(',',@BRANCHID) 

			SELECT convert(nvarchar(10),branch_id) as [ID], branch_code AS [NAME], convert(bit,0) as selected,
				'Branches' as tabNameText, 'Selected branches' as rightTabNameText, 'search in branches' as searchPlaceholderText 
			FROM tbl_master_branch br
			INNER JOIN #branchList b on br.branch_id = b.s

			DROP TABLE #branchList
		END
		ELSE IF(@TOPICBASEDON='Designation')
		BEGIN
			SELECT convert(nvarchar(10),deg_id) as [ID], deg_designation AS [NAME] , convert(bit,0) as selected,
				'Designation' as tabNameText, 'Selected designation' as rightTabNameText, 'search in deisgnations' as searchPlaceholderText
			FROM tbl_master_designation br 
		END
		ELSE IF(@TOPICBASEDON='Department')
		BEGIN
			SELECT convert(nvarchar(10),cost_id) as [ID], cost_description AS [NAME] , convert(bit,0) as selected,
				'Department' as tabNameText, 'Selected department' as rightTabNameText, 'search in departments' as searchPlaceholderText
			FROM tbl_master_costCenter 
		END
		ELSE IF(@TOPICBASEDON='Employee')
		BEGIN
			SET @empcode =(select user_contactId from Tbl_master_user where user_id=@USERID)		
			CREATE TABLE #EMPHR
			(
			EMPCODE VARCHAR(50),
			RPTTOEMPCODE VARCHAR(50)
			)

			CREATE TABLE #EMPHR_EDIT
			(
			EMPCODE VARCHAR(50),
			RPTTOEMPCODE VARCHAR(50)
			)

			IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
			BEGIN
				INSERT INTO #EMPHR
				SELECT emp_cntId EMPCODE,ISNULL(TME.emp_contactId,'') RPTTOEMPCODE 
				FROM tbl_trans_employeeCTC CTC LEFT JOIN tbl_master_employee TME on TME.emp_id= CTC.emp_reportTO WHERE emp_effectiveuntil IS NULL
		
				;with cte as(select	
				EMPCODE,RPTTOEMPCODE
				from #EMPHR 
				where EMPCODE IS NULL OR EMPCODE=@empcode  
				union all
				select	
				a.EMPCODE,a.RPTTOEMPCODE
				from #EMPHR a
				join cte b
				on a.RPTTOEMPCODE = b.EMPCODE
				) 
				INSERT INTO #EMPHR_EDIT
				select EMPCODE,RPTTOEMPCODE  from cte 
			END

			SET @StrSql = ''
			
			SET @StrSql = 'SELECT convert(nvarchar(10),emp_id) as [ID], '
			SET @StrSql += 'isnull(CON.cnt_firstName,'''')+'' ''+isnull(CON.cnt_middleName,'''')+'' ''+isnull(CON.cnt_lastName,'''') AS [NAME] , convert(bit,0) as selected, '
			SET @StrSql += '	''Employees'' as tabNameText, ''Selected employees'' as rightTabNameText, ''search in employees'' as searchPlaceholderText '
			SET @StrSql += 'FROM tbl_master_EMPLOYEE EMP '
			SET @StrSql += 'inner join tbl_master_contact CON on EMP.emp_contactId=con.cnt_internalId '
			SET @StrSql += 'inner join tbl_master_user U on EMP.emp_contactId=U.user_contactId and U.user_inactive=''N''  '
			
			IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
			BEGIN
				SET @StrSql += 'INNER JOIN #EMPHR_EDIT EMPHR ON CON.cnt_internalId=EMPHR.EMPCODE '
			END

			EXEC (@StrSql)	

			DROP TABLE #EMPHR
			DROP TABLE #EMPHR_EDIT
		END
		
	END

	IF(@ACTION='ADDTOPIC')
	BEGIN
		
		SET @MAPNAME_DUPLICATE=''
		SET @FIRSTTIME=1
		SET @ALLDUPLICATE = 1
		SET @TOPICBASEDON = (SELECT TOPICBASEDON_NAME FROM [LMS_TOPICBASEDON] WHERE TOPICBASEDON_ID=@TOPICBASEDON_ID)
		--SET @SELECTEDTOPICBASEDONMAPLIST = ''''+ REPLACE (@SELECTEDTOPICBASEDONMAPLIST,',',''',''') + ''''

		IF NOT EXISTS(SELECT TOPICID FROM LMS_TOPICS WHERE TOPICNAME= LTRIM(RTRIM(@TOPICNAME)) )
		BEGIN
			IF NOT EXISTS(SELECT TOPICID FROM LMS_TOPICS WHERE TOPIC_SEQ= @TOPIC_SEQ )
			BEGIN
			
				select s into #TOPICBASEDONMAP  from dbo.GetSplit(',',@SELECTEDTOPICBASEDONMAPLIST)

				BEGIN TRY
				BEGIN TRANSACTION

					declare db_cursor_BO cursor for
					SELECT s FROM #TOPICBASEDONMAP 	
					open db_cursor_BO
					fetch next from db_cursor_BO into @ID
					while @@FETCH_STATUS=0
					begin
						IF(@TOPICBASEDON='Branch')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								SET @TOPICID_AUTO = isnull((SELECT MAX(TOPICID) FROM LMS_TOPICS ),0)+1

								INSERT INTO LMS_TOPICS (TOPICID, TOPICNAME, TOPICBASEDON_ID, TOPICSTATUS, CREATEDBY, CREATEDON, TOPIC_COMP_DAY, TOPIC_ISDEFAULT, TOPIC_SEQ)
								VALUES (@TOPICID_AUTO, @TOPICNAME, @TOPICBASEDON_ID, @TOPICSTATUS, @USERID, SYSDATETIME(), @TOPIC_COMP_DAY, @TOPIC_ISDEFAULT, @TOPIC_SEQ )

								SET @RETURN_VALUE = @TOPICID_AUTO
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_BRANCHMAPID) FROM LMS_TOPIC_BRANCHMAP),0)+1

							INSERT INTO LMS_TOPIC_BRANCHMAP (TOPIC_BRANCHMAPID, TOPICID, TOPIC_BRANCHID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID_AUTO, @ID, @USERID, SYSDATETIME() )

							SET @FIRSTTIME = 0
							--SET @RETURN_VALUE = @TOPICID_AUTO
						END
						ELSE IF(@TOPICBASEDON='Designation')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								SET @TOPICID_AUTO = isnull((SELECT MAX(TOPICID) FROM LMS_TOPICS ),0)+1

								INSERT INTO LMS_TOPICS (TOPICID, TOPICNAME, TOPICBASEDON_ID, TOPICSTATUS, CREATEDBY, CREATEDON, TOPIC_COMP_DAY, TOPIC_ISDEFAULT, TOPIC_SEQ)
								VALUES (@TOPICID_AUTO, @TOPICNAME, @TOPICBASEDON_ID, @TOPICSTATUS, @USERID, SYSDATETIME(), @TOPIC_COMP_DAY, @TOPIC_ISDEFAULT, @TOPIC_SEQ )

								SET @RETURN_VALUE = @TOPICID_AUTO
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_DESIGMAPID) FROM LMS_TOPIC_DESIGMAP),0)+1

							INSERT INTO LMS_TOPIC_DESIGMAP (TOPIC_DESIGMAPID, TOPICID, TOPIC_DESIGID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID_AUTO, @ID, @USERID, SYSDATETIME() )

							SET @FIRSTTIME = 0
							--SET @RETURN_VALUE = @TOPICID_AUTO
						END
						ELSE IF(@TOPICBASEDON='Department')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								SET @TOPICID_AUTO = isnull((SELECT MAX(TOPICID) FROM LMS_TOPICS ),0)+1

								INSERT INTO LMS_TOPICS (TOPICID, TOPICNAME, TOPICBASEDON_ID, TOPICSTATUS, CREATEDBY, CREATEDON, TOPIC_COMP_DAY, TOPIC_ISDEFAULT, TOPIC_SEQ)
								VALUES (@TOPICID_AUTO, @TOPICNAME, @TOPICBASEDON_ID, @TOPICSTATUS, @USERID, SYSDATETIME(), @TOPIC_COMP_DAY, @TOPIC_ISDEFAULT, @TOPIC_SEQ )

								SET @RETURN_VALUE = @TOPICID_AUTO
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_DEPTMAPID) FROM LMS_TOPIC_DEPTMAP),0)+1

							INSERT INTO LMS_TOPIC_DEPTMAP (TOPIC_DEPTMAPID, TOPICID, TOPIC_DEPTID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID_AUTO, @ID, @USERID, SYSDATETIME() )

							SET @FIRSTTIME = 0
							--SET @RETURN_VALUE = @TOPICID_AUTO
						END
						ELSE IF(@TOPICBASEDON='Employee')
						BEGIN
							SET @CNT_CONTACTID = ISNULL( (SELECT emp_contactId FROM tbl_master_employee WHERE emp_id=@ID) ,'')
							SET @CNT_USERID = ISNULL( (SELECT USER_ID FROM TBL_MASTER_USER WHERE user_contactId=@CNT_CONTACTID) ,'')

							IF (@FIRSTTIME=1)
							BEGIN
								SET @TOPICID_AUTO = isnull((SELECT MAX(TOPICID) FROM LMS_TOPICS ),0)+1

								INSERT INTO LMS_TOPICS (TOPICID, TOPICNAME, TOPICBASEDON_ID, TOPICSTATUS, CREATEDBY, CREATEDON, TOPIC_COMP_DAY, TOPIC_ISDEFAULT, TOPIC_SEQ)
								VALUES (@TOPICID_AUTO, @TOPICNAME, @TOPICBASEDON_ID, @TOPICSTATUS, @USERID, SYSDATETIME(), @TOPIC_COMP_DAY, @TOPIC_ISDEFAULT, @TOPIC_SEQ )

								SET @RETURN_VALUE = @TOPICID_AUTO
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_EMPMAPID) FROM LMS_TOPIC_EMPMAP),0)+1

							INSERT INTO LMS_TOPIC_EMPMAP (TOPIC_EMPMAPID, TOPICID, TOPIC_EMPID, TOPIC_EMPCNTID, TOPIC_USERID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID_AUTO, @ID, @CNT_CONTACTID, @CNT_USERID, @USERID, SYSDATETIME() )

							SET @FIRSTTIME = 0
							--SET @RETURN_VALUE = @TOPICID_AUTO
						END

						fetch next from db_cursor_BO into @ID
					END
					close db_cursor_BO
					deallocate db_cursor_BO

					--SET @RETURN_VALUE = @ALLDUPLICATE
					--set @RETURN_DUPLICATEMAPNAME = @MAPNAME_DUPLICATE
		
					DROP TABLE #TOPICBASEDONMAP

					IF (@TOPIC_ISDEFAULT=1)
					BEGIN
						declare db_cursor_EMP cursor for
						SELECT emp_id FROM tbl_master_employee E INNER JOIN TBL_MASTER_USER U ON E.emp_contactId=U.user_contactId 
							WHERE U.user_inactive='N' AND NOT EXISTS(SELECT TOPIC_EMPID FROM LMS_TOPIC_EMPMAP WHERE TOPIC_EMPID=E.emp_id AND TOPICID=@TOPICID_AUTO )
						open db_cursor_EMP
						fetch next from db_cursor_EMP into @ID
						while @@FETCH_STATUS=0
						begin
								SET @CNT_CONTACTID = ISNULL( (SELECT TOP 1 emp_contactId FROM tbl_master_employee WHERE emp_id=@ID) ,'')
								SET @CNT_USERID = ISNULL( (SELECT TOP 1 USER_ID FROM TBL_MASTER_USER WHERE user_contactId=@CNT_CONTACTID) ,'')

								SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_EMPMAPID) FROM LMS_TOPIC_EMPMAP),0)+1

								INSERT INTO LMS_TOPIC_EMPMAP (TOPIC_EMPMAPID, TOPICID, TOPIC_EMPID, TOPIC_EMPCNTID, TOPIC_USERID, TOPIC_DEFAULT, CREATEDBY,	CREATEDON)
								VALUES (@TOPICMAPID_AUTO, @TOPICID_AUTO, @ID, @CNT_CONTACTID, @CNT_USERID, 1, @USERID, SYSDATETIME() )

								--SET @FIRSTTIME = 0
								--SET @RETURN_VALUE = @TOPICID_AUTO
						
							fetch next from db_cursor_EMP into @ID
						END
						close db_cursor_EMP
						deallocate db_cursor_EMP
					END

				COMMIT TRANSACTION
				END TRY

				BEGIN CATCH

				ROLLBACK TRANSACTION
					set @RETURN_VALUE='-10'
		
				END CATCH
			END
			ELSE
			BEGIN
				SET @RETURN_VALUE = '-30'
				set @RETURN_DUPLICATEMAPNAME = ISNULL( (SELECT MAX(TOPIC_SEQ) TopicSequence FROM LMS_TOPICS), 0)
			END
		END
		ELSE
		BEGIN
			SET @RETURN_VALUE = 0
		END

		
	END
	IF(@ACTION='SHOWTOPIC')
	BEGIN
		--select TOPICNAME, TOPICBASEDON_ID FROM LMS_TOPICS

		SET @TOPICBASEDON = (SELECT TOP 1 TOPICBASEDON_NAME FROM LMS_TOPICBASEDON L INNER JOIN LMS_TOPICS T ON T.TOPICBASEDON_ID=L.TOPICBASEDON_ID
					WHERE T.TOPICID=@TOPICID)

		IF(@TOPICBASEDON='Branch')
		BEGIN
			select  s into #branchList1 from dbo.GetSplit(',',@BRANCHID) 

			SELECT T.TOPICNAME, convert(nvarchar(10),T.TOPICBASEDON_ID) TOPICBASEDON_ID, TOPICSTATUS,
				convert(nvarchar(10),BR.branch_id) as [ID], BR.branch_code AS [NAME], convert(bit,1) as selected,
				convert(nvarchar(10),TOPIC_COMP_DAY) as [TOPIC_COMP_DAY], TOPIC_ISDEFAULT, convert(nvarchar(10),TOPIC_SEQ) as TOPIC_SEQ, 
				'Branches' as tabNameText, 'Selected branches' as rightTabNameText, 'search in branches' as searchPlaceholderText 
			FROM LMS_TOPICS T INNER JOIN LMS_TOPIC_BRANCHMAP TMAP ON T.TOPICID=TMAP.TOPICID
			INNER JOIN tbl_master_branch BR ON TMAP.TOPIC_BRANCHID=BR.branch_id
			WHERE T.TOPICID=@TOPICID
			UNION ALL
			SELECT '' AS TOPICNAME, '0' TOPICBASEDON_ID, convert(bit,0) as TOPICSTATUS, 
				convert(nvarchar(10),branch_id) as [ID], branch_code AS [NAME], convert(bit,0) as selected,
				'0' as [TOPIC_COMP_DAY], convert(bit,0) as TOPIC_ISDEFAULT, '0' AS TOPIC_SEQ,
				'Branches' as tabNameText, 'Selected branches' as rightTabNameText, 'search in branches' as searchPlaceholderText 
			FROM tbl_master_branch br
			INNER JOIN #branchList1 b on br.branch_id = b.s
			WHERE NOT EXISTS (SELECT TOPIC_BRANCHID FROM LMS_TOPIC_BRANCHMAP BMAP WHERE BMAP.TOPIC_BRANCHID=BR.branch_id AND BMAP.TOPICID=@TOPICID )

			DROP TABLE #branchList1
		END
		ELSE IF(@TOPICBASEDON='Designation')
		BEGIN
			SELECT T.TOPICNAME, convert(nvarchar(10),T.TOPICBASEDON_ID) TOPICBASEDON_ID, TOPICSTATUS, 
				convert(nvarchar(10),DEG.deg_id) as [ID], DEG.deg_designation AS [NAME] , convert(bit,1) as selected,
				convert(nvarchar(10),TOPIC_COMP_DAY) as [TOPIC_COMP_DAY], TOPIC_ISDEFAULT, convert(nvarchar(10),TOPIC_SEQ) as TOPIC_SEQ,
				'Designation' as tabNameText, 'Selected designation' as rightTabNameText, 'search in deisgnations' as searchPlaceholderText
			FROM LMS_TOPICS T INNER JOIN LMS_TOPIC_DESIGMAP TMAP ON T.TOPICID=TMAP.TOPICID
			INNER JOIN tbl_master_designation DEG ON TMAP.TOPIC_DESIGID=DEG.deg_id
			WHERE T.TOPICID=@TOPICID
			UNION ALL
			SELECT '' AS TOPICNAME, '0' TOPICBASEDON_ID, convert(bit,0) as TOPICSTATUS , 
				convert(nvarchar(10),DG.deg_id) as [ID], DG.deg_designation AS [NAME] , convert(bit,0) as selected,
				'0' as [TOPIC_COMP_DAY], convert(bit,0) as TOPIC_ISDEFAULT, '0' AS TOPIC_SEQ,
				'Designation' as tabNameText, 'Selected designation' as rightTabNameText, 'search in deisgnations' as searchPlaceholderText
			FROM tbl_master_designation DG 
			WHERE NOT EXISTS (SELECT TOPIC_DESIGID FROM LMS_TOPIC_DESIGMAP DMAP WHERE DMAP.TOPIC_DESIGID=DG.deg_id AND DMAP.TOPICID=@TOPICID )
		END
		ELSE IF(@TOPICBASEDON='Department')
		BEGIN
			SELECT T.TOPICNAME, convert(nvarchar(10),T.TOPICBASEDON_ID) TOPICBASEDON_ID, TOPICSTATUS , 
				convert(nvarchar(10),COST.cost_id) as [ID], COST.cost_description AS [NAME] , convert(bit,1) as selected,
				convert(nvarchar(10),TOPIC_COMP_DAY) as [TOPIC_COMP_DAY], TOPIC_ISDEFAULT, convert(nvarchar(10),TOPIC_SEQ) as TOPIC_SEQ,
				'Department' as tabNameText, 'Selected department' as rightTabNameText, 'search in departments' as searchPlaceholderText
			FROM LMS_TOPICS T INNER JOIN LMS_TOPIC_DEPTMAP TMAP ON T.TOPICID=TMAP.TOPICID
			INNER JOIN tbl_master_costCenter COST ON TMAP.TOPIC_DEPTID=COST.cost_id
			WHERE T.TOPICID=@TOPICID
			UNION ALL
			SELECT '' AS TOPICNAME, '0' TOPICBASEDON_ID, convert(bit,0) as TOPICSTATUS , 
				convert(nvarchar(10), CS.cost_id) as [ID], CS.cost_description AS [NAME] , convert(bit,0) as selected,
				'0' as [TOPIC_COMP_DAY], convert(bit,0) as TOPIC_ISDEFAULT, '0' AS TOPIC_SEQ,
				'Department' as tabNameText, 'Selected department' as rightTabNameText, 'search in departments' as searchPlaceholderText
			FROM tbl_master_costCenter CS
			WHERE NOT EXISTS (SELECT TOPIC_DEPTID FROM LMS_TOPIC_DEPTMAP DMAP WHERE DMAP.TOPIC_DEPTID=CS.cost_id AND DMAP.TOPICID=@TOPICID )
		END
		ELSE IF(@TOPICBASEDON='Employee')
		BEGIN
			SET @empcode =(select user_contactId from Tbl_master_user where user_id=@USERID)		
			CREATE TABLE #EMPHR1
			(
				EMPCODE VARCHAR(50),
				RPTTOEMPCODE VARCHAR(50)
			)

			CREATE TABLE #EMPHR_EDIT1
			(
				EMPCODE VARCHAR(50),
				RPTTOEMPCODE VARCHAR(50)
			)

			IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
			BEGIN
				INSERT INTO #EMPHR1
				SELECT emp_cntId EMPCODE,ISNULL(TME.emp_contactId,'') RPTTOEMPCODE 
				FROM tbl_trans_employeeCTC CTC LEFT JOIN tbl_master_employee TME on TME.emp_id= CTC.emp_reportTO WHERE emp_effectiveuntil IS NULL
		
				;with cte as(select	
				EMPCODE,RPTTOEMPCODE
				from #EMPHR1 
				where EMPCODE IS NULL OR EMPCODE=@empcode  
				union all
				select	
				a.EMPCODE,a.RPTTOEMPCODE
				from #EMPHR1 a
				join cte b
				on a.RPTTOEMPCODE = b.EMPCODE
				) 
				INSERT INTO #EMPHR_EDIT1
				select EMPCODE,RPTTOEMPCODE  from cte 
			END

			SET @StrSql = ''

			SET @StrSql += ' SELECT T.TOPICNAME, convert(nvarchar(10),T.TOPICBASEDON_ID) TOPICBASEDON_ID, TOPICSTATUS,  '
			SET @StrSql += '	convert(nvarchar(10),EMP.emp_id) as [ID], '
			SET @StrSql += '	isnull(CON.cnt_firstName,'''')+'' ''+isnull(CON.cnt_middleName,'''')+'' ''+isnull(CON.cnt_lastName,'''') AS [NAME] , convert(bit,1) as selected, '
			SET @StrSql += '	convert(nvarchar(10),TOPIC_COMP_DAY) as [TOPIC_COMP_DAY], TOPIC_ISDEFAULT, convert(nvarchar(10),TOPIC_SEQ) as TOPIC_SEQ, '
			SET @StrSql += '	''Employees'' as tabNameText, ''Selected employee'' as rightTabNameText, ''search in employees'' as searchPlaceholderText '
			SET @StrSql += ' FROM LMS_TOPICS T INNER JOIN LMS_TOPIC_EMPMAP TMAP ON T.TOPICID=TMAP.TOPICID '
			SET @StrSql += ' INNER JOIN tbl_master_EMPLOYEE EMP ON TMAP.TOPIC_EMPID=EMP.emp_id '
			SET @StrSql += ' inner join tbl_master_contact CON on EMP.emp_contactId=con.cnt_internalId '
			SET @StrSql += ' WHERE TMAP.TOPIC_DEFAULT=0 AND T.TOPICID='+convert(char,@TOPICID) +' '
			SET @StrSql += ' UNION ALL '
			SET @StrSql += ' SELECT '''' as TOPICNAME, ''0'' as TOPICBASEDON_ID, ''0'' as TOPICSTATUS ,  convert(nvarchar(10),emp_id) as [ID], '
			SET @StrSql += 'isnull(CON.cnt_firstName,'''')+'' ''+isnull(CON.cnt_middleName,'''')+'' ''+isnull(CON.cnt_lastName,'''') AS [NAME] , convert(bit,0) as selected, '
			SET @StrSql += ' ''0'' as [TOPIC_COMP_DAY], convert(bit,0) as TOPIC_ISDEFAULT, ''0'' AS TOPIC_SEQ, '
			SET @StrSql += '	''Employees'' as tabNameText, ''Selected employees'' as rightTabNameText, ''search in employees'' as searchPlaceholderText '
			SET @StrSql += 'FROM tbl_master_EMPLOYEE EMP '
			SET @StrSql += 'inner join tbl_master_contact CON on EMP.emp_contactId=con.cnt_internalId '
			SET @StrSql += 'inner join tbl_master_user U on EMP.emp_contactId=U.user_contactId and U.user_inactive=''N''  '
			IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
			BEGIN
				SET @StrSql += 'INNER JOIN #EMPHR_EDIT1 EMPHR ON CON.cnt_internalId=EMPHR.EMPCODE '
			END
			SET @StrSql += ' WHERE NOT EXISTS (SELECT TOPIC_EMPID FROM LMS_TOPIC_EMPMAP EMAP WHERE EMAP.TOPIC_DEFAULT=0 AND EMAP.TOPIC_EMPID=EMP.emp_id AND EMAP.TOPICID='+convert(char,@TOPICID) +' ) '
			

			EXEC (@StrSql)	

			DROP TABLE #EMPHR1
			DROP TABLE #EMPHR_EDIT1

		END

	END
	IF(@ACTION='EDITTOPIC')
	BEGIN
		
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'#tempMapTable') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE #tempMapTable
			(
			ID BIGINT,
			TOPICID BIGINT,
			CREATEDBY NVARCHAR(50) NULL,
			CREATEDON DATETIME NULL,
			)
		END
		DELETE FROM #tempMapTable


		DECLARE @TOPICBASEDON_OLD NVARCHAR(300), @TOPICSTATUS_OLD BIT, @CREATEDON DATETIME, @OLD_ID BIGINT, @OLDDEFAULT BIT

		SET @MAPNAME_DUPLICATE=''
		SET @RETURN_NEWASSIGN=''
		SET @FIRSTTIME=1
		SET @ALLDUPLICATE = 1
		SET @TOPICBASEDON = (SELECT TOPICBASEDON_NAME FROM [LMS_TOPICBASEDON] WHERE TOPICBASEDON_ID=@TOPICBASEDON_ID)
		SET @TOPICBASEDON_OLD = (SELECT TOPICBASEDON_NAME FROM [LMS_TOPICBASEDON] TB INNER JOIN LMS_TOPICS T ON T.TOPICBASEDON_ID=TB.TOPICBASEDON_ID
								WHERE T.TOPICID=@TOPICID )
		SET @TOPICSTATUS_OLD = (SELECT TOPICSTATUS FROM [LMS_TOPICS] WHERE TOPICID=@TOPICID)
		SET @OLDDEFAULT = (SELECT TOPIC_ISDEFAULT FROM [LMS_TOPICS] WHERE TOPICID=@TOPICID)

		IF NOT EXISTS (SELECT TOPICID FROM LMS_TOPICS WHERE TOPICNAME=@TOPICNAME AND TOPICID<>@TOPICID )
		BEGIN
			IF NOT EXISTS (SELECT TOPICID FROM LMS_TOPICS WHERE TOPIC_SEQ=@TOPIC_SEQ AND TOPICID<>@TOPICID )
			BEGIN
				select s into #TOPICBASEDONMAP1  from dbo.GetSplit(',',@SELECTEDTOPICBASEDONMAPLIST)

				BEGIN TRY
				BEGIN TRANSACTION

					declare db_cursor_BO cursor for
					SELECT s FROM #TOPICBASEDONMAP1 	
					open db_cursor_BO
					fetch next from db_cursor_BO into @ID
					while @@FETCH_STATUS=0
					begin
						IF(@TOPICBASEDON='Branch')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								DELETE FROM #tempMapTable
							
								UPDATE LMS_TOPICS SET TOPICNAME=@TOPICNAME, TOPICSTATUS=@TOPICSTATUS, TOPICBASEDON_ID=@TOPICBASEDON_ID, UPDATEDBY=@USERID, 
								TOPIC_COMP_DAY=@TOPIC_COMP_DAY, TOPIC_ISDEFAULT=@TOPIC_ISDEFAULT,
								UPDATEDON=GETDATE(), TOPIC_SEQ=@TOPIC_SEQ WHERE TOPICID=@TOPICID

								IF(@TOPICSTATUS_OLD <> @TOPICSTATUS)
								BEGIN
									UPDATE LMS_CONTENT SET CONTENTSTATUS=@TOPICSTATUS WHERE CONTENT_TOPICID=@TOPICID
								END

								IF(@TOPICBASEDON_OLD='Branch')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_BRANCHID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								
									DELETE FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Designation')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DESIGID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Department')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DEPTID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Employee')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_EMPID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID
								END
							END

							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_BRANCHMAPID) FROM LMS_TOPIC_BRANCHMAP),0)+1

							INSERT INTO LMS_TOPIC_BRANCHMAP (TOPIC_BRANCHMAPID, TOPICID, TOPIC_BRANCHID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID, @ID, @USERID, SYSDATETIME() )

							IF (@TOPICBASEDON = @TOPICBASEDON_OLD)
							BEGIN
								UPDATE MAP SET CREATEDBY=TEMP.CREATEDBY, CREATEDON=TEMP.CREATEDON 
									FROM LMS_TOPIC_BRANCHMAP MAP INNER JOIN #tempMapTable TEMP ON MAP.TOPICID=TEMP.TOPICID
									WHERE MAP.TOPIC_BRANCHID=TEMP.ID
							END

							SET @FIRSTTIME = 0
							SET @RETURN_VALUE = 2
						END
						ELSE IF(@TOPICBASEDON='Designation')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								DELETE FROM #tempMapTable

								UPDATE LMS_TOPICS SET TOPICNAME=@TOPICNAME, TOPICSTATUS=@TOPICSTATUS, TOPICBASEDON_ID=@TOPICBASEDON_ID, UPDATEDBY=@USERID, 
								TOPIC_COMP_DAY=@TOPIC_COMP_DAY, TOPIC_ISDEFAULT=@TOPIC_ISDEFAULT,
								UPDATEDON=GETDATE(), TOPIC_SEQ=@TOPIC_SEQ WHERE TOPICID=@TOPICID
							
								IF(@TOPICSTATUS_OLD <> @TOPICSTATUS)
								BEGIN
									UPDATE LMS_CONTENT SET CONTENTSTATUS=@TOPICSTATUS WHERE CONTENT_TOPICID=@TOPICID
								END

								IF(@TOPICBASEDON_OLD='Branch')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_BRANCHID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								
									DELETE FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Designation')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DESIGID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Department')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DEPTID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Employee')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_EMPID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID
								END
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_DESIGMAPID) FROM LMS_TOPIC_DESIGMAP),0)+1

							INSERT INTO LMS_TOPIC_DESIGMAP (TOPIC_DESIGMAPID, TOPICID, TOPIC_DESIGID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID, @ID, @USERID, SYSDATETIME() )

							IF (@TOPICBASEDON = @TOPICBASEDON_OLD)
							BEGIN
								UPDATE MAP SET CREATEDBY=TEMP.CREATEDBY, CREATEDON=TEMP.CREATEDON 
									FROM LMS_TOPIC_DESIGMAP MAP INNER JOIN #tempMapTable TEMP ON MAP.TOPICID=TEMP.TOPICID
									WHERE MAP.TOPIC_DESIGID=TEMP.ID
							END


							SET @FIRSTTIME = 0
							SET @RETURN_VALUE = 2
						END
						ELSE IF(@TOPICBASEDON='Department')
						BEGIN
							IF (@FIRSTTIME=1)
							BEGIN
								DELETE FROM #tempMapTable

								UPDATE LMS_TOPICS SET TOPICNAME=@TOPICNAME, TOPICSTATUS=@TOPICSTATUS, TOPICBASEDON_ID=@TOPICBASEDON_ID, UPDATEDBY=@USERID, 
								TOPIC_COMP_DAY=@TOPIC_COMP_DAY, TOPIC_ISDEFAULT=@TOPIC_ISDEFAULT,
								UPDATEDON=GETDATE(), TOPIC_SEQ=@TOPIC_SEQ WHERE TOPICID=@TOPICID
							
								IF(@TOPICSTATUS_OLD <> @TOPICSTATUS)
								BEGIN
									UPDATE LMS_CONTENT SET CONTENTSTATUS=@TOPICSTATUS WHERE CONTENT_TOPICID=@TOPICID
								END

								IF(@TOPICBASEDON_OLD='Branch')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_BRANCHID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								
									DELETE FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Designation')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DESIGID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Department')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DEPTID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Employee')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_EMPID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID
								END
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_DEPTMAPID) FROM LMS_TOPIC_DEPTMAP),0)+1

							INSERT INTO LMS_TOPIC_DEPTMAP (TOPIC_DEPTMAPID, TOPICID, TOPIC_DEPTID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID, @ID, @USERID, SYSDATETIME() )

							IF (@TOPICBASEDON = @TOPICBASEDON_OLD)
							BEGIN
								UPDATE MAP SET CREATEDBY=TEMP.CREATEDBY, CREATEDON=TEMP.CREATEDON 
									FROM LMS_TOPIC_DEPTMAP MAP INNER JOIN #tempMapTable TEMP ON MAP.TOPICID=TEMP.TOPICID
									WHERE MAP.TOPIC_DEPTID=TEMP.ID
							END

							SET @FIRSTTIME = 0
							SET @RETURN_VALUE = 2
						END
						ELSE IF(@TOPICBASEDON='Employee')
						BEGIN
				
							SET @CNT_CONTACTID = ISNULL( (SELECT emp_contactId FROM tbl_master_employee WHERE emp_id=@ID) ,'')
							SET @CNT_USERID = ISNULL( (SELECT USER_ID FROM TBL_MASTER_USER WHERE user_contactId=@CNT_CONTACTID) ,'')

							IF (@FIRSTTIME=1)
							BEGIN
								DELETE FROM #tempMapTable

								UPDATE LMS_TOPICS SET TOPICNAME=@TOPICNAME, TOPICSTATUS=@TOPICSTATUS, TOPICBASEDON_ID=@TOPICBASEDON_ID, UPDATEDBY=@USERID, 
								TOPIC_COMP_DAY=@TOPIC_COMP_DAY, TOPIC_ISDEFAULT=@TOPIC_ISDEFAULT,
								UPDATEDON=GETDATE(), TOPIC_SEQ=@TOPIC_SEQ WHERE TOPICID=@TOPICID
							
								IF(@TOPICSTATUS_OLD <> @TOPICSTATUS)
								BEGIN
									UPDATE LMS_CONTENT SET CONTENTSTATUS=@TOPICSTATUS WHERE CONTENT_TOPICID=@TOPICID
								END

								IF(@TOPICBASEDON_OLD='Branch')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_BRANCHID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								
									DELETE FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Designation')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DESIGID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Department')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_DEPTID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID
								END
								ELSE IF(@TOPICBASEDON_OLD='Employee')
								BEGIN
									INSERT INTO #tempMapTable (ID, TOPICID, CREATEDBY, CREATEDON)
										SELECT TOPIC_EMPID, TOPICID, CREATEDBY, CREATEDON FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID

									DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID
								END
							END
					
							SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_EMPMAPID) FROM LMS_TOPIC_EMPMAP),0)+1

							INSERT INTO LMS_TOPIC_EMPMAP (TOPIC_EMPMAPID, TOPICID, TOPIC_EMPID, TOPIC_EMPCNTID, TOPIC_USERID, CREATEDBY,	CREATEDON)
							VALUES (@TOPICMAPID_AUTO, @TOPICID, @ID, @CNT_CONTACTID, @CNT_USERID, @USERID, SYSDATETIME() )

							IF (@TOPICBASEDON = @TOPICBASEDON_OLD)
							BEGIN
								UPDATE MAP SET CREATEDBY=TEMP.CREATEDBY, CREATEDON=TEMP.CREATEDON 
									FROM LMS_TOPIC_EMPMAP MAP INNER JOIN #tempMapTable TEMP ON MAP.TOPICID=TEMP.TOPICID
									WHERE MAP.TOPIC_EMPID=TEMP.ID
							END

							SET @FIRSTTIME = 0
							SET @RETURN_VALUE = 2
						END

						IF NOT EXISTS(SELECT * FROM #tempMapTable WHERE ID=@ID )
						BEGIN
							IF @RETURN_NEWASSIGN=''
								SET @RETURN_NEWASSIGN = TRIM(CAST(@ID AS VARCHAR(10)))
							ELSE
								SET @RETURN_NEWASSIGN = @RETURN_NEWASSIGN + ','+ TRIM(CAST(@ID AS VARCHAR(10)))
							
						END

						fetch next from db_cursor_BO into @ID
					END
					close db_cursor_BO
					deallocate db_cursor_BO

					--SET @RETURN_VALUE = @ALLDUPLICATE
					--set @RETURN_DUPLICATEMAPNAME = @MAPNAME_DUPLICATE
		
					DROP TABLE #TOPICBASEDONMAP1

					IF(@OLDDEFAULT <> @TOPIC_ISDEFAULT)
					BEGIN
						IF (@TOPIC_ISDEFAULT=1)
						BEGIN
							declare db_cursor_EMP cursor for
							SELECT emp_id FROM tbl_master_employee E INNER JOIN TBL_MASTER_USER U ON E.emp_contactId=U.user_contactId 
								WHERE U.user_inactive='N' AND NOT EXISTS(SELECT TOPIC_EMPID FROM LMS_TOPIC_EMPMAP WHERE TOPIC_EMPID=E.emp_id AND TOPICID=@TOPICID )
							open db_cursor_EMP
							fetch next from db_cursor_EMP into @ID
							while @@FETCH_STATUS=0
							begin
									SET @CNT_CONTACTID = ISNULL( (SELECT TOP 1 emp_contactId FROM tbl_master_employee WHERE emp_id=@ID) ,'')
									SET @CNT_USERID = ISNULL( (SELECT TOP 1 USER_ID FROM TBL_MASTER_USER WHERE user_contactId=@CNT_CONTACTID) ,'')

									SET @TOPICMAPID_AUTO = isnull((SELECT MAX(TOPIC_EMPMAPID) FROM LMS_TOPIC_EMPMAP),0)+1

									INSERT INTO LMS_TOPIC_EMPMAP (TOPIC_EMPMAPID, TOPICID, TOPIC_EMPID, TOPIC_EMPCNTID, TOPIC_USERID, TOPIC_DEFAULT, CREATEDBY,	CREATEDON)
									VALUES (@TOPICMAPID_AUTO, @TOPICID, @ID, @CNT_CONTACTID, @CNT_USERID, 1, @USERID, SYSDATETIME() )

								fetch next from db_cursor_EMP into @ID
							END
							close db_cursor_EMP
							deallocate db_cursor_EMP
						END
						ELSE
						BEGIN
							DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID AND TOPIC_DEFAULT=1
						END
					END

				

				COMMIT TRANSACTION
				END TRY

				BEGIN CATCH

				ROLLBACK TRANSACTION
					set @RETURN_VALUE='-20'
		
				END CATCH
			END
			ELSE
			BEGIN
				set @RETURN_VALUE='-30'
				set @RETURN_DUPLICATEMAPNAME = ISNULL( (SELECT MAX(TOPIC_SEQ) TopicSequence FROM LMS_TOPICS), 0)
			END
		END
		ELSE
		BEGIN
			SET @RETURN_VALUE = 0
			
		END

		IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'#tempMapTable') AND TYPE IN (N'U'))
		BEGIN
			DROP TABLE #tempMapTable
		END
		
	END
	IF(@ACTION='DELETETOPICS')
	BEGIN
		
		IF EXISTS (SELECT QUESTIONS_TOPICID FROM LMS_QUESTIONS_TOPICMAP WHERE QUESTIONS_TOPICID=@TOPICID)
		BEGIN
			set @RETURN_VALUE='0'
		END
		else IF EXISTS (SELECT CONTENT_TOPICID FROM LMS_CONTENT WHERE CONTENT_TOPICID=@TOPICID)
		BEGIN
			set @RETURN_VALUE='-1'
		END
		else
		BEGIN

			SET @TOPICBASEDON = (SELECT TOPICBASEDON_NAME FROM [LMS_TOPICBASEDON] TB INNER JOIN LMS_TOPICS T ON T.TOPICBASEDON_ID=TB.TOPICBASEDON_ID
									WHERE T.TOPICID=@TOPICID )
		
	
			BEGIN TRY
			BEGIN TRANSACTION
				DECLARE @TOPICSEQ_DEL BIGINT = (SELECT TOPIC_SEQ FROM LMS_TOPICS WHERE TOPICID=@TOPICID )

				IF(@TOPICBASEDON='Branch')
				BEGIN
					DELETE FROM LMS_TOPIC_BRANCHMAP WHERE TOPICID=@TOPICID
				END
				ELSE IF(@TOPICBASEDON='Designation')
				BEGIN
					DELETE FROM LMS_TOPIC_DESIGMAP WHERE TOPICID=@TOPICID
				END
				ELSE IF(@TOPICBASEDON='Department')
				BEGIN
					DELETE FROM LMS_TOPIC_DEPTMAP WHERE TOPICID=@TOPICID
				END
				ELSE IF(@TOPICBASEDON='Employee')
				BEGIN
					DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID
				END

				DELETE FROM LMS_TOPIC_EMPMAP WHERE TOPICID=@TOPICID -- IN CASE DEFAULT TOPIC

				DELETE FROM LMS_TOPICS WHERE TOPICID=@TOPICID

				UPDATE LMS_TOPICS SET TOPIC_SEQ=TOPIC_SEQ-1 WHERE TOPIC_SEQ>@TOPICSEQ_DEL

				IF EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'LMS_TOPICSMASTER_LISTING') AND TYPE IN (N'U'))
				BEGIN
					DELETE FROM LMS_TOPICSMASTER_LISTING WHERE TOPICID=@TOPICID
				END

				set @RETURN_VALUE='1'
			COMMIT TRANSACTION
			END TRY

			BEGIN CATCH

			ROLLBACK TRANSACTION
				set @RETURN_VALUE='-10'
		
			END CATCH
		END
		
	END
	
	IF(@ACTION='GETLASTTOPICSEQ')
	BEGIN
		SELECT ISNULL(MAX(TOPIC_SEQ),0)+1 TopicSequence FROM LMS_TOPICS

	END
END
GO

