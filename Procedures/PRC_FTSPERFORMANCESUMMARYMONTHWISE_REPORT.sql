--EXEC PRC_FTSPERFORMANCESUMMARYMONTHWISE_REPORT 'FEB','','','',378

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[PRC_FTSPERFORMANCESUMMARYMONTHWISE_REPORT]') AND TYPE in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [PRC_FTSPERFORMANCESUMMARYMONTHWISE_REPORT] AS' 
END
GO

ALTER PROCEDURE [dbo].[PRC_FTSPERFORMANCESUMMARYMONTHWISE_REPORT]
(
@MONTH NVARCHAR(3)=NULL,
@STATEID NVARCHAR(MAX)=NULL,
@DESIGNID NVARCHAR(MAX)=NULL,
@EMPID NVARCHAR(MAX)=NULL,
--Rev 8.0
@YEARS NVARCHAR(10)=NULL,
--End of Rev 8.0
@USERID INT
) WITH ENCRYPTION
AS
/****************************************************************************************************************************************************************************
Written by : Debashis Talukder on 14/02/2019
Module	   : Performance Summary Month Wise
1.0		v15.0.0		18/02/2019		Debashis		Report should be showing with zero value where transaction not found for the specified period and change calculation 
													method as per excel format. Refer mail: Performance Summary Month Wise
2.0		v15.0.0		19/02/2019		Debashis		Not Login count showing in (-ve) figure.There are some employees whose attendance was marked on Sunday.But as per report
													functionality Not Login count=(No. of total day upto current date of selected month-total Sundays upto current date of 
													selected month)-Total Present days.But now functionality has been changed as discussed with Pijush Da that if any Employee
													marked attendance on Sunday then that day should be excluded from above Sunday count formula.
													Refer mail: Performance report Monthwise
3.0		v17.0.0		20/02/2019		Debashis		Report showing wrong information.Now it has been solved. Refer: Performance Summary monthwise report issue
4.0		v17.0.0		22/02/2019		Debashis		Implemented Heirarchy in any reports. Refer: Heirarchy in any reports.
5.0		v17.0.0		22/02/2019		Debashis		Not Login count consider "On Leave" status. Refer mail: FTS - Reports
6.0		v17.0.0		22/02/2019		Debashis		Billed & count of delivered to be added in Performance Summary Month Wise Report.Refer mail:Fwd: Minutes of Meeting : 21.02.2019
7.0		v19.0.0		27/02/2019		Debashis		New Column in Performance Summary Month Wise after "Not Login" column as "Attendance" = Count of (Atwork + On Leave), 
													"Man Days"=Day Count of Current Month (excluding sunday).Refer mail: (no subject)
8.0		v2.0.4		02/01/2020		Tanmoy			Year field required in the Monthly report.Refer: 0021574
9.0		v2.0.38		02-02-2023		Sanchita		Appconfig and User wise setting "IsAllDataInPortalwithHeirarchy = True" 
													then data in portal shall be populated based on Hierarchy Only. Refer: 25504
****************************************************************************************************************************************************************************/
BEGIN
	SET NOCOUNT ON

	DECLARE @Strsql NVARCHAR(MAX),@sqlStrTable NVARCHAR(MAX),@MONTHNAME NVARCHAR(3),@MONTHNO INT=0,@FROMDATE NVARCHAR(10),@TODATE NVARCHAR(10),@NOOFDAYS DECIMAL(10,2)=0
	DECLARE @NOOFDAYSINMONTH INT,@NOOFSUNDAYS INT,@CURRENTMONTHNAME NVARCHAR(3),@LOGINEMPCODE NVARCHAR(50),@CURRENTMONTHTODATE NVARCHAR(10)
	--Rev 2.0
	DECLARE @YEAR AS INT,@FIRSTDATEOFMONTH DATETIME,@CURRENTDATEOFMONTH DATETIME
	--End of Rev 2.0
	--Rev 7.0
	DECLARE @TOTALDAYSINMONTH INT=0
	--End of Rev 7.0

	SET @MONTHNAME=@MONTH
	SET @MONTHNO=DATEPART(MM,@MONTHNAME+'01 1900')
		--Rev 8.0
	--SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)),120)
	--SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))),120)
	SET @FROMDATE=CONVERT(VARCHAR(10),DATEADD(MONTH, CONVERT(INT,@MONTHNO) - 1, @YEARS),120)
	SET @TODATE=CONVERT(VARCHAR(10),DATEADD(DAY, -1, DATEADD(MONTH, CONVERT(INT,@MONTHNO), @YEARS)),120)
	--End of Rev 8.0
	--Rev 7.0
	SET @TOTALDAYSINMONTH=(SELECT DATEDIFF(DD,@FROMDATE,@TODATE)+1)
	--End of Rev 7.0

	--Select DateDiff(ww, @FROMDATE, GETDATE()) as NumOfSundays --Calculate No of Sundays From date to As on date.
	SET @CURRENTMONTHNAME=(SELECT UPPER(CONVERT(CHAR(3),GETDATE(),0)))
	IF @MONTH=@CURRENTMONTHNAME
		BEGIN
			SET @NOOFDAYSINMONTH=(SELECT DATEDIFF(DD,@FROMDATE,GETDATE())+1)
			SET @NOOFSUNDAYS=(SELECT DATEDIFF(WW,@FROMDATE, GETDATE()))
			SET @CURRENTMONTHTODATE=(SELECT CONVERT(VARCHAR(10),GETDATE(),120))
			SET @NOOFDAYS=(SELECT DATEDIFF(DD,@FROMDATE,@CURRENTMONTHTODATE)+1)
		END
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		BEGIN
			SET @NOOFDAYSINMONTH=(SELECT DATEDIFF(DD,@FROMDATE,@TODATE)+1)
			SET @NOOFSUNDAYS=(SELECT DATEDIFF(WW,@FROMDATE,@TODATE))
			SET @NOOFDAYS=(SELECT DATEDIFF(DD,@FROMDATE,@TODATE)+1)
		END
			
	--Rev 2.0
	SELECT @YEAR=YEAR(@FROMDATE)
	SELECT @FIRSTDATEOFMONTH = @FROMDATE
	SELECT @CURRENTDATEOFMONTH = (SELECT CONVERT(VARCHAR(10),GETDATE(),120))
	;WITH CTE AS (SELECT 1 AS DAYID,@FIRSTDATEOFMONTH AS FROMDATE,DATENAME(DW, @FIRSTDATEOFMONTH) AS DAYNAME
	UNION ALL
	SELECT CTE.DAYID + 1 AS DAYID,DATEADD(D, 1 ,CTE.FROMDATE),DATENAME(DW, DATEADD(D, 1 ,CTE.FROMDATE)) AS DAYNAME
	FROM CTE
	WHERE DATEADD(D,1,CTE.FROMDATE) < @CURRENTDATEOFMONTH
	)
	SELECT FROMDATE AS SUNDAYDATE,DAYNAME INTO #TMPSHOWSUNDAY
	FROM CTE
	WHERE DAYNAME IN ('Sunday')
	OPTION (MAXRECURSION 1000)
	--End of Rev 2.0
	
	SET @LOGINEMPCODE=(SELECT USER_CONTACTID FROM TBL_MASTER_USER WHERE USER_ID=@USERID)

	SELECT emp_cntId AS EMPCODE,ISNULL(TME.emp_contactId,'') RPTTOEMPCODE INTO #EMPHR FROM tbl_trans_employeeCTC CTC LEFT OUTER JOIN tbl_master_employee TME on TME.emp_id= CTC.emp_reportTO

	;WITH CTE AS(SELECT	EMPCODE FROM #EMPHR WHERE EMPCODE IS NULL OR EMPCODE=@LOGINEMPCODE
	UNION ALL
	SELECT A.EMPCODE FROM #EMPHR A
	JOIN CTE B
	ON A.RPTTOEMPCODE = B.EMPCODE
	) 
	SELECT DISTINCT TMU.USER_CONTACTID AS EMPCODE INTO #EMPLOYEEHRLIST FROM CTE 
	INNER JOIN TBL_MASTER_USER TMU ON CTE.EMPCODE=TMU.USER_CONTACTID

	--Rev 4.0
	--INSERT INTO #EMPLOYEEHRLIST SELECT emp_contactId FROM tbl_master_employee EMP INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMP.emp_id=EMPCTC.emp_reportTo 
	--WHERE EMPCTC.emp_cntId=@LOGINEMPCODE
	--End of Rev 4.0

	-- Rev 9.0
	DECLARE @user_contactId NVARCHAR(15)
	SELECT @user_contactId=user_contactId  from tbl_master_user WITH(NOLOCK) where user_id=@USERID

	IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
	BEGIN
		CREATE TABLE #EMPHR1
		(
		EMPCODE VARCHAR(50),
		RPTTOEMPCODE VARCHAR(50)
		)

		CREATE TABLE #EMPHR_EDIT
		(
		EMPCODE VARCHAR(50),
		RPTTOEMPCODE VARCHAR(50)
		)
		
		INSERT INTO #EMPHR1
		SELECT emp_cntId EMPCODE,ISNULL(TME.emp_contactId,'') RPTTOEMPCODE 
		FROM tbl_trans_employeeCTC CTC LEFT JOIN tbl_master_employee TME on TME.emp_id= CTC.emp_reportTO WHERE emp_effectiveuntil IS NULL
		
		;with cte as(select	
		EMPCODE,RPTTOEMPCODE
		from #EMPHR1 
		where EMPCODE IS NULL OR EMPCODE=@user_contactId  
		union all
		select	
		a.EMPCODE,a.RPTTOEMPCODE
		from #EMPHR1 a
		join cte b
		on a.RPTTOEMPCODE = b.EMPCODE
		) 
		INSERT INTO #EMPHR_EDIT
		select EMPCODE,RPTTOEMPCODE  from cte 

	END
	-- End of Rev 9.0

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#TMPMASTEMPLOYEE') AND TYPE IN (N'U'))
		DROP TABLE #TMPMASTEMPLOYEE
	CREATE TABLE #TMPMASTEMPLOYEE(EMP_ID NUMERIC(18, 0) NOT NULL,EMP_UNIQUECODE VARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,EMP_CONTACTID NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL)
	CREATE NONCLUSTERED INDEX IX1 ON #TMPMASTEMPLOYEE (EMP_CONTACTID ASC)

	INSERT INTO #TMPMASTEMPLOYEE SELECT EMP_ID,EMP_UNIQUECODE,EMP_CONTACTID FROM tbl_master_employee WHERE EXISTS(SELECT emp_contactId FROM #EMPLOYEEHRLIST WHERE EMPCODE=emp_contactId)

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#STATEID_LIST') AND TYPE IN (N'U'))
		DROP TABLE #STATEID_LIST
	CREATE TABLE #STATEID_LIST (State_Id INT)
	CREATE NONCLUSTERED INDEX IX1 ON #STATEID_LIST (State_Id ASC)
	IF @STATEID <> ''
		BEGIN
			SET @STATEID=REPLACE(@STATEID,'''','')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #STATEID_LIST SELECT id from tbl_master_state where id in('+@STATEID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END
	
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#DESIGNATION_LIST') AND TYPE IN (N'U'))
		DROP TABLE #DESIGNATION_LIST
	CREATE TABLE #DESIGNATION_LIST (deg_id INT)
	CREATE NONCLUSTERED INDEX IX2 ON #DESIGNATION_LIST (deg_id ASC)
	IF @DESIGNID <> ''
		BEGIN
			SET @DESIGNID=REPLACE(@DESIGNID,'''','')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #DESIGNATION_LIST SELECT deg_id from tbl_master_designation where deg_id in('+@DESIGNID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#EMPLOYEE_LIST') AND TYPE IN (N'U'))
		DROP TABLE #EMPLOYEE_LIST
	CREATE TABLE #EMPLOYEE_LIST (emp_contactId NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS)
	IF @EMPID <> ''
		BEGIN
			SET @EMPID = REPLACE(''''+@EMPID+'''',',',''',''')
			SET @sqlStrTable=''
			SET @sqlStrTable=' INSERT INTO #EMPLOYEE_LIST SELECT emp_contactId from tbl_master_employee where emp_contactId in('+@EMPID+')'
			EXEC SP_EXECUTESQL @sqlStrTable
		END

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id=OBJECT_ID(N'#TEMPCONTACT') AND TYPE IN (N'U'))
		DROP TABLE #TEMPCONTACT
	CREATE TABLE #TEMPCONTACT
		(
			cnt_internalId NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_firstName NVARCHAR(150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_middleName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_lastName NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
			cnt_contactType NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
		)
	CREATE NONCLUSTERED INDEX IX_PARTYID ON #TEMPCONTACT(cnt_internalId,cnt_contactType ASC)
	-- Rev 9.0
	--INSERT INTO #TEMPCONTACT
	--SELECT cnt_internalId,cnt_firstName,cnt_middleName,cnt_lastName,cnt_contactType FROM TBL_MASTER_CONTACT WHERE cnt_contactType IN('EM')

	SET @Strsql=''
	SET @Strsql+=' INSERT INTO #TEMPCONTACT '
	SET @Strsql+=' SELECT cnt_internalId,cnt_firstName,cnt_middleName,cnt_lastName,cnt_contactType FROM TBL_MASTER_CONTACT CNT '
	IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
	BEGIN
		SET @Strsql+=' INNER JOIN #EMPHR_EDIT HRY ON CNT.cnt_internalId=HRY.EMPCODE '
	END
	SET @Strsql+=' WHERE cnt_contactType IN(''EM'') '
	exec sp_executesql @Strsql
	-- End of Rev 9.0

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE OBJECT_ID=OBJECT_ID(N'FTSPERFORMANCESUMMARYMONTHWISE_REPORT') AND TYPE IN (N'U'))
		BEGIN
			CREATE TABLE FTSPERFORMANCESUMMARYMONTHWISE_REPORT
			(
			  USERID INT,
			  SEQ INT,
			  EMPCODE NVARCHAR(100) NULL,
			  EMPID NVARCHAR(100) NULL,
			  EMPNAME NVARCHAR(300) NULL,
			  CONTACTNO NVARCHAR(50) NULL,
			  STATEID INT,
			  STATE NVARCHAR(50) NULL,
			  DEG_ID INT,
			  DESIGNATION NVARCHAR(50) NULL,
			  RPTTOEMPCODE NVARCHAR(100) NULL,
			  REPORTTO NVARCHAR(300) NULL,
			  RPTTODESGID INT,
			  RPTTODESG NVARCHAR(50) NULL,
			  LATE_CNT INT,
			  LATE_LESSVISIT INT,
			  ABSENT_CNT INT,
			  ABSENT_LESSVISIT INT,
			  NOTLOGIN_CNT INT,
			  --Rev 7.0
			  PRESENT_CNT INT,
			  MANDAYS_CNT INT,
			  --End of Rev 7.0
			  VISIT_TGT INT,
			  --Rev 3.0
			  --VISITMTD_TGT INT,
			  --AVG_VISITMTDTGT DECIMAL(38,2),
			  --ORDERVALUE_ACHV DECIMAL(38,2),
			  VISIT_ACHV INT,
			  AVG_VISITACHV DECIMAL(38,2),
			  ORDVAL_TGT DECIMAL(38,2),
			  --End of Rev 3.0
			  ORDERVALUE_MTD DECIMAL(38,2),
			  DELIVERED DECIMAL(38,2),
			  --Rev 6.0
			  ORDERCNT INT,
			  BILLCNT INT,
			  --End of Rev 6.0
			  DISTANCE_COVERED DECIMAL(38,2)
			)
			CREATE NONCLUSTERED INDEX IX ON FTSPERFORMANCESUMMARYMONTHWISE_REPORT (SEQ)
		END
	DELETE FROM FTSPERFORMANCESUMMARYMONTHWISE_REPORT WHERE USERID=@USERID 

	SET @Strsql=''
	--Rev 3.0
	--SET @Strsql='INSERT INTO FTSPERFORMANCESUMMARYMONTHWISE_REPORT(USERID,SEQ,EMPCODE,EMPID,EMPNAME,CONTACTNO,STATEID,STATE,DEG_ID,DESIGNATION,RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,'
	--SET @Strsql+='ABSENT_CNT,ABSENT_LESSVISIT,NOTLOGIN_CNT,VISIT_TGT,VISITMTD_TGT,AVG_VISITMTDTGT,ORDERVALUE_ACHV,ORDERVALUE_MTD,DELIVERED,DISTANCE_COVERED) '
	--Rev 6.0
	--SET @Strsql='INSERT INTO FTSPERFORMANCESUMMARYMONTHWISE_REPORT(USERID,SEQ,EMPCODE,EMPID,EMPNAME,CONTACTNO,STATEID,STATE,DEG_ID,DESIGNATION,RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,'
	--SET @Strsql+='ABSENT_CNT,ABSENT_LESSVISIT,NOTLOGIN_CNT,VISIT_TGT,VISIT_ACHV,AVG_VISITACHV,ORDVAL_TGT,ORDERVALUE_MTD,DELIVERED,DISTANCE_COVERED) '
	SET @Strsql='INSERT INTO FTSPERFORMANCESUMMARYMONTHWISE_REPORT(USERID,SEQ,EMPCODE,EMPID,EMPNAME,CONTACTNO,STATEID,STATE,DEG_ID,DESIGNATION,RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,'
	--Rev 7.0
	--SET @Strsql+='ABSENT_CNT,ABSENT_LESSVISIT,NOTLOGIN_CNT,VISIT_TGT,VISIT_ACHV,AVG_VISITACHV,ORDVAL_TGT,ORDERVALUE_MTD,DELIVERED,ORDERCNT,BILLCNT,DISTANCE_COVERED) '
	SET @Strsql+='ABSENT_CNT,ABSENT_LESSVISIT,NOTLOGIN_CNT,PRESENT_CNT,MANDAYS_CNT,VISIT_TGT,VISIT_ACHV,AVG_VISITACHV,ORDVAL_TGT,ORDERVALUE_MTD,DELIVERED,ORDERCNT,BILLCNT,DISTANCE_COVERED) '
	--End of Rev 7.0
	--End of Rev 6.0
	--End of Rev 3.0
	SET @Strsql+='SELECT '+LTRIM(RTRIM(STR(@USERID)))+' AS USERID,ROW_NUMBER() OVER(ORDER BY DESIGNATION) AS SEQ,EMPCODE,EMPID,EMPNAME,CONTACTNO,STATEID,STATE,DEG_ID,DESIGNATION,'
	--Rev 1.0
	--SET @Strsql+='RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,(LATE_CNT/3) AS ABSENT_CNT,LATE_LESSVISIT AS ABSENT_LESSVISIT,ISNULL(NOTLOGIN_CNT,0) AS NOTLOGIN_CNT,'
	--Rev 7.0
	--SET @Strsql+='RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,((LATE_CNT+LATE_LESSVISIT)/3) AS ABSENT_CNT,ABSENT_LESSVISIT,ISNULL(NOTLOGIN_CNT,0) AS NOTLOGIN_CNT,'
	SET @Strsql+='RPTTOEMPCODE,REPORTTO,RPTTODESGID,RPTTODESG,LATE_CNT,LATE_LESSVISIT,((LATE_CNT+LATE_LESSVISIT)/3) AS ABSENT_CNT,ABSENT_LESSVISIT,ISNULL(NOTLOGIN_CNT,0) AS NOTLOGIN_CNT,ISNULL(PRESENT_CNT,0) AS PRESENT_CNT,'
	SET @Strsql+=''+LTRIM(RTRIM(STR(@TOTALDAYSINMONTH)))+'-'+LTRIM(RTRIM(STR(@NOOFSUNDAYS)))+' AS MANDAYS_CNT,'
	--End of Rev 7.0
	--End of Rev 1.0
	--Rev 3.0
	--SET @Strsql+='ISNULL(VISIT_TGT,0) AS VISIT_TGT,ISNULL(VISITMTD_TGT,0) AS VISITMTD_TGT,ISNULL(AVG_VISITMTDTGT,0) AS AVG_VISITMTDTGT,ISNULL(ORDERVALUE_ACHV,0) AS ORDERVALUE_ACHV,ISNULL(ORDERVALUE_MTD,0) AS ORDERVALUE_MTD,'
	SET @Strsql+='ISNULL(VISIT_TGT,0) AS VISIT_TGT,ISNULL(VISIT_ACHV,0) AS VISIT_ACHV,ISNULL(AVG_VISITACHV,0) AS AVG_VISITACHV,ISNULL(ORDVAL_TGT,0) AS ORDVAL_TGT,ISNULL(ORDERVALUE_MTD,0) AS ORDERVALUE_MTD,'
	--End of Rev 3.0
	--Rev 6.0
	--SET @Strsql+='0 AS DELIVERED,ISNULL(DISTANCE_COVERED,0) AS DISTANCE_COVERED FROM( '
	SET @Strsql+='ISNULL(DELIVERED,0) AS DELIVERED,ISNULL(ORDERCNT,0) AS ORDERCNT,ISNULL(BILLCNT,0) AS BILLCNT,ISNULL(DISTANCE_COVERED,0) AS DISTANCE_COVERED FROM( '	
	--End of Rev 6.0
	SET @Strsql+='SELECT CNT.cnt_internalId AS EMPCODE,ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS EMPNAME,ST.ID AS STATEID,ST.state AS STATE,'
	--Rev 1.0
	--SET @Strsql+='CASE WHEN LV.LESS_VISIT<10 THEN 1 ELSE 0 END AS LATE_LESSVISIT,DESG.DEG_ID,DESG.deg_designation AS DESIGNATION,USR.user_loginId AS CONTACTNO,RPTTOEMPCODE,RPTTO.REPORTTO,RPTTO.RPTTODESGID,'
	SET @Strsql+='CASE WHEN (LV.LESS_VISIT>7 AND LV.LESS_VISIT<10) THEN 1 ELSE 0 END AS LATE_LESSVISIT,CASE WHEN LV.LESS_VISIT<7 THEN 1 ELSE 0 END AS ABSENT_LESSVISIT,'
	SET @Strsql+='DESG.DEG_ID,DESG.deg_designation AS DESIGNATION,USR.user_loginId AS CONTACTNO,RPTTOEMPCODE,RPTTO.REPORTTO,RPTTO.RPTTODESGID,'
	--End of Rev 1.0
	--Rev 2.0
	--SET @Strsql+='RPTTO.RPTTODESG,EMP.emp_uniqueCode AS EMPID,ISNULL(ATTEN.LATE_CNT,0) AS LATE_CNT,('+LTRIM(RTRIM(STR(@NOOFDAYSINMONTH)))+'-'+LTRIM(RTRIM(STR(@NOOFSUNDAYS)))+')-(ATTEN.PRESENT_CNT) AS NOTLOGIN_CNT,'
	SET @Strsql+='RPTTO.RPTTODESG,EMP.emp_uniqueCode AS EMPID,ISNULL(ATTEN.LATE_CNT,0) AS LATE_CNT,'
	--Rev 7.0
	--SET @Strsql+='('+LTRIM(RTRIM(STR(@NOOFDAYSINMONTH)))+'-('+LTRIM(RTRIM(STR(@NOOFSUNDAYS)))+'-ATTEN.SUNDAY_CNT))-(ATTEN.PRESENT_CNT) AS NOTLOGIN_CNT,'
	SET @Strsql+='('+LTRIM(RTRIM(STR(@NOOFDAYSINMONTH)))+'-('+LTRIM(RTRIM(STR(@NOOFSUNDAYS)))+'-ATTEN.SUNDAY_CNT))-(ATTEN.PRESENT_CNT) AS NOTLOGIN_CNT,(ATTEN.PRESENT_CNT) AS PRESENT_CNT,'
	--End of Rev 7.0
	--End of Rev 2.0
	--Rev 3.0
	--SET @Strsql+='VISIT_TGT,VISITMTD_TGT,VISITMTD_TGT/'+LTRIM(RTRIM(STR(@NOOFDAYS,6,2)))+' AS AVG_VISITMTDTGT,ORDERVALUE_ACHV,ORDERVALUE_MTD,0 AS DELIVERED,DISTANCE_COVERED '
	--Rev 6.0
	--SET @Strsql+='VISIT_TGT,VISIT_ACHV,VISIT_ACHV/'+LTRIM(RTRIM(STR(@NOOFDAYS,6,2)))+' AS AVG_VISITACHV,ORDVAL_TGT,ORDERVALUE_MTD,0 AS DELIVERED,DISTANCE_COVERED '
	SET @Strsql+='VISIT_TGT,VISIT_ACHV,VISIT_ACHV/'+LTRIM(RTRIM(STR(@NOOFDAYS,6,2)))+' AS AVG_VISITACHV,ORDVAL_TGT,ORDERVALUE_MTD,BILLDET.BILLVALUE AS DELIVERED,ORDHEAD.ORDERCNT,BILLDET.BILLCNT,DISTANCE_COVERED '
	--End of Rev 6.0
	--End of Rev 3.0
	SET @Strsql+='FROM #TMPMASTEMPLOYEE EMP '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_contactId=EMP.emp_contactId AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN tbl_master_address ADDR ON ADDR.add_cntId=CNT.cnt_internalid AND ADDR.add_addressType=''Office'' '
	SET @Strsql+='INNER JOIN tbl_master_state ST ON ST.id=ADDR.add_state '
	--Rev 1.0
	--SET @Strsql+='INNER JOIN ('
	SET @Strsql+='LEFT OUTER JOIN ('
	--End of Rev 1.0
	SET @Strsql+='SELECT ATTEN.User_Id AS USERID,CNT.cnt_internalId FROM tbl_fts_UserAttendanceLoginlogout ATTEN '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ATTEN.User_Id AND USR.user_inactive=''N'' '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ATTEN.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	SET @Strsql+='GROUP BY ATTEN.User_Id,CNT.cnt_internalId) ATTENLOG ON ATTENLOG.cnt_internalId=CNT.cnt_internalId AND ATTENLOG.USERID=USR.user_id '
	--Rev 2.0
	--SET @Strsql+='LEFT OUTER JOIN (SELECT USERID,SUM(LATE_CNT) AS LATE_CNT,SUM(PRESENT_CNT) AS PRESENT_CNT FROM('
	--SET @Strsql+='SELECT USERID,0 AS PRESENT_CNT,COUNT(LATE_CNT) AS LATE_CNT FROM('
	SET @Strsql+='LEFT OUTER JOIN (SELECT USERID,SUM(LATE_CNT) AS LATE_CNT,SUM(PRESENT_CNT) AS PRESENT_CNT,SUM(SUNDAY_CNT) AS SUNDAY_CNT FROM('
	SET @Strsql+='SELECT USERID,0 AS PRESENT_CNT,COUNT(LATE_CNT) AS LATE_CNT,0 AS SUNDAY_CNT FROM('
	--End of Rev 2.0
	SET @Strsql+='SELECT A.User_Id AS USERID,0 AS PRESENT_CNT,'
	SET @Strsql+='CASE WHEN CAST(CAST(ISNULL(CAST((DATEPART(HOUR,ISNULL((Login_datetime),''00:00:00'')) * 60) AS FLOAT) + CAST(DATEPART(MINUTE,ISNULL((Login_datetime),''00:00:00'')) * 1 AS FLOAT),0) AS VARCHAR(100)) AS FLOAT)> '
	SET @Strsql+='CAST(CAST(ISNULL(CAST((DATEPART(HOUR,ISNULL(MIN(EMPWHD.BeginTime),''00:00:00'')) * 60) AS FLOAT) + '
	SET @Strsql+='CAST(DATEPART(MINUTE,ISNULL(MIN(EMPWHD.BeginTime),''00:00:00'')) * 1 AS FLOAT),0) AS VARCHAR(100)) AS FLOAT) + MIN(EMPWHD.Grace) THEN COUNT(0) ELSE 0 END LATE_CNT '
	SET @Strsql+='FROM tbl_fts_UserAttendanceLoginlogout AS A '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=A.User_Id '
	SET @Strsql+='INNER JOIN #TMPMASTEMPLOYEE EMP ON EMP.emp_contactId=USR.user_contactId '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMPCTC.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_EmpWorkingHours EMPWH ON EMPWH.Id=EMPCTC.emp_workinghours '
	SET @Strsql+='INNER JOIN('
	SET @Strsql+='SELECT DISTINCT hourId,BeginTime,Grace FROM tbl_EmpWorkingHoursDetails) EMPWHD ON EMPWHD.hourId=EMPWH.Id '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),A.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND A.Login_datetime IS NOT NULL AND A.Logout_datetime IS NULL AND A.Isonleave=''false'' '
	SET @Strsql+='GROUP BY A.User_Id,A.Login_datetime) A WHERE LATE_CNT>0 GROUP BY USERID '
	SET @Strsql+='UNION ALL '
	--Rev 2.0
	--SET @Strsql+='SELECT A.User_Id AS USERID,COUNT(A.Login_datetime) AS PRESENT_CNT,0 AS LATE_CNT FROM tbl_fts_UserAttendanceLoginlogout AS A '
	SET @Strsql+='SELECT A.User_Id AS USERID,COUNT(A.Login_datetime) AS PRESENT_CNT,0 AS LATE_CNT,0 AS SUNDAY_CNT FROM tbl_fts_UserAttendanceLoginlogout AS A '
	--Rev 2.0
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=A.User_Id '
	SET @Strsql+='INNER JOIN #TMPMASTEMPLOYEE EMP ON EMP.emp_contactId=USR.user_contactId '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMPCTC.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_EmpWorkingHours EMPWH ON EMPWH.Id=EMPCTC.emp_workinghours '
	SET @Strsql+='INNER JOIN('
	SET @Strsql+='SELECT DISTINCT hourId,BeginTime,Grace FROM tbl_EmpWorkingHoursDetails) EMPWHD ON EMPWHD.hourId=EMPWH.Id '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),A.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--Rev 5.0
	--SET @Strsql+='AND A.Login_datetime IS NOT NULL AND A.Logout_datetime IS NULL AND A.Isonleave=''false'' '
	SET @Strsql+='AND A.Login_datetime IS NOT NULL AND A.Logout_datetime IS NULL '
	--End of Rev 5.0
	SET @Strsql+='GROUP BY A.User_Id,A.Login_datetime '
	--Rev 2.0
	SET @Strsql+='UNION ALL '
	SET @Strsql+='SELECT A.User_Id AS USERID,0 AS PRESENT_CNT,0 AS LATE_CNT,COUNT(DISTINCT CONVERT(NVARCHAR(10),A.Login_datetime,120)) AS SUNDAY_CNT FROM tbl_fts_UserAttendanceLoginlogout AS A '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=A.User_Id '
	SET @Strsql+='INNER JOIN tbl_master_employee EMP ON EMP.emp_contactId=USR.user_contactId '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMPCTC.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_EmpWorkingHours EMPWH ON EMPWH.Id=EMPCTC.emp_workinghours '
	SET @Strsql+='INNER JOIN(SELECT DISTINCT hourId,BeginTime,Grace FROM tbl_EmpWorkingHoursDetails) EMPWHD ON EMPWHD.hourId=EMPWH.Id '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),A.Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),GETDATE(),120) '
	SET @Strsql+='AND A.Login_datetime IS NOT NULL AND A.Logout_datetime IS NULL AND A.Isonleave=''false'' '
	SET @Strsql+='AND EXISTS(SELECT CONVERT(NVARCHAR(10),SUNDAYDATE,120) AS SUNDAY FROM #TMPSHOWSUNDAY WHERE CONVERT(NVARCHAR(10),SUNDAYDATE,120)=CONVERT(NVARCHAR(10),A.Work_datetime,120))'
	SET @Strsql+='GROUP BY A.User_Id'
	--End of Rev 2.0
	SET @Strsql+=') A GROUP BY USERID) ATTEN ON ATTEN.USERID=USR.user_id '
	--Rev 3.0
	--SET @Strsql+='LEFT OUTER JOIN('
	--SET @Strsql+='SELECT EmployeeCode,SUM(VISIT_TGT) AS VISIT_TGT,SUM(VISITMTD_TGT) AS VISITMTD_TGT FROM('
	--SET @Strsql+='SELECT EmployeeCode,SUM(NewCounter+Revisit) AS VISIT_TGT,0 AS VISITMTD_TGT FROM tbl_FTS_EmployeesTargetSetting '
	--SET @Strsql+='WHERE CONVERT(NVARCHAR(10),'''+@TODATE+''',120) BETWEEN CONVERT(NVARCHAR(10),FromDate,120) AND CONVERT(NVARCHAR(10),ToDate,120) '
	--SET @Strsql+='GROUP BY EmployeeCode '
	--SET @Strsql+='UNION ALL '
	--SET @Strsql+='SELECT EmployeeCode,0 AS VISIT_TGT,SUM(NewCounter+Revisit) AS VISITMTD_TGT FROM tbl_FTS_EmployeesTargetSetting '
	--IF @MONTH=@CURRENTMONTHNAME
	--	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) BETWEEN CONVERT(NVARCHAR(10),FromDate,120) AND CONVERT(NVARCHAR(10),ToDate,120) '
	--ELSE IF @MONTH<>@CURRENTMONTHNAME
	--	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),'''+@TODATE+''',120) BETWEEN CONVERT(NVARCHAR(10),FromDate,120) AND CONVERT(NVARCHAR(10),ToDate,120) '
	--SET @Strsql+='GROUP BY EmployeeCode) TGTSET GROUP BY EmployeeCode '
	--SET @Strsql+=') EMPTGTSET ON EMPTGTSET.EmployeeCode=CNT.cnt_internalId '
	SET @Strsql+='LEFT OUTER JOIN('
	SET @Strsql+='SELECT EmployeeCode,SUM(NewCounter+Revisit) AS VISIT_TGT,SUM(OrderValue) AS ORDVAL_TGT FROM tbl_FTS_EmployeesTargetSetting '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),'''+@TODATE+''',120) BETWEEN CONVERT(NVARCHAR(10),FromDate,120) AND CONVERT(NVARCHAR(10),ToDate,120) '
	SET @Strsql+='GROUP BY EmployeeCode '
	SET @Strsql+=') EMPTGTSET ON EMPTGTSET.EmployeeCode=CNT.cnt_internalId '
	SET @Strsql+='LEFT OUTER JOIN ('
	SET @Strsql+='SELECT User_Id,cnt_internalId,SUM(NEWSHOPVISITED)+SUM(REVISITSHOP) AS VISIT_ACHV FROM('
	SET @Strsql+='SELECT SHOPACT.User_Id,CNT.cnt_internalId,COUNT(SHOPACT.Shop_Id) AS NEWSHOPVISITED,0 AS REVISITSHOP FROM tbl_trans_shopActivitysubmit SHOPACT '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=SHOPACT.User_Id '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT User_Id,CONVERT(NVARCHAR(10),Login_datetime,105) AS Login_datetime FROM tbl_fts_UserAttendanceLoginlogout WHERE Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY User_Id,CONVERT(NVARCHAR(10),Login_datetime,105))ATTEN ON ATTEN.User_Id=SHOPACT.User_Id AND ATTEN.Login_datetime=CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND SHOPACT.Is_Newshopadd=1 GROUP BY SHOPACT.User_Id,CNT.cnt_internalId '
	SET @Strsql+='UNION ALL '
	SET @Strsql+='SELECT SHOPACT.User_Id,CNT.cnt_internalId,0 AS NEWSHOPVISITED,COUNT(SHOPACT.Shop_Id) AS REVISITSHOP FROM tbl_trans_shopActivitysubmit SHOPACT '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=SHOPACT.User_Id '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT User_Id,CONVERT(NVARCHAR(10),Login_datetime,105) AS Login_datetime FROM tbl_fts_UserAttendanceLoginlogout WHERE Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY User_Id,CONVERT(NVARCHAR(10),Login_datetime,105))ATTEN ON ATTEN.User_Id=SHOPACT.User_Id AND ATTEN.Login_datetime=CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='AND SHOPACT.Is_Newshopadd=0 GROUP BY SHOPACT.User_Id,CNT.cnt_internalId '
	SET @Strsql+=') SHOPACT GROUP BY SHOPACT.User_Id,SHOPACT.cnt_internalId) SHOPACT ON SHOPACT.cnt_internalId=CNT.cnt_internalId '
	--End of Rev 3.0
	SET @Strsql+='LEFT OUTER JOIN (SELECT USER_ID,SUM(LESS_VISIT) AS LESS_VISIT FROM(SELECT SHOPACT.User_Id,'
	SET @Strsql+='CASE WHEN CAST(CAST(ISNULL(CAST((DATEPART(HOUR,ISNULL((ATTEN.Login_datetime),''00:00:00'')) * 60) AS FLOAT) + CAST(DATEPART(MINUTE,ISNULL((ATTEN.Login_datetime),''00:00:00'')) * 1 AS FLOAT),0) AS VARCHAR(100)) AS FLOAT)< '
	SET @Strsql+='CAST(CAST(ISNULL(CAST((DATEPART(HOUR,ISNULL(MIN(ATTEN.BeginTime),''00:00:00'')) * 60) AS FLOAT) + '
	SET @Strsql+='CAST(DATEPART(MINUTE,ISNULL(MIN(ATTEN.BeginTime),''00:00:00'')) * 1 AS FLOAT),0) AS VARCHAR(100)) AS FLOAT) + MIN(ATTEN.Grace) THEN COUNT(DISTINCT SHOPACT.SHOP_ID) ELSE 0 END AS LESS_VISIT '
	SET @Strsql+='FROM tbl_trans_shopActivitysubmit AS SHOPACT '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT A.User_Id,A.Login_datetime,MIN(EMPWHD.BeginTime) AS BeginTime,MIN(EMPWHD.Grace) AS Grace FROM tbl_fts_UserAttendanceLoginlogout A '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=A.User_Id '
	SET @Strsql+='INNER JOIN #TMPMASTEMPLOYEE EMP ON EMP.emp_contactId=USR.user_contactId '
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMPCTC.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN tbl_EmpWorkingHours EMPWH ON EMPWH.Id=EMPCTC.emp_workinghours '
	SET @Strsql+='INNER JOIN('
	SET @Strsql+='SELECT DISTINCT hourId,BeginTime,Grace FROM tbl_EmpWorkingHoursDetails) EMPWHD ON EMPWHD.hourId=EMPWH.Id '
	SET @Strsql+='WHERE Login_datetime IS NOT NULL AND Logout_datetime IS NULL AND Isonleave=''false'' '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='AND CONVERT(NVARCHAR(10),Work_datetime,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY A.User_Id,A.Login_datetime)ATTEN ON ATTEN.User_Id=SHOPACT.User_Id AND CONVERT(NVARCHAR(10),Login_datetime,105)=CONVERT(NVARCHAR(10),SHOPACT.visited_time,105) '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SHOPACT.visited_time,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY SHOPACT.User_Id,ATTEN.Login_datetime) AS A GROUP BY User_Id) LV ON LV.USER_ID=USR.user_id '
	--Rev 3.0
	--SET @Strsql+='LEFT OUTER JOIN ('
	--SET @Strsql+='SELECT ORDVAL.userID,ORDVAL.cnt_internalId,SUM(ORDVAL.ORDERVALUE_ACHV) AS ORDERVALUE_ACHV,SUM(ORDVAL.ORDERVALUE_MTD) AS ORDERVALUE_MTD FROM('
	--SET @Strsql+='SELECT ORDH.userID,CNT.cnt_internalId,SUM(ISNULL(Ordervalue,0)) AS ORDERVALUE_ACHV,0 AS ORDERVALUE_MTD FROM tbl_trans_fts_Orderupdate ORDH '
	--SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID '
	--SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	--SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--SET @Strsql+='GROUP BY ORDH.userID,CNT.cnt_internalId '
	--SET @Strsql+='UNION ALL '	
	--SET @Strsql+='SELECT ORDH.userID,CNT.cnt_internalId,0 AS ORDERVALUE_ACHV,SUM(ISNULL(Ordervalue,0)) AS ORDERVALUE_MTD FROM tbl_trans_fts_Orderupdate ORDH '
	--SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID '
	--SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	--IF @MONTH=@CURRENTMONTHNAME
	--	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	--ELSE IF @MONTH<>@CURRENTMONTHNAME
	--	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--SET @Strsql+='GROUP BY ORDH.userID,CNT.cnt_internalId) ORDVAL GROUP BY ORDVAL.userID,ORDVAL.cnt_internalId '	
	--SET @Strsql+=') ORDHEAD ON ORDHEAD.cnt_internalId=CNT.cnt_internalId '
	SET @Strsql+='LEFT OUTER JOIN ('
	--Rev 6.0
	--SET @Strsql+='SELECT ORDH.userID,CNT.cnt_internalId,SUM(ISNULL(Ordervalue,0)) AS ORDERVALUE_MTD FROM tbl_trans_fts_Orderupdate ORDH '
	SET @Strsql+='SELECT ORDH.userID,CNT.cnt_internalId,COUNT(OrderCode) AS ORDERCNT,SUM(ISNULL(Ordervalue,0)) AS ORDERVALUE_MTD FROM tbl_trans_fts_Orderupdate ORDH '
	--End of Rev 6.0
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=ORDH.userID '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	IF @MONTH=@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@CURRENTMONTHTODATE+''',120) '
	ELSE IF @MONTH<>@CURRENTMONTHNAME
		SET @Strsql+='WHERE CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY ORDH.userID,CNT.cnt_internalId '
	SET @Strsql+=') ORDHEAD ON ORDHEAD.cnt_internalId=CNT.cnt_internalId '
	--End of Rev 3.0
	--Rev 6.0
	SET @Strsql+='LEFT OUTER JOIN ('
	SET @Strsql+='SELECT BILLD.User_Id,CNT.cnt_internalId,COUNT(invoice_no) AS BILLCNT,SUM(ISNULL(BILLD.invoice_amount,0)) AS BILLVALUE FROM tbl_FTS_BillingDetails BILLD '
	SET @Strsql+='INNER JOIN tbl_trans_fts_Orderupdate ORDH ON BILLD.OrderCode=ORDH.OrderCode AND ORDH.userID=BILLD.User_Id '
	SET @Strsql+='AND CONVERT(NVARCHAR(10),ORDH.Orderdate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='INNER JOIN tbl_master_user USR ON USR.user_id=BILLD.User_Id '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=USR.user_contactId '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),BILLD.invoice_date,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='GROUP BY BILLD.User_Id,CNT.cnt_internalId '
	SET @Strsql+=') BILLDET ON BILLDET.cnt_internalId=CNT.cnt_internalId '
	--End of Rev 6.0
	SET @Strsql+='LEFT OUTER JOIN (SELECT User_Id,SUM(CAST(DISTANCE_COVERED AS DECIMAL(18,2))) AS DISTANCE_COVERED FROM tbl_trans_shopuser '
	--Rev 3.0
	--SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SDate,120)=CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	SET @Strsql+='WHERE CONVERT(NVARCHAR(10),SDate,120) BETWEEN CONVERT(NVARCHAR(10),'''+@FROMDATE+''',120) AND CONVERT(NVARCHAR(10),'''+@TODATE+''',120) '
	--End of Rev 3.0
	SET @Strsql+='GROUP BY User_Id) SHOPUSR ON SHOPUSR.user_id=USR.user_id '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC as cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE CNT.emp_effectiveuntil IS NULL GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='LEFT OUTER JOIN (SELECT EMPCTC.emp_cntId,EMPCTC.emp_reportTo,CNT.cnt_internalId AS RPTTOEMPCODE,'
	--Rev 4.0
	--SET @Strsql+='ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS REPORTTO,DESG.DEG_ID AS RPTTODESGID,DESG.deg_designation AS RPTTODESG FROM #TMPMASTEMPLOYEE EMP '
	SET @Strsql+='ISNULL(CNT.CNT_FIRSTNAME,'''')+'' ''+ISNULL(CNT.CNT_MIDDLENAME,'''')+'' ''+ISNULL(CNT.CNT_LASTNAME,'''') AS REPORTTO,DESG.DEG_ID AS RPTTODESGID,DESG.deg_designation AS RPTTODESG '
	SET @Strsql+='FROM tbl_master_employee EMP '
	--End of Rev 4.0
	SET @Strsql+='INNER JOIN tbl_trans_employeeCTC EMPCTC ON EMP.emp_id=EMPCTC.emp_reportTo '
	SET @Strsql+='INNER JOIN #TEMPCONTACT CNT ON CNT.cnt_internalId=EMP.emp_contactId '
	SET @Strsql+='INNER JOIN ('
	SET @Strsql+='SELECT cnt.emp_cntId,desg.deg_designation,MAX(emp_id) as emp_id,desg.deg_id FROM tbl_trans_employeeCTC as cnt '
	SET @Strsql+='LEFT OUTER JOIN tbl_master_designation desg ON desg.deg_id=cnt.emp_Designation WHERE CNT.emp_effectiveuntil IS NULL GROUP BY emp_cntId,desg.deg_designation,desg.deg_id) DESG ON DESG.emp_cntId=EMP.emp_contactId '
	SET @Strsql+='WHERE EMPCTC.emp_effectiveuntil IS NULL) RPTTO ON RPTTO.emp_cntId=CNT.cnt_internalId '
	SET @Strsql+='WHERE RPTTO.RPTTOEMPCODE IS NOT NULL '
	--SET @Strsql+='GROUP BY CNT.cnt_internalId,CNT.CNT_FIRSTNAME,CNT.CNT_MIDDLENAME,CNT.CNT_LASTNAME,ST.ID,ST.state,DESG.DEG_ID,DESG.deg_designation,USR.user_loginId,RPTTOEMPCODE,RPTTO.REPORTTO,RPTTO.RPTTODESGID,'
	--SET @Strsql+='RPTTO.RPTTODESG,EMP.emp_uniqueCode '
	SET @Strsql+=') AS DB '
	IF @STATEID<>'' AND @DESIGNID='' AND @EMPID=''
		SET @Strsql+='WHERE EXISTS (SELECT State_Id from #STATEID_LIST AS ST WHERE ST.State_Id=DB.STATEID) '
	ELSE IF @STATEID='' AND @DESIGNID<>'' AND @EMPID=''
		SET @Strsql+='WHERE EXISTS (SELECT deg_id from #DESIGNATION_LIST AS DS WHERE DS.deg_id=DB.deg_id) '
	ELSE IF @STATEID='' AND @DESIGNID='' AND @EMPID<>''
		SET @Strsql+='WHERE EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=DB.EMPCODE) '
	ELSE IF @STATEID<>'' AND @DESIGNID='' AND @EMPID<>''
		BEGIN
			SET @Strsql+='WHERE EXISTS (SELECT State_Id from #STATEID_LIST AS ST WHERE ST.State_Id=DB.STATEID) '
			SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=DB.EMPCODE) '
		END
	ELSE IF @STATEID='' AND @DESIGNID<>'' AND @EMPID<>''
		BEGIN
			SET @Strsql+='WHERE EXISTS (SELECT deg_id from #DESIGNATION_LIST AS DS WHERE DS.deg_id=DB.deg_id) '
			SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=DB.EMPCODE) '
		END
	ELSE IF @STATEID<>'' AND @DESIGNID<>'' AND @EMPID=''
		BEGIN
			SET @Strsql+='WHERE EXISTS (SELECT State_Id from #STATEID_LIST AS ST WHERE ST.State_Id=DB.STATEID) '
			SET @Strsql+='AND EXISTS (SELECT deg_id from #DESIGNATION_LIST AS DS WHERE DS.deg_id=DB.deg_id) '
		END
	ELSE IF @STATEID<>'' AND @DESIGNID<>'' AND @EMPID<>''
		BEGIN
			SET @Strsql+='WHERE EXISTS (SELECT State_Id from #STATEID_LIST AS ST WHERE ST.State_Id=DB.STATEID) '
			SET @Strsql+='AND EXISTS (SELECT deg_id from #DESIGNATION_LIST AS DS WHERE DS.deg_id=DB.deg_id) '
			SET @Strsql+='AND EXISTS (SELECT emp_contactId from #EMPLOYEE_LIST AS EMP WHERE EMP.emp_contactId=DB.EMPCODE) '
		END
	--SELECT @Strsql
	EXEC SP_EXECUTESQL @Strsql

	DROP TABLE #EMPHR
	DROP TABLE #EMPLOYEEHRLIST
	DROP TABLE #TMPMASTEMPLOYEE
	DROP TABLE #DESIGNATION_LIST
	DROP TABLE #EMPLOYEE_LIST
	DROP TABLE #STATEID_LIST
	DROP TABLE #TEMPCONTACT
	--Rev 2.0
	DROP TABLE #TMPSHOWSUNDAY
	--End of Rev 2.0
	-- Rev 9.0
	IF ((select IsAllDataInPortalwithHeirarchy from tbl_master_user where user_id=@USERID)=1)
	BEGIN
		DROP TABLE #EMPHR1
		DROP TABLE #EMPHR_EDIT
	END
	-- End of Rev 9.0
END